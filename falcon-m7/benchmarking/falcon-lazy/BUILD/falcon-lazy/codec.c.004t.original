
;; Function set_fpu_cw (null)
;; enabled by -tree-original


{
  return x;
}


;; Function fpr_ursh (null)
;; enabled by -tree-original


{
  x = (long long unsigned int) (x >> 32 ^ x) & -(long long unsigned int) (n >> 5) ^ (long long unsigned int) x;
  return x >> (n & 31);
}


;; Function fpr_irsh (null)
;; enabled by -tree-original


{
  x = (long long int) (x >> 32 ^ x) & -(long long int) (n >> 5) ^ (long long int) x;
  return x >> (n & 31);
}


;; Function fpr_ulsh (null)
;; enabled by -tree-original


{
  x = (long long unsigned int) (x << 32 ^ x) & -(long long unsigned int) (n >> 5) ^ (long long unsigned int) x;
  return x << (n & 31);
}


;; Function FPR (null)
;; enabled by -tree-original


{
  fpr x;
  uint32_t t;
  unsigned int f;

    fpr x;
    uint32_t t;
    unsigned int f;
  e = e + 1076;
  t = (long unsigned int) e >> 31;
  m = (long long unsigned int) t + 18446744073709551615 & (long long unsigned int) m;
  t = (long unsigned int) (m >> 54);
  e = -(int) t & e;
  x = ((long long unsigned int) s << 63 | (long long unsigned int) (m >> 2)) + ((long long unsigned int) (long unsigned int) e << 52);
  f = (unsigned int) m & 7;
  x = ((fpr) (200 >> f) & 1) + x;
  return x;
}


;; Function fpr_of (null)
;; enabled by -tree-original


{
  return falcon_inner_fpr_scaled (i, 0);
}


;; Function fpr_rint (null)
;; enabled by -tree-original


{
  uint64_t m;
  uint64_t d;
  int e;
  uint32_t s;
  uint32_t dd;
  uint32_t f;

    uint64_t m;
    uint64_t d;
    int e;
    uint32_t s;
    uint32_t dd;
    uint32_t f;
  m = (long long unsigned int) (x << 10) & 4611686018427387903 | 4611686018427387904;
  e = 1085 - ((int) (x >> 52) & 2047);
  m = -(long long unsigned int) ((long unsigned int) (e + -64) >> 31) & (long long unsigned int) m;
  e = e & 63;
  d = fpr_ulsh (m, 63 - e);
  dd = (long unsigned int) d | (long unsigned int) (d >> 32) & 536870911;
  f = (long unsigned int) (d >> 61) | (long unsigned int) ((-dd | dd) >> 31);
  m = (long long unsigned int) fpr_ursh (m, e) + ((long long unsigned int) (200 >> f) & 1);
  s = (long unsigned int) (x >> 63);
  return (int64_t) ((-(long long int) s ^ (long long int) m) + (long long int) s);
}


;; Function fpr_floor (null)
;; enabled by -tree-original


{
  uint64_t t;
  int64_t xi;
  int e;
  int cc;

    uint64_t t;
    int64_t xi;
    int e;
    int cc;
  e = (int) (x >> 52) & 2047;
  t = x >> 63;
  xi = (long long int) ((long long unsigned int) (x << 10) | 4611686018427387904) & 9223372036854775807;
  xi = (-(long long int) t ^ (long long int) xi) + (long long int) t;
  cc = 1085 - e;
  xi = fpr_irsh (xi, cc & 63);
  xi = (-(long long int) t ^ (long long int) xi) & -(long long int) ((long unsigned int) (63 - cc) >> 31) ^ (long long int) xi;
  return xi;
}


;; Function fpr_trunc (null)
;; enabled by -tree-original


{
  uint64_t t;
  uint64_t xu;
  int e;
  int cc;

    uint64_t t;
    uint64_t xu;
    int e;
    int cc;
  e = (int) (x >> 52) & 2047;
  xu = (long long unsigned int) (x << 10) & 4611686018427387903 | 4611686018427387904;
  cc = 1085 - e;
  xu = fpr_ursh (xu, cc & 63);
  xu = -(long long unsigned int) ((long unsigned int) (cc + -64) >> 31) & (long long unsigned int) xu;
  t = x >> 63;
  xu = (-t ^ xu) + t;
  return *(int64_t *) &xu;
}


;; Function fpr_sub (null)
;; enabled by -tree-original


{
  y = (long long unsigned int) y ^ 9223372036854775808;
  return falcon_inner_fpr_add (x, y);
}


;; Function fpr_neg (null)
;; enabled by -tree-original


{
  x = (long long unsigned int) x ^ 9223372036854775808;
  return x;
}


;; Function fpr_half (null)
;; enabled by -tree-original


{
  uint32_t t;

    uint32_t t;
  x = (long long unsigned int) x + 18442240474082181120;
  t = ((long unsigned int) (x >> 52) & 2047) + 1 >> 11;
  x = (long long unsigned int) t + 18446744073709551615 & (long long unsigned int) x;
  return x;
}


;; Function fpr_double (null)
;; enabled by -tree-original


{
  x = ((long long unsigned int) (((unsigned int) (x >> 52) & 2047) + 2047 >> 11) << 52) + (long long unsigned int) x;
  return x;
}


;; Function fpr_sqr (null)
;; enabled by -tree-original


{
  return falcon_inner_fpr_mul (x, x);
}


;; Function fpr_inv (null)
;; enabled by -tree-original


{
  return falcon_inner_fpr_div (4607182418800017408, x);
}


;; Function fpr_lt (null)
;; enabled by -tree-original


{
  int cc0;
  int cc1;

    int cc0;
    int cc1;
  cc0 = *(int64_t *) &x < *(int64_t *) &y;
  cc1 = *(int64_t *) &x > *(int64_t *) &y;
  return (cc0 ^ cc1) & (int) ((x & y) >> 63) ^ cc0;
}


;; Function prng_get_u64 (null)
;; enabled by -tree-original


{
  size_t u;

    size_t u;
  u = p->ptr;
  if (u > 502)
    {
      falcon_inner_prng_refill (p);
      u = 0;
    }
  p->ptr = u + 8;
  return (uint64_t) ((((((((long long unsigned int) p->buf.d[u] | (long long unsigned int) p->buf.d[u + 1] << 8) | (long long unsigned int) p->buf.d[u + 2] << 16) | (long long unsigned int) p->buf.d[u + 3] << 24) | (long long unsigned int) p->buf.d[u + 4] << 32) | (long long unsigned int) p->buf.d[u + 5] << 40) | (long long unsigned int) p->buf.d[u + 6] << 48) | (long long unsigned int) p->buf.d[u + 7] << 56);
}


;; Function prng_get_u8 (null)
;; enabled by -tree-original


{
  unsigned int v;

    unsigned int v;
  v = (unsigned int) p->buf.d[p->ptr++ ];
  if (p->ptr == 512)
    {
      falcon_inner_prng_refill (p);
    }
  return v;
}


;; Function falcon_inner_modq_encode (null)
;; enabled by -tree-original


{
  size_t n;
  size_t out_len;
  size_t u;
  uint8_t * buf;
  uint32_t acc;
  int acc_len;

    size_t n;
    size_t out_len;
    size_t u;
    uint8_t * buf;
    uint32_t acc;
    int acc_len;
  n = 1 << logn;
  u = 0;
  goto <D.6920>;
  <D.6919>:;
  if (*(x + (sizetype) (u * 2)) > 12288)
    {
      return 0;
    }
  u++ ;
  <D.6920>:;
  if (u < n) goto <D.6919>; else goto <D.6921>;
  <D.6921>:;
  out_len = n * 14 + 7 >> 3;
  if (out == 0B)
    {
      return out_len;
    }
  if (out_len > max_out_len)
    {
      return 0;
    }
  buf = (uint8_t *) out;
  acc = 0;
  acc_len = 0;
  u = 0;
  goto <D.6926>;
  <D.6925>:;
  acc = (long unsigned int) (acc << 14) | (long unsigned int) *(x + (sizetype) (u * 2));
  acc_len = acc_len + 14;
  goto <D.6923>;
  <D.6922>:;
  acc_len = acc_len + -8;
  *buf++  = (unsigned char) (acc >> acc_len);
  <D.6923>:;
  if (acc_len > 7) goto <D.6922>; else goto <D.6924>;
  <D.6924>:;
  u++ ;
  <D.6926>:;
  if (u < n) goto <D.6925>; else goto <D.6927>;
  <D.6927>:;
  if (acc_len > 0)
    {
      *buf = (unsigned char) (acc << 8 - acc_len);
    }
  return out_len;
}


;; Function falcon_inner_modq_decode (null)
;; enabled by -tree-original


{
  size_t n;
  size_t in_len;
  size_t u;
  const uint8_t * buf;
  uint32_t acc;
  int acc_len;

    size_t n;
    size_t in_len;
    size_t u;
    const uint8_t * buf;
    uint32_t acc;
    int acc_len;
  n = 1 << logn;
  in_len = n * 14 + 7 >> 3;
  if (in_len > max_in_len)
    {
      return 0;
    }
  buf = (const uint8_t *) in;
  acc = 0;
  acc_len = 0;
  u = 0;
  goto <D.6942>;
  <D.6941>:;
  acc = (long unsigned int) (acc << 8) | (long unsigned int) *buf++ ;
  acc_len = acc_len + 8;
  if (acc_len > 13)
    {
      {
        unsigned int w;

                unsigned int w;
        acc_len = acc_len + -14;
        w = (unsigned int) (acc >> acc_len) & 16383;
        if (w > 12288)
          {
            return 0;
          }
        *(x + (sizetype) (u++  * 2)) = (short unsigned int) w;
      }
    }
  <D.6942>:;
  if (u < n) goto <D.6941>; else goto <D.6943>;
  <D.6943>:;
  if ((~(4294967295 << acc_len) & (long unsigned int) acc) != 0)
    {
      return 0;
    }
  return in_len;
}


;; Function falcon_inner_trim_i16_encode (null)
;; enabled by -tree-original


{
  size_t n;
  size_t u;
  size_t out_len;
  int minv;
  int maxv;
  uint8_t * buf;
  uint32_t acc;
  uint32_t mask;
  unsigned int acc_len;

    size_t n;
    size_t u;
    size_t out_len;
    int minv;
    int maxv;
    uint8_t * buf;
    uint32_t acc;
    uint32_t mask;
    unsigned int acc_len;
  n = 1 << logn;
  maxv = (1 << bits + 4294967295) + -1;
  minv = -maxv;
  u = 0;
  goto <D.6961>;
  <D.6960>:;
  if ((int) *(x + (sizetype) (u * 2)) < minv || (int) *(x + (sizetype) (u * 2)) > maxv)
    {
      return 0;
    }
  u++ ;
  <D.6961>:;
  if (u < n) goto <D.6960>; else goto <D.6962>;
  <D.6962>:;
  out_len = n * (size_t) bits + 7 >> 3;
  if (out == 0B)
    {
      return out_len;
    }
  if (out_len > max_out_len)
    {
      return 0;
    }
  buf = (uint8_t *) out;
  acc = 0;
  acc_len = 0;
  mask = (1 << bits) + 4294967295;
  u = 0;
  goto <D.6967>;
  <D.6966>:;
  acc = (long unsigned int) (acc << bits) | (long unsigned int) (short unsigned int) *(x + (sizetype) (u * 2)) & (long unsigned int) mask;
  acc_len = acc_len + bits;
  goto <D.6964>;
  <D.6963>:;
  acc_len = acc_len + 4294967288;
  *buf++  = (unsigned char) (acc >> acc_len);
  <D.6964>:;
  if (acc_len > 7) goto <D.6963>; else goto <D.6965>;
  <D.6965>:;
  u++ ;
  <D.6967>:;
  if (u < n) goto <D.6966>; else goto <D.6968>;
  <D.6968>:;
  if (acc_len != 0)
    {
      *buf++  = (unsigned char) (acc << 8 - acc_len);
    }
  return out_len;
}


;; Function falcon_inner_trim_i16_decode (null)
;; enabled by -tree-original


{
  size_t n;
  size_t in_len;
  const uint8_t * buf;
  size_t u;
  uint32_t acc;
  uint32_t mask1;
  uint32_t mask2;
  unsigned int acc_len;

    size_t n;
    size_t in_len;
    const uint8_t * buf;
    size_t u;
    uint32_t acc;
    uint32_t mask1;
    uint32_t mask2;
    unsigned int acc_len;
  n = 1 << logn;
  in_len = n * (size_t) bits + 7 >> 3;
  if (in_len > max_in_len)
    {
      return 0;
    }
  buf = (const uint8_t *) in;
  u = 0;
  acc = 0;
  acc_len = 0;
  mask1 = (1 << bits) + 4294967295;
  mask2 = 1 << bits + 4294967295;
  goto <D.6989>;
  <D.6988>:;
  acc = (long unsigned int) (acc << 8) | (long unsigned int) *buf++ ;
  acc_len = acc_len + 8;
  goto <D.6986>;
  <D.6985>:;
  {
    uint32_t w;

        uint32_t w;
    acc_len = acc_len - bits;
    w = acc >> acc_len & mask1;
    w = -(w & mask2) | w;
    if (-mask2 == w)
      {
        return 0;
      }
    w = -(w & mask2) | w;
    *(x + (sizetype) (u++  * 2)) = (short int) *(int32_t *) &w;
  }
  <D.6986>:;
  if (acc_len >= bits && u < n) goto <D.6985>; else goto <D.6987>;
  <D.6987>:;
  <D.6989>:;
  if (u < n) goto <D.6988>; else goto <D.6990>;
  <D.6990>:;
  if ((~(4294967295 << acc_len) & (long unsigned int) acc) != 0)
    {
      return 0;
    }
  return in_len;
}


;; Function falcon_inner_trim_i8_encode (null)
;; enabled by -tree-original


{
  size_t n;
  size_t u;
  size_t out_len;
  int minv;
  int maxv;
  uint8_t * buf;
  uint32_t acc;
  uint32_t mask;
  unsigned int acc_len;

    size_t n;
    size_t u;
    size_t out_len;
    int minv;
    int maxv;
    uint8_t * buf;
    uint32_t acc;
    uint32_t mask;
    unsigned int acc_len;
  n = 1 << logn;
  maxv = (1 << bits + 4294967295) + -1;
  minv = -maxv;
  u = 0;
  goto <D.7008>;
  <D.7007>:;
  if ((int) *(x + (sizetype) u) < minv || (int) *(x + (sizetype) u) > maxv)
    {
      return 0;
    }
  u++ ;
  <D.7008>:;
  if (u < n) goto <D.7007>; else goto <D.7009>;
  <D.7009>:;
  out_len = n * (size_t) bits + 7 >> 3;
  if (out == 0B)
    {
      return out_len;
    }
  if (out_len > max_out_len)
    {
      return 0;
    }
  buf = (uint8_t *) out;
  acc = 0;
  acc_len = 0;
  mask = (1 << bits) + 4294967295;
  u = 0;
  goto <D.7014>;
  <D.7013>:;
  acc = (long unsigned int) (acc << bits) | (long unsigned int) (unsigned char) *(x + (sizetype) u) & (long unsigned int) mask;
  acc_len = acc_len + bits;
  goto <D.7011>;
  <D.7010>:;
  acc_len = acc_len + 4294967288;
  *buf++  = (unsigned char) (acc >> acc_len);
  <D.7011>:;
  if (acc_len > 7) goto <D.7010>; else goto <D.7012>;
  <D.7012>:;
  u++ ;
  <D.7014>:;
  if (u < n) goto <D.7013>; else goto <D.7015>;
  <D.7015>:;
  if (acc_len != 0)
    {
      *buf++  = (unsigned char) (acc << 8 - acc_len);
    }
  return out_len;
}


;; Function falcon_inner_trim_i8_decode (null)
;; enabled by -tree-original


{
  size_t n;
  size_t in_len;
  const uint8_t * buf;
  size_t u;
  uint32_t acc;
  uint32_t mask1;
  uint32_t mask2;
  unsigned int acc_len;

    size_t n;
    size_t in_len;
    const uint8_t * buf;
    size_t u;
    uint32_t acc;
    uint32_t mask1;
    uint32_t mask2;
    unsigned int acc_len;
  n = 1 << logn;
  in_len = n * (size_t) bits + 7 >> 3;
  if (in_len > max_in_len)
    {
      return 0;
    }
  buf = (const uint8_t *) in;
  u = 0;
  acc = 0;
  acc_len = 0;
  mask1 = (1 << bits) + 4294967295;
  mask2 = 1 << bits + 4294967295;
  goto <D.7036>;
  <D.7035>:;
  acc = (long unsigned int) (acc << 8) | (long unsigned int) *buf++ ;
  acc_len = acc_len + 8;
  goto <D.7033>;
  <D.7032>:;
  {
    uint32_t w;

        uint32_t w;
    acc_len = acc_len - bits;
    w = acc >> acc_len & mask1;
    w = -(w & mask2) | w;
    if (-mask2 == w)
      {
        return 0;
      }
    *(x + (sizetype) u++ ) = (signed char) *(int32_t *) &w;
  }
  <D.7033>:;
  if (acc_len >= bits && u < n) goto <D.7032>; else goto <D.7034>;
  <D.7034>:;
  <D.7036>:;
  if (u < n) goto <D.7035>; else goto <D.7037>;
  <D.7037>:;
  if ((~(4294967295 << acc_len) & (long unsigned int) acc) != 0)
    {
      return 0;
    }
  return in_len;
}


;; Function falcon_inner_comp_encode (null)
;; enabled by -tree-original


{
  uint8_t * buf;
  size_t n;
  size_t u;
  size_t v;
  uint32_t acc;
  unsigned int acc_len;

    uint8_t * buf;
    size_t n;
    size_t u;
    size_t v;
    uint32_t acc;
    unsigned int acc_len;
  n = 1 << logn;
  buf = (uint8_t *) out;
  u = 0;
  goto <D.7051>;
  <D.7050>:;
  if ((unsigned short) *(x + (sizetype) (u * 2)) + 2047 > 4094)
    {
      return 0;
    }
  u++ ;
  <D.7051>:;
  if (u < n) goto <D.7050>; else goto <D.7052>;
  <D.7052>:;
  acc = 0;
  acc_len = 0;
  v = 0;
  u = 0;
  goto <D.7059>;
  <D.7058>:;
  {
    int t;
    unsigned int w;

        int t;
        unsigned int w;
    acc = acc << 1;
    t = (int) *(x + (sizetype) (u * 2));
    if (t < 0)
      {
        t = -t;
        acc = (long unsigned int) acc | 1;
      }
    w = (unsigned int) t;
    acc = acc << 7;
    acc = (long unsigned int) w & 127 | (long unsigned int) acc;
    w = w >> 7;
    acc_len = acc_len + 8;
    acc = acc << w + 1;
    acc = (long unsigned int) acc | 1;
    acc_len = (w + acc_len) + 1;
    goto <D.7056>;
    <D.7055>:;
    acc_len = acc_len + 4294967288;
    if (buf != 0B)
      {
        if (v >= max_out_len)
          {
            return 0;
          }
        *(buf + (sizetype) v) = (unsigned char) (acc >> acc_len);
      }
    v++ ;
    <D.7056>:;
    if (acc_len > 7) goto <D.7055>; else goto <D.7057>;
    <D.7057>:;
  }
  u++ ;
  <D.7059>:;
  if (u < n) goto <D.7058>; else goto <D.7060>;
  <D.7060>:;
  if (acc_len != 0)
    {
      if (buf != 0B)
        {
          if (v >= max_out_len)
            {
              return 0;
            }
          *(buf + (sizetype) v) = (unsigned char) (acc << 8 - acc_len);
        }
      v++ ;
    }
  return v;
}


;; Function falcon_inner_comp_decode (null)
;; enabled by -tree-original


{
  const uint8_t * buf;
  size_t n;
  size_t u;
  size_t v;
  uint32_t acc;
  unsigned int acc_len;

    const uint8_t * buf;
    size_t n;
    size_t u;
    size_t v;
    uint32_t acc;
    unsigned int acc_len;
  n = 1 << logn;
  buf = (const uint8_t *) in;
  acc = 0;
  acc_len = 0;
  v = 0;
  u = 0;
  goto <D.7079>;
  <D.7078>:;
  {
    unsigned int b;
    unsigned int s;
    unsigned int m;

        unsigned int b;
        unsigned int s;
        unsigned int m;
    if (v >= max_in_len)
      {
        return 0;
      }
    acc = (long unsigned int) (acc << 8) | (long unsigned int) *(buf + (sizetype) v++ );
    b = (unsigned int) (acc >> acc_len);
    s = b & 128;
    m = b & 127;
    <D.7077>:;
    if (acc_len == 0)
      {
        if (v >= max_in_len)
          {
            return 0;
          }
        acc = (long unsigned int) (acc << 8) | (long unsigned int) *(buf + (sizetype) v++ );
        acc_len = 8;
      }
    acc_len-- ;
    if (((long unsigned int) (acc >> acc_len) & 1) != 0)
      {
        goto <D.7076>;
      }
    m = m + 128;
    if (m > 2047)
      {
        return 0;
      }
    goto <D.7077>;
    <D.7076>:;
    if (s != 0 && m == 0)
      {
        return 0;
      }
    *(x + (sizetype) (u * 2)) = s != 0 ? (short int) -(unsigned short) m : (short int) m;
  }
  u++ ;
  <D.7079>:;
  if (u < n) goto <D.7078>; else goto <D.7080>;
  <D.7080>:;
  if (((long unsigned int) ((1 << acc_len) + 4294967295) & (long unsigned int) acc) != 0)
    {
      return 0;
    }
  return v;
}

