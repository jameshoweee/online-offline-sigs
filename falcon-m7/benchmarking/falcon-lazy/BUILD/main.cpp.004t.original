
;; Function bool __gnu_cxx::__is_null_pointer(std::nullptr_t) (null)
;; enabled by -tree-original


return <retval> = 1;


;; Function constexpr __gnu_cxx::__ops::_Iter_less_iter __gnu_cxx::__ops::__iter_less_iter() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.12223, {}>>>;


;; Function __gnu_cxx::__ops::_Iter_less_val::_Iter_less_val(__gnu_cxx::__ops::_Iter_less_iter) (null)
;; enabled by -tree-original


{
  
}
<D.12263>:;
return this;


;; Function __gnu_cxx::__ops::_Iter_less_val __gnu_cxx::__ops::__iter_less_val() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.12300, {}>>>;


;; Function __gnu_cxx::__ops::_Iter_less_val __gnu_cxx::__ops::__iter_comp_val(__gnu_cxx::__ops::_Iter_less_iter) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.12305, {}>>>;


;; Function __gnu_cxx::__ops::_Val_less_iter::_Val_less_iter(__gnu_cxx::__ops::_Iter_less_iter) (null)
;; enabled by -tree-original


{
  
}
<D.12334>:;
return this;


;; Function __gnu_cxx::__ops::_Val_less_iter __gnu_cxx::__ops::__val_less_iter() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.12371, {}>>>;


;; Function __gnu_cxx::__ops::_Val_less_iter __gnu_cxx::__ops::__val_comp_iter(__gnu_cxx::__ops::_Iter_less_iter) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.12376, {}>>>;


;; Function __gnu_cxx::__ops::_Iter_equal_to_iter __gnu_cxx::__ops::__iter_equal_to_iter() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.12414, {}>>>;


;; Function __gnu_cxx::__ops::_Iter_equal_to_val __gnu_cxx::__ops::__iter_equal_to_val() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.12461, {}>>>;


;; Function __gnu_cxx::__ops::_Iter_equal_to_val __gnu_cxx::__ops::__iter_comp_val(__gnu_cxx::__ops::_Iter_equal_to_iter) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.12474, {}>>>;


;; Function constexpr int std::__size_to_integer(int) (null)
;; enabled by -tree-original


return <retval> = __n;


;; Function constexpr unsigned int std::__size_to_integer(unsigned int) (null)
;; enabled by -tree-original


return <retval> = __n;


;; Function constexpr long int std::__size_to_integer(long int) (null)
;; enabled by -tree-original


return <retval> = __n;


;; Function constexpr long unsigned int std::__size_to_integer(long unsigned int) (null)
;; enabled by -tree-original


return <retval> = __n;


;; Function constexpr long long int std::__size_to_integer(long long int) (null)
;; enabled by -tree-original


return <retval> = __n;


;; Function constexpr long long unsigned int std::__size_to_integer(long long unsigned int) (null)
;; enabled by -tree-original


return <retval> = __n;


;; Function constexpr long long int std::__size_to_integer(float) (null)
;; enabled by -tree-original


return <retval> = (long long int) __n;


;; Function constexpr long long int std::__size_to_integer(double) (null)
;; enabled by -tree-original


return <retval> = (long long int) __n;


;; Function constexpr long long int std::__size_to_integer(long double) (null)
;; enabled by -tree-original


return <retval> = (long long int) __n;


;; Function constexpr int std::__lg(int) (null)
;; enabled by -tree-original


return <retval> = 31 - __builtin_clz ((unsigned int) __n);


;; Function constexpr unsigned int std::__lg(unsigned int) (null)
;; enabled by -tree-original


return <retval> = (unsigned int) (31 - __builtin_clz (__n));


;; Function constexpr long int std::__lg(long int) (null)
;; enabled by -tree-original


return <retval> = (long int) (31 - __builtin_clzl ((long unsigned int) __n));


;; Function constexpr long unsigned int std::__lg(long unsigned int) (null)
;; enabled by -tree-original


return <retval> = (long unsigned int) (31 - __builtin_clzl (__n));


;; Function constexpr long long int std::__lg(long long int) (null)
;; enabled by -tree-original


return <retval> = (long long int) (63 - __builtin_clzll ((long long unsigned int) __n));


;; Function constexpr long long unsigned int std::__lg(long long unsigned int) (null)
;; enabled by -tree-original


return <retval> = (long long unsigned int) (63 - __builtin_clzll (__n));


;; Function wchar_t* std::wcschr(wchar_t*, wchar_t) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = wcschr ((const wchar_t *) __p, __c)>>;


;; Function wchar_t* std::wcspbrk(wchar_t*, const wchar_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = wcspbrk ((const wchar_t *) __s1, __s2)>>;


;; Function wchar_t* std::wcsrchr(wchar_t*, wchar_t) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = wcsrchr ((const wchar_t *) __p, __c)>>;


;; Function wchar_t* std::wcsstr(wchar_t*, const wchar_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = wcsstr ((const wchar_t *) __s1, __s2)>>;


;; Function wchar_t* std::wmemchr(wchar_t*, wchar_t, std::size_t) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = wmemchr ((const wchar_t *) __p, __c, __n)>>;


;; Function static void std::char_traits<char>::assign(std::char_traits<char>::char_type&, const char_type&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__c1 = (char_type) *__c2) >>>>>;


;; Function static constexpr bool std::char_traits<char>::eq(const char_type&, const char_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 == *__c2;


;; Function static constexpr bool std::char_traits<char>::lt(const char_type&, const char_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 < *__c2;


;; Function static int std::char_traits<char>::compare(const char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = 0;
  }
return <retval> = __builtin_memcmp ((const void *) __s1, (const void *) __s2, __n);


;; Function static std::size_t std::char_traits<char>::length(const char_type*) (null)
;; enabled by -tree-original


return <retval> = __builtin_strlen (__s);


;; Function static const char_type* std::char_traits<char>::find(const char_type*, std::size_t, const char_type&) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = 0B;
  }
return <retval> = (const char_type *) __builtin_memchr ((const void *) __s, (int) *__a, __n);


;; Function static std::char_traits<char>::char_type* std::char_traits<char>::move(std::char_traits<char>::char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s1;
  }
<<cleanup_point return <retval> = (char_type *) __builtin_memmove ((void *) __s1, (const void *) __s2, __n)>>;


;; Function static std::char_traits<char>::char_type* std::char_traits<char>::copy(std::char_traits<char>::char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s1;
  }
<<cleanup_point return <retval> = (char_type *) __builtin_memcpy ((void *) __s1, (const void *) __s2, __n)>>;


;; Function static std::char_traits<char>::char_type* std::char_traits<char>::assign(std::char_traits<char>::char_type*, std::size_t, std::char_traits<char>::char_type) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s;
  }
<<cleanup_point return <retval> = (char_type *) __builtin_memset ((void *) __s, (int) __a, __n)>>;


;; Function static constexpr std::char_traits<char>::char_type std::char_traits<char>::to_char_type(const int_type&) (null)
;; enabled by -tree-original


return <retval> = (char_type) *__c;


;; Function static constexpr std::char_traits<char>::int_type std::char_traits<char>::to_int_type(const char_type&) (null)
;; enabled by -tree-original


return <retval> = (int_type) *__c;


;; Function static constexpr bool std::char_traits<char>::eq_int_type(const int_type&, const int_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 == *__c2;


;; Function static constexpr std::char_traits<char>::int_type std::char_traits<char>::eof() (null)
;; enabled by -tree-original


return <retval> = -1;


;; Function static constexpr std::char_traits<char>::int_type std::char_traits<char>::not_eof(const int_type&) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = *__c != -1 ? (int_type) *__c : 0>>;


;; Function static void std::char_traits<wchar_t>::assign(std::char_traits<wchar_t>::char_type&, const char_type&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__c1 = (char_type) *__c2) >>>>>;


;; Function static constexpr bool std::char_traits<wchar_t>::eq(const char_type&, const char_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 == *__c2;


;; Function static constexpr bool std::char_traits<wchar_t>::lt(const char_type&, const char_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 < *__c2;


;; Function static int std::char_traits<wchar_t>::compare(const char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = 0;
  }
<<cleanup_point return <retval> = wmemcmp (__s1, __s2, __n)>>;


;; Function static std::size_t std::char_traits<wchar_t>::length(const char_type*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = wcslen (__s)>>;


;; Function static const char_type* std::char_traits<wchar_t>::find(const char_type*, std::size_t, const char_type&) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = 0B;
  }
<<cleanup_point return <retval> = (const char_type *) wmemchr (__s, (char_type) *__a, __n)>>;


;; Function static std::char_traits<wchar_t>::char_type* std::char_traits<wchar_t>::move(std::char_traits<wchar_t>::char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s1;
  }
<<cleanup_point return <retval> = (char_type *) wmemmove (__s1, __s2, __n)>>;


;; Function static std::char_traits<wchar_t>::char_type* std::char_traits<wchar_t>::copy(std::char_traits<wchar_t>::char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s1;
  }
<<cleanup_point return <retval> = (char_type *) wmemcpy (__s1, __s2, __n)>>;


;; Function static std::char_traits<wchar_t>::char_type* std::char_traits<wchar_t>::assign(std::char_traits<wchar_t>::char_type*, std::size_t, std::char_traits<wchar_t>::char_type) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s;
  }
<<cleanup_point return <retval> = (char_type *) wmemset (__s, __a, __n)>>;


;; Function static constexpr std::char_traits<wchar_t>::char_type std::char_traits<wchar_t>::to_char_type(const int_type&) (null)
;; enabled by -tree-original


return <retval> = (char_type) *__c;


;; Function static constexpr std::char_traits<wchar_t>::int_type std::char_traits<wchar_t>::to_int_type(const char_type&) (null)
;; enabled by -tree-original


return <retval> = (int_type) *__c;


;; Function static constexpr bool std::char_traits<wchar_t>::eq_int_type(const int_type&, const int_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 == *__c2;


;; Function static constexpr std::char_traits<wchar_t>::int_type std::char_traits<wchar_t>::eof() (null)
;; enabled by -tree-original


return <retval> = 4294967295;


;; Function static constexpr std::char_traits<wchar_t>::int_type std::char_traits<wchar_t>::not_eof(const int_type&) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::char_traits<wchar_t>::eq_int_type (__c, (const int_type &) &TARGET_EXPR <D.15113, 4294967295>) ? 0 : (int_type) *__c>>;


;; Function static void std::char_traits<char16_t>::assign(std::char_traits<char16_t>::char_type&, const char_type&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__c1 = (char_type) *__c2) >>>>>;


;; Function static constexpr bool std::char_traits<char16_t>::eq(const char_type&, const char_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 == *__c2;


;; Function static constexpr bool std::char_traits<char16_t>::lt(const char_type&, const char_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 < *__c2;


;; Function static int std::char_traits<char16_t>::compare(const char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


{
  {
    size_t __i = 0;

    <<cleanup_point     size_t __i = 0;>>;
    while (1)
      {
        if (__i >= __n) goto <D.15204>;
        if (<<cleanup_point std::char_traits<char16_t>::lt ((const char_type &) (__s1 + (sizetype) (__i * 2)), (const char_type &) (__s2 + (sizetype) (__i * 2)))>>)
          {
            return <retval> = -1;
          }
        else
          {
            if (<<cleanup_point std::char_traits<char16_t>::lt ((const char_type &) (__s2 + (sizetype) (__i * 2)), (const char_type &) (__s1 + (sizetype) (__i * 2)))>>)
              {
                return <retval> = 1;
              }
          }
        <<cleanup_point (void)  ++__i>>;
      }
    <D.15204>:;
  }
  return <retval> = 0;
}


;; Function static std::size_t std::char_traits<char16_t>::length(const char_type*) (null)
;; enabled by -tree-original


{
  size_t __i = 0;

  <<cleanup_point   size_t __i = 0;>>;
  while (1)
    {
      if (<<cleanup_point !std::char_traits<char16_t>::eq ((const char_type &) (__s + (sizetype) (__i * 2)), (const char_type &) &TARGET_EXPR <D.15208, 0>)>>) (void) 0; else goto <D.15209>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void)  ++__i >>>>>;
    }
  <D.15209>:;
  return <retval> = __i;
}


;; Function static const char_type* std::char_traits<char16_t>::find(const char_type*, std::size_t, const char_type&) (null)
;; enabled by -tree-original


{
  {
    size_t __i = 0;

    <<cleanup_point     size_t __i = 0;>>;
    while (1)
      {
        if (__i >= __n) goto <D.15213>;
        if (<<cleanup_point std::char_traits<char16_t>::eq ((const char_type &) (__s + (sizetype) (__i * 2)), __a)>>)
          {
            return <retval> = __s + (sizetype) (__i * 2);
          }
        <<cleanup_point (void)  ++__i>>;
      }
    <D.15213>:;
  }
  return <retval> = 0B;
}


;; Function static std::char_traits<char16_t>::char_type* std::char_traits<char16_t>::move(std::char_traits<char16_t>::char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s1;
  }
<<cleanup_point return <retval> = (char_type *) __builtin_memmove ((void *) __s1, (const void *) __s2, __n * 2)>>;


;; Function static std::char_traits<char16_t>::char_type* std::char_traits<char16_t>::copy(std::char_traits<char16_t>::char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s1;
  }
<<cleanup_point return <retval> = (char_type *) __builtin_memcpy ((void *) __s1, (const void *) __s2, __n * 2)>>;


;; Function static std::char_traits<char16_t>::char_type* std::char_traits<char16_t>::assign(std::char_traits<char16_t>::char_type*, std::size_t, std::char_traits<char16_t>::char_type) (null)
;; enabled by -tree-original


{
  {
    size_t __i = 0;

    <<cleanup_point     size_t __i = 0;>>;
    while (1)
      {
        if (__i >= __n) goto <D.15219>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<char16_t>::assign ((char_type &) (__s + (sizetype) (__i * 2)), (const char_type &) &__a) >>>>>;
        <<cleanup_point (void)  ++__i>>;
      }
    <D.15219>:;
  }
  return <retval> = __s;
}


;; Function static constexpr std::char_traits<char16_t>::char_type std::char_traits<char16_t>::to_char_type(const int_type&) (null)
;; enabled by -tree-original


return <retval> = (char_type) *__c;


;; Function static constexpr std::char_traits<char16_t>::int_type std::char_traits<char16_t>::to_int_type(const char_type&) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = *__c != (const char_type) std::char_traits<char16_t>::eof () ? (int_type) *__c : 65533>>;


;; Function static constexpr bool std::char_traits<char16_t>::eq_int_type(const int_type&, const int_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 == *__c2;


;; Function static constexpr std::char_traits<char16_t>::int_type std::char_traits<char16_t>::eof() (null)
;; enabled by -tree-original


return <retval> = 65535;


;; Function static constexpr std::char_traits<char16_t>::int_type std::char_traits<char16_t>::not_eof(const int_type&) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::char_traits<char16_t>::eq_int_type (__c, (const int_type &) &TARGET_EXPR <D.15234, 65535>) ? 0 : (int_type) *__c>>;


;; Function static void std::char_traits<char32_t>::assign(std::char_traits<char32_t>::char_type&, const char_type&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__c1 = (char_type) *__c2) >>>>>;


;; Function static constexpr bool std::char_traits<char32_t>::eq(const char_type&, const char_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 == *__c2;


;; Function static constexpr bool std::char_traits<char32_t>::lt(const char_type&, const char_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 < *__c2;


;; Function static int std::char_traits<char32_t>::compare(const char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


{
  {
    size_t __i = 0;

    <<cleanup_point     size_t __i = 0;>>;
    while (1)
      {
        if (__i >= __n) goto <D.15297>;
        if (<<cleanup_point std::char_traits<char32_t>::lt ((const char_type &) (__s1 + (sizetype) (__i * 4)), (const char_type &) (__s2 + (sizetype) (__i * 4)))>>)
          {
            return <retval> = -1;
          }
        else
          {
            if (<<cleanup_point std::char_traits<char32_t>::lt ((const char_type &) (__s2 + (sizetype) (__i * 4)), (const char_type &) (__s1 + (sizetype) (__i * 4)))>>)
              {
                return <retval> = 1;
              }
          }
        <<cleanup_point (void)  ++__i>>;
      }
    <D.15297>:;
  }
  return <retval> = 0;
}


;; Function static std::size_t std::char_traits<char32_t>::length(const char_type*) (null)
;; enabled by -tree-original


{
  size_t __i = 0;

  <<cleanup_point   size_t __i = 0;>>;
  while (1)
    {
      if (<<cleanup_point !std::char_traits<char32_t>::eq ((const char_type &) (__s + (sizetype) (__i * 4)), (const char_type &) &TARGET_EXPR <D.15301, 0>)>>) (void) 0; else goto <D.15302>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void)  ++__i >>>>>;
    }
  <D.15302>:;
  return <retval> = __i;
}


;; Function static const char_type* std::char_traits<char32_t>::find(const char_type*, std::size_t, const char_type&) (null)
;; enabled by -tree-original


{
  {
    size_t __i = 0;

    <<cleanup_point     size_t __i = 0;>>;
    while (1)
      {
        if (__i >= __n) goto <D.15306>;
        if (<<cleanup_point std::char_traits<char32_t>::eq ((const char_type &) (__s + (sizetype) (__i * 4)), __a)>>)
          {
            return <retval> = __s + (sizetype) (__i * 4);
          }
        <<cleanup_point (void)  ++__i>>;
      }
    <D.15306>:;
  }
  return <retval> = 0B;
}


;; Function static std::char_traits<char32_t>::char_type* std::char_traits<char32_t>::move(std::char_traits<char32_t>::char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s1;
  }
<<cleanup_point return <retval> = (char_type *) __builtin_memmove ((void *) __s1, (const void *) __s2, __n * 4)>>;


;; Function static std::char_traits<char32_t>::char_type* std::char_traits<char32_t>::copy(std::char_traits<char32_t>::char_type*, const char_type*, std::size_t) (null)
;; enabled by -tree-original


if (__n == 0)
  {
    return <retval> = __s1;
  }
<<cleanup_point return <retval> = (char_type *) __builtin_memcpy ((void *) __s1, (const void *) __s2, __n * 4)>>;


;; Function static std::char_traits<char32_t>::char_type* std::char_traits<char32_t>::assign(std::char_traits<char32_t>::char_type*, std::size_t, std::char_traits<char32_t>::char_type) (null)
;; enabled by -tree-original


{
  {
    size_t __i = 0;

    <<cleanup_point     size_t __i = 0;>>;
    while (1)
      {
        if (__i >= __n) goto <D.15312>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<char32_t>::assign ((char_type &) (__s + (sizetype) (__i * 4)), (const char_type &) &__a) >>>>>;
        <<cleanup_point (void)  ++__i>>;
      }
    <D.15312>:;
  }
  return <retval> = __s;
}


;; Function static constexpr std::char_traits<char32_t>::char_type std::char_traits<char32_t>::to_char_type(const int_type&) (null)
;; enabled by -tree-original


return <retval> = (char_type) *__c;


;; Function static constexpr std::char_traits<char32_t>::int_type std::char_traits<char32_t>::to_int_type(const char_type&) (null)
;; enabled by -tree-original


return <retval> = (int_type) *__c;


;; Function static constexpr bool std::char_traits<char32_t>::eq_int_type(const int_type&, const int_type&) (null)
;; enabled by -tree-original


return <retval> = *__c1 == *__c2;


;; Function static constexpr std::char_traits<char32_t>::int_type std::char_traits<char32_t>::eof() (null)
;; enabled by -tree-original


return <retval> = 4294967295;


;; Function static constexpr std::char_traits<char32_t>::int_type std::char_traits<char32_t>::not_eof(const int_type&) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::char_traits<char32_t>::eq_int_type (__c, (const int_type &) &TARGET_EXPR <D.15327, 4294967295>) ? 0 : (int_type) *__c>>;


;; Function std::exception::exception() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct exception *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct exception *) this)->_vptr.exception = &_ZTVSt9exception + 8) >>>>>;
}
<D.15393>:;
return this;


;; Function std::bad_exception::bad_exception() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct bad_exception *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::exception::exception (&((struct bad_exception *) this)->D.15421) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct bad_exception *) this)->D.15421._vptr.exception = &_ZTVSt13bad_exception + 8) >>>>>;
    }
  catch
    {
      (void) std::exception::~exception (&((struct bad_exception *) this)->D.15421);
    }
}
<D.15425>:;
return this;


;; Function const char* std::type_info::name() const (null)
;; enabled by -tree-original


return <retval> = *(const char *) ((const struct type_info *) this)->__name == 42 ? (const char *) ((const struct type_info *) this)->__name + 1 : (const char *) ((const struct type_info *) this)->__name;


;; Function bool std::type_info::operator!=(const std::type_info&) const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = !std::type_info::operator== ((const struct type_info *) this, __arg)>>;


;; Function std::size_t std::type_info::hash_code() const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::_Hash_bytes ((const void *) std::type_info::name ((const struct type_info *) this), __builtin_strlen (std::type_info::name ((const struct type_info *) this)), 3339675911)>>;


;; Function std::type_info::type_info(const char*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct type_info *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct type_info *) this)->_vptr.type_info = &_ZTVSt9type_info + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct type_info *) this)->__name = __n) >>>>>;
}
<D.15532>:;
return this;


;; Function std::bad_cast::bad_cast() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct bad_cast *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::exception::exception (&((struct bad_cast *) this)->D.15560) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct bad_cast *) this)->D.15560._vptr.exception = &_ZTVSt8bad_cast + 8) >>>>>;
    }
  catch
    {
      (void) std::exception::~exception (&((struct bad_cast *) this)->D.15560);
    }
}
<D.15564>:;
return this;


;; Function std::bad_typeid::bad_typeid() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct bad_typeid *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::exception::exception (&((struct bad_typeid *) this)->D.15592) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct bad_typeid *) this)->D.15592._vptr.exception = &_ZTVSt10bad_typeid + 8) >>>>>;
    }
  catch
    {
      (void) std::exception::~exception (&((struct bad_typeid *) this)->D.15592);
    }
}
<D.15596>:;
return this;


;; Function std::__exception_ptr::exception_ptr::exception_ptr(std::nullptr_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct exception_ptr *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct exception_ptr *) this)->_M_exception_object = 0B) >>>>>;
}
<D.15695>:;
return this;


;; Function std::__exception_ptr::exception_ptr::exception_ptr(std::__exception_ptr::exception_ptr&&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct exception_ptr *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct exception_ptr *) this)->_M_exception_object = __o->_M_exception_object) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__o->_M_exception_object = 0B) >>>>>;
}
<D.15702>:;
return this;


;; Function std::__exception_ptr::exception_ptr& std::__exception_ptr::exception_ptr::operator=(std::__exception_ptr::exception_ptr&&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__exception_ptr::exception_ptr::swap (&TARGET_EXPR <D.15709, <<< Unknown tree: aggr_init_expr
  5
  __ct_comp 
  D.15709
  (struct exception_ptr *) <<< Unknown tree: void_cst >>>
  NON_LVALUE_EXPR <__o> >>>>, (struct exception_ptr &) this) >>>>>;
return <retval> = (struct exception_ptr &) this;


;; Function std::__exception_ptr::exception_ptr::operator bool() const (null)
;; enabled by -tree-original


return <retval> = (void *) ((const struct exception_ptr *) this)->_M_exception_object != 0B;


;; Function void std::__exception_ptr::swap(std::__exception_ptr::exception_ptr&, std::__exception_ptr::exception_ptr&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__exception_ptr::exception_ptr::swap ((struct exception_ptr *) __lhs, __rhs) >>>>>;


;; Function std::nested_exception::nested_exception() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct nested_exception *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct nested_exception *) this)->_vptr.nested_exception = &_ZTVSt16nested_exception + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct nested_exception *) this)->_M_ptr = TARGET_EXPR <D.15780, <<< Unknown tree: aggr_init_expr
  3
  current_exception
  D.15780 >>>>) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) std::__exception_ptr::exception_ptr::~exception_ptr (&((struct nested_exception *) this)->_M_ptr);
    }
}
<D.15779>:;
return this;


;; Function void std::nested_exception::rethrow_nested() const (null)
;; enabled by -tree-original


if (<<cleanup_point std::__exception_ptr::exception_ptr::operator bool (&((const struct nested_exception *) this)->_M_ptr)>>)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::rethrow_exception (&TARGET_EXPR <D.15788, <<< Unknown tree: aggr_init_expr
  5
  __ct_comp 
  D.15788
  (struct exception_ptr *) <<< Unknown tree: void_cst >>>
  (const struct exception_ptr &) &((const struct nested_exception *) this)->_M_ptr >>>>) >>>>>;
  }
<<cleanup_point <<< Unknown tree: expr_stmt
  std::terminate () >>>>>;


;; Function std::__exception_ptr::exception_ptr std::nested_exception::nested_ptr() const (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.15790, <<< Unknown tree: aggr_init_expr
  5
  __ct_comp 
  D.15790
  (struct exception_ptr *) <<< Unknown tree: void_cst >>>
  (const struct exception_ptr &) &((const struct nested_exception *) this)->_M_ptr >>>>>>;


;; Function void std::__rethrow_if_nested_impl(const void*) (null)
;; enabled by -tree-original





;; Function std::bad_alloc::bad_alloc() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct bad_alloc *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::exception::exception (&((struct bad_alloc *) this)->D.15914) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct bad_alloc *) this)->D.15914._vptr.exception = &_ZTVSt9bad_alloc + 8) >>>>>;
    }
  catch
    {
      (void) std::exception::~exception (&((struct bad_alloc *) this)->D.15914);
    }
}
<D.15918>:;
return this;


;; Function std::bad_array_new_length::bad_array_new_length() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct bad_array_new_length *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::bad_alloc::bad_alloc (&((struct bad_array_new_length *) this)->D.15946) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct bad_array_new_length *) this)->D.15946.D.15914._vptr.exception = &_ZTVSt20bad_array_new_length + 8) >>>>>;
    }
  catch
    {
      (void) std::bad_alloc::~bad_alloc (&((struct bad_array_new_length *) this)->D.15946);
    }
}
<D.15950>:;
return this;


;; Function void* operator new(std::size_t, void*) (null)
;; enabled by -tree-original


return <retval> = __p;


;; Function void* operator new [](std::size_t, void*) (null)
;; enabled by -tree-original


return <retval> = __p;


;; Function void operator delete(void*, void*) (null)
;; enabled by -tree-original





;; Function void operator delete [](void*, void*) (null)
;; enabled by -tree-original





;; Function int std::__convert_from_v(int* const&, char*, int, const char*, ...) (null)
;; enabled by -tree-original


{
  char * __old;
  char * __sav = 0B;
  struct  __args;
  const int __ret;

    char * __old;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__old = setlocale (4, 0B)) >>>>>;
  <<cleanup_point   char * __sav = 0B;>>;
  {
    if (__builtin_strcmp ((const char *) __old, (const char *) "C") != 0)
      {
        {
          const size_t __len = __builtin_strlen ((const char *) __old) + 1;

                    const size_t __len = __builtin_strlen ((const char *) __old) + 1;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__sav = (char *) operator new [] ((size_t) __len)) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) __builtin_memcpy ((void *) __sav, (const void *) __old, (size_t) __len) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) setlocale (4, (const char *) "C") >>>>>;
        }
      }
  }
    struct  __args;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_start ((struct  &) &__args, __fmt) >>>>>;
    const int __ret;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = __builtin_vsnprintf (__out, (unsigned int) __size, __fmt, __args)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_end ((struct  &) &__args) >>>>>;
  if (__sav != 0B)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) setlocale (4, (const char *) __sav) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (if (__sav != 0B)
    {
      operator delete [] ((void *) __sav);
    }
  else
    {
      0
    }) >>>>>;
    }
  return <retval> = (int) __ret;
}


;; Function int __gthread_active_p() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function int __gthread_once(__gthread_once_t*, void (*)()) (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function int __gthread_key_create(__gthread_key_t*, void (*)(void*)) (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function int __gthread_key_delete(__gthread_key_t) (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function void* __gthread_getspecific(__gthread_key_t) (null)
;; enabled by -tree-original


return <retval> = 0B;


;; Function int __gthread_setspecific(__gthread_key_t, const void*) (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function int __gthread_mutex_destroy(__gthread_mutex_t*) (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function int __gthread_mutex_lock(__gthread_mutex_t*) (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function int __gthread_mutex_trylock(__gthread_mutex_t*) (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function int __gthread_mutex_unlock(__gthread_mutex_t*) (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gthread_mutex_lock (__mutex)>>;


;; Function int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gthread_mutex_trylock (__mutex)>>;


;; Function int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gthread_mutex_unlock (__mutex)>>;


;; Function int __gthread_recursive_mutex_destroy(__gthread_recursive_mutex_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gthread_mutex_destroy (__mutex)>>;


;; Function _Atomic_word __gnu_cxx::__exchange_and_add(volatile _Atomic_word*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (int) __atomic_fetch_add_4 ((volatile void *) __mem, (unsigned int) __val, 4)>>;


;; Function void __gnu_cxx::__atomic_add(volatile _Atomic_word*, int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (int) __atomic_fetch_add_4 ((volatile void *) __mem, (unsigned int) __val, 4) >>>>>;


;; Function _Atomic_word __gnu_cxx::__exchange_and_add_single(_Atomic_word*, int) (null)
;; enabled by -tree-original


{
  _Atomic_word __result = *__mem;

    _Atomic_word __result = *__mem;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__mem = *__mem + __val) >>>>>;
  return <retval> = __result;
}


;; Function void __gnu_cxx::__atomic_add_single(_Atomic_word*, int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__mem = *__mem + __val) >>>>>;


;; Function _Atomic_word __gnu_cxx::__exchange_and_add_dispatch(_Atomic_word*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__exchange_and_add_single (__mem, __val)>>;


;; Function void __gnu_cxx::__atomic_add_dispatch(_Atomic_word*, int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__atomic_add_single (__mem, __val) >>>>>;


;; Function long int std::abs(long int) (null)
;; enabled by -tree-original


return <retval> = ABS_EXPR <__i>;


;; Function long long int std::abs(long long int) (null)
;; enabled by -tree-original


return <retval> = ABS_EXPR <__x>;


;; Function constexpr double std::abs(double) (null)
;; enabled by -tree-original


return <retval> = ABS_EXPR <__x>;


;; Function constexpr float std::abs(float) (null)
;; enabled by -tree-original


return <retval> = ABS_EXPR <__x>;


;; Function constexpr long double std::abs(long double) (null)
;; enabled by -tree-original


return <retval> = ABS_EXPR <__x>;


;; Function ldiv_t std::div(long int, long int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.21765, ldiv (__i, __j)>>>;


;; Function lldiv_t __gnu_cxx::div(long long int, long long int) (null)
;; enabled by -tree-original


{
  struct lldiv_t __q [value-expr: <retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.quot = __n / __d) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (<retval>.rem = __n % __d) >>>>>;
  <<cleanup_point return <retval>>>;
}


;; Function int __sputc_r(_reent*, int, FILE*) (null)
;; enabled by -tree-original


if (<<cleanup_point  --_p->_w >= 0 || _p->_w >= _p->_lbfsize && (char) _c != 10>>)
  {
    <<cleanup_point return <retval> = (int) (*_p->_p++  = (unsigned char) _c)>>;
  }
else
  {
    <<cleanup_point return <retval> = __swbuf_r (_ptr, _c, _p)>>;
  }
__builtin_unreachable ();


;; Function int std::__cxx11::stoi(const string&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long int, int, char, int> (strtol, (const char *) "stoi", std::__cxx11::basic_string<char>::c_str ((const struct string *) __str), __idx, __base)>>;


;; Function long int std::__cxx11::stol(const string&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long int> (strtol, (const char *) "stol", std::__cxx11::basic_string<char>::c_str ((const struct string *) __str), __idx, __base)>>;


;; Function long unsigned int std::__cxx11::stoul(const string&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long unsigned int> (strtoul, (const char *) "stoul", std::__cxx11::basic_string<char>::c_str ((const struct string *) __str), __idx, __base)>>;


;; Function long long int std::__cxx11::stoll(const string&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long long int> (strtoll, (const char *) "stoll", std::__cxx11::basic_string<char>::c_str ((const struct string *) __str), __idx, __base)>>;


;; Function long long unsigned int std::__cxx11::stoull(const string&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long long unsigned int> (strtoull, (const char *) "stoull", std::__cxx11::basic_string<char>::c_str ((const struct string *) __str), __idx, __base)>>;


;; Function float std::__cxx11::stof(const string&, std::size_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<float> (strtof, (const char *) "stof", std::__cxx11::basic_string<char>::c_str ((const struct string *) __str), __idx)>>;


;; Function double std::__cxx11::stod(const string&, std::size_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<double> (strtod, (const char *) "stod", std::__cxx11::basic_string<char>::c_str ((const struct string *) __str), __idx)>>;


;; Function long double std::__cxx11::stold(const string&, std::size_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long double> (strtold, (const char *) "stold", std::__cxx11::basic_string<char>::c_str ((const struct string *) __str), __idx)>>;


;; Function std::string std::__cxx11::to_string(int) (null)
;; enabled by -tree-original


{
  const bool __neg = __val < 0;
  const unsigned int __uval = (bool) __neg ? -(unsigned int) __val : (unsigned int) __val;
  const unsigned int __len;
  struct string __str [value-expr: *<retval>];

    const bool __neg = __val < 0;
    const unsigned int __uval = (bool) __neg ? -(unsigned int) __val : (unsigned int) __val;
    const unsigned int __len;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__len = std::__detail::__to_chars_len<unsigned int> ((unsigned int) __uval, 10)) >>>>>;
  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::basic_string ((struct string *) <retval>, (unsigned int) __neg + (unsigned int) __len, 45, (const struct allocator &) &TARGET_EXPR <D.23906, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.23906
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__detail::__to_chars_10_impl<unsigned int> ((value_type *) std::__cxx11::basic_string<char>::operator[] ((struct string *) <retval>, (size_type) __neg), (unsigned int) __len, (unsigned int) __uval) >>>>>;
      <<cleanup_point return <retval>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::~basic_string ((struct string *) <retval>);
    }
  __builtin_unreachable ();
}


;; Function constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = unsigned int] (null)
;; enabled by -tree-original


{
  unsigned int __n = 1;
  const unsigned int __b2 = (unsigned int) (__base * __base);
  const unsigned int __b3 = (unsigned int) __b2 * (unsigned int) __base;
  const long unsigned int __b4 = (long unsigned int) ((unsigned int) __b3 * (unsigned int) __base);

  <<cleanup_point   unsigned int __n = 1;>>;
    const unsigned int __b2 = (unsigned int) (__base * __base);
    const unsigned int __b3 = (unsigned int) __b2 * (unsigned int) __base;
    const long unsigned int __b4 = (long unsigned int) ((unsigned int) __b3 * (unsigned int) __base);
  while (1)
    {
      if (__value < (unsigned int) __base)
        {
          return <retval> = __n;
        }
      if (__value < (unsigned int) __b2)
        {
          return <retval> = __n + 1;
        }
      if (__value < (unsigned int) __b3)
        {
          return <retval> = __n + 2;
        }
      if (__value < (unsigned int) __b4)
        {
          return <retval> = __n + 3;
        }
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__value = (unsigned int) ((long unsigned int) __value / (long unsigned int) __b4)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__n = __n + 4) >>>>>;
    }
  __builtin_unreachable ();
}


;; Function std::string std::__cxx11::to_string(unsigned int) (null)
;; enabled by -tree-original


{
  struct string __str [value-expr: *<retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::basic_string ((struct string *) <retval>, std::__detail::__to_chars_len<unsigned int> (__val, 10), 0, (const struct allocator &) &TARGET_EXPR <D.23925, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.23925
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__detail::__to_chars_10_impl<unsigned int> ((value_type *) std::__cxx11::basic_string<char>::operator[] ((struct string *) <retval>, 0), std::__cxx11::basic_string<char>::size ((struct string *) <retval>), __val) >>>>>;
      <<cleanup_point return <retval>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::~basic_string ((struct string *) <retval>);
    }
  __builtin_unreachable ();
}


;; Function std::string std::__cxx11::to_string(long int) (null)
;; enabled by -tree-original


{
  const bool __neg = __val < 0;
  const long unsigned int __uval = (bool) __neg ? -(long unsigned int) __val : (long unsigned int) __val;
  const unsigned int __len;
  struct string __str [value-expr: *<retval>];

    const bool __neg = __val < 0;
    const long unsigned int __uval = (bool) __neg ? -(long unsigned int) __val : (long unsigned int) __val;
    const unsigned int __len;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__len = std::__detail::__to_chars_len<long unsigned int> ((long unsigned int) __uval, 10)) >>>>>;
  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::basic_string ((struct string *) <retval>, (unsigned int) __neg + (unsigned int) __len, 45, (const struct allocator &) &TARGET_EXPR <D.23976, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.23976
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__detail::__to_chars_10_impl<long unsigned int> ((value_type *) std::__cxx11::basic_string<char>::operator[] ((struct string *) <retval>, (size_type) __neg), (unsigned int) __len, (long unsigned int) __uval) >>>>>;
      <<cleanup_point return <retval>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::~basic_string ((struct string *) <retval>);
    }
  __builtin_unreachable ();
}


;; Function constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = long unsigned int] (null)
;; enabled by -tree-original


{
  unsigned int __n = 1;
  const unsigned int __b2 = (unsigned int) (__base * __base);
  const unsigned int __b3 = (unsigned int) __b2 * (unsigned int) __base;
  const long unsigned int __b4 = (long unsigned int) ((unsigned int) __b3 * (unsigned int) __base);

  <<cleanup_point   unsigned int __n = 1;>>;
    const unsigned int __b2 = (unsigned int) (__base * __base);
    const unsigned int __b3 = (unsigned int) __b2 * (unsigned int) __base;
    const long unsigned int __b4 = (long unsigned int) ((unsigned int) __b3 * (unsigned int) __base);
  while (1)
    {
      if (__value < (long unsigned int) __base)
        {
          return <retval> = __n;
        }
      if (__value < (long unsigned int) __b2)
        {
          return <retval> = __n + 1;
        }
      if (__value < (long unsigned int) __b3)
        {
          return <retval> = __n + 2;
        }
      if (__value < (long unsigned int) __b4)
        {
          return <retval> = __n + 3;
        }
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__value = __value / (long unsigned int) __b4) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__n = __n + 4) >>>>>;
    }
  __builtin_unreachable ();
}


;; Function std::string std::__cxx11::to_string(long unsigned int) (null)
;; enabled by -tree-original


{
  struct string __str [value-expr: *<retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::basic_string ((struct string *) <retval>, std::__detail::__to_chars_len<long unsigned int> (__val, 10), 0, (const struct allocator &) &TARGET_EXPR <D.23986, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.23986
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__detail::__to_chars_10_impl<long unsigned int> ((value_type *) std::__cxx11::basic_string<char>::operator[] ((struct string *) <retval>, 0), std::__cxx11::basic_string<char>::size ((struct string *) <retval>), __val) >>>>>;
      <<cleanup_point return <retval>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::~basic_string ((struct string *) <retval>);
    }
  __builtin_unreachable ();
}


;; Function std::string std::__cxx11::to_string(long long int) (null)
;; enabled by -tree-original


{
  const bool __neg = __val < 0;
  const long long unsigned int __uval = (bool) __neg ? -(long long unsigned int) __val : (long long unsigned int) __val;
  const unsigned int __len;
  struct string __str [value-expr: *<retval>];

    const bool __neg = __val < 0;
    const long long unsigned int __uval = (bool) __neg ? -(long long unsigned int) __val : (long long unsigned int) __val;
    const unsigned int __len;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__len = std::__detail::__to_chars_len<long long unsigned int> ((long long unsigned int) __uval, 10)) >>>>>;
  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::basic_string ((struct string *) <retval>, (unsigned int) __neg + (unsigned int) __len, 45, (const struct allocator &) &TARGET_EXPR <D.24042, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.24042
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__detail::__to_chars_10_impl<long long unsigned int> ((value_type *) std::__cxx11::basic_string<char>::operator[] ((struct string *) <retval>, (size_type) __neg), (unsigned int) __len, (long long unsigned int) __uval) >>>>>;
      <<cleanup_point return <retval>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::~basic_string ((struct string *) <retval>);
    }
  __builtin_unreachable ();
}


;; Function constexpr unsigned int std::__detail::__to_chars_len(_Tp, int) [with _Tp = long long unsigned int] (null)
;; enabled by -tree-original


{
  unsigned int __n = 1;
  const unsigned int __b2 = (unsigned int) (__base * __base);
  const unsigned int __b3 = (unsigned int) __b2 * (unsigned int) __base;
  const long unsigned int __b4 = (long unsigned int) ((unsigned int) __b3 * (unsigned int) __base);

  <<cleanup_point   unsigned int __n = 1;>>;
    const unsigned int __b2 = (unsigned int) (__base * __base);
    const unsigned int __b3 = (unsigned int) __b2 * (unsigned int) __base;
    const long unsigned int __b4 = (long unsigned int) ((unsigned int) __b3 * (unsigned int) __base);
  while (1)
    {
      if ((long long unsigned int) (unsigned int) __base > __value)
        {
          return <retval> = __n;
        }
      if ((long long unsigned int) __b2 > __value)
        {
          return <retval> = __n + 1;
        }
      if ((long long unsigned int) __b3 > __value)
        {
          return <retval> = __n + 2;
        }
      if ((long long unsigned int) __b4 > __value)
        {
          return <retval> = __n + 3;
        }
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__value = __value / (long long unsigned int) __b4) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__n = __n + 4) >>>>>;
    }
  __builtin_unreachable ();
}


;; Function std::string std::__cxx11::to_string(long long unsigned int) (null)
;; enabled by -tree-original


{
  struct string __str [value-expr: *<retval>];

  (void) 0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::basic_string ((struct string *) <retval>, std::__detail::__to_chars_len<long long unsigned int> (__val, 10), 0, (const struct allocator &) &TARGET_EXPR <D.24052, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.24052
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>>) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__detail::__to_chars_10_impl<long long unsigned int> ((value_type *) std::__cxx11::basic_string<char>::operator[] ((struct string *) <retval>, 0), std::__cxx11::basic_string<char>::size ((struct string *) <retval>), __val) >>>>>;
      <<cleanup_point return <retval>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::~basic_string ((struct string *) <retval>);
    }
  __builtin_unreachable ();
}


;; Function std::string std::__cxx11::to_string(float) (null)
;; enabled by -tree-original


{
  const int __n = 58;

  <<cleanup_point   const int __n = 58;>>;
  <<cleanup_point return *<retval> = TARGET_EXPR <D.24136, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.24136
  vsnprintf
  58
  (const char *) "%f"
  (double) __val >>>>>>;
}


;; Function std::string std::__cxx11::to_string(double) (null)
;; enabled by -tree-original


{
  const int __n = 328;

  <<cleanup_point   const int __n = 328;>>;
  <<cleanup_point return *<retval> = TARGET_EXPR <D.24172, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.24172
  vsnprintf
  328
  (const char *) "%f"
  __val >>>>>>;
}


;; Function std::string std::__cxx11::to_string(long double) (null)
;; enabled by -tree-original


{
  const int __n = 328;

  <<cleanup_point   const int __n = 328;>>;
  <<cleanup_point return *<retval> = TARGET_EXPR <D.24208, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.24208
  vsnprintf
  328
  (const char *) "%Lf"
  __val >>>>>>;
}


;; Function int std::__cxx11::stoi(const wstring&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long int, int, wchar_t, int> (wcstol, (const char *) "stoi", std::__cxx11::basic_string<wchar_t>::c_str ((const struct wstring *) __str), __idx, __base)>>;


;; Function long int std::__cxx11::stol(const wstring&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long int> (wcstol, (const char *) "stol", std::__cxx11::basic_string<wchar_t>::c_str ((const struct wstring *) __str), __idx, __base)>>;


;; Function long unsigned int std::__cxx11::stoul(const wstring&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long unsigned int> (wcstoul, (const char *) "stoul", std::__cxx11::basic_string<wchar_t>::c_str ((const struct wstring *) __str), __idx, __base)>>;


;; Function long long int std::__cxx11::stoll(const wstring&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long long int> (wcstoll, (const char *) "stoll", std::__cxx11::basic_string<wchar_t>::c_str ((const struct wstring *) __str), __idx, __base)>>;


;; Function long long unsigned int std::__cxx11::stoull(const wstring&, std::size_t*, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long long unsigned int> (wcstoull, (const char *) "stoull", std::__cxx11::basic_string<wchar_t>::c_str ((const struct wstring *) __str), __idx, __base)>>;


;; Function float std::__cxx11::stof(const wstring&, std::size_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<float> (wcstof, (const char *) "stof", std::__cxx11::basic_string<wchar_t>::c_str ((const struct wstring *) __str), __idx)>>;


;; Function double std::__cxx11::stod(const wstring&, std::size_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<double> (wcstod, (const char *) "stod", std::__cxx11::basic_string<wchar_t>::c_str ((const struct wstring *) __str), __idx)>>;


;; Function long double std::__cxx11::stold(const wstring&, std::size_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::__stoa<long double> (wcstold, (const char *) "stold", std::__cxx11::basic_string<wchar_t>::c_str ((const struct wstring *) __str), __idx)>>;


;; Function std::wstring std::__cxx11::to_wstring(int) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.25263, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.25263
  vswprintf
  16
  (const wchar_t *) "%\x00\x00\x00d\x00\x00\x00\x00\x00\x00"
  __val >>>>>>;


;; Function std::wstring std::__cxx11::to_wstring(unsigned int) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.25329, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.25329
  vswprintf
  16
  (const wchar_t *) "%\x00\x00\x00u\x00\x00\x00\x00\x00\x00"
  __val >>>>>>;


;; Function std::wstring std::__cxx11::to_wstring(long int) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.25333, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.25333
  vswprintf
  16
  (const wchar_t *) "%\x00\x00\x00l\x00\x00\x00d\x00\x00\x00\x00\x00\x00"
  __val >>>>>>;


;; Function std::wstring std::__cxx11::to_wstring(long unsigned int) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.25337, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.25337
  vswprintf
  16
  (const wchar_t *) "%\x00\x00\x00l\x00\x00\x00u\x00\x00\x00\x00\x00\x00"
  __val >>>>>>;


;; Function std::wstring std::__cxx11::to_wstring(long long int) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.25341, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.25341
  vswprintf
  32
  (const wchar_t *) "%\x00\x00\x00l\x00\x00\x00l\x00\x00\x00d\x00\x00\x00\x00\x00\x00"
  __val >>>>>>;


;; Function std::wstring std::__cxx11::to_wstring(long long unsigned int) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.25345, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.25345
  vswprintf
  32
  (const wchar_t *) "%\x00\x00\x00l\x00\x00\x00l\x00\x00\x00u\x00\x00\x00\x00\x00\x00"
  __val >>>>>>;


;; Function std::wstring std::__cxx11::to_wstring(float) (null)
;; enabled by -tree-original


{
  const int __n = 58;

  <<cleanup_point   const int __n = 58;>>;
  <<cleanup_point return *<retval> = TARGET_EXPR <D.25350, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.25350
  vswprintf
  58
  (const wchar_t *) "%\x00\x00\x00f\x00\x00\x00\x00\x00\x00"
  (double) __val >>>>>>;
}


;; Function std::wstring std::__cxx11::to_wstring(double) (null)
;; enabled by -tree-original


{
  const int __n = 328;

  <<cleanup_point   const int __n = 328;>>;
  <<cleanup_point return *<retval> = TARGET_EXPR <D.25355, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.25355
  vswprintf
  328
  (const wchar_t *) "%\x00\x00\x00f\x00\x00\x00\x00\x00\x00"
  __val >>>>>>;
}


;; Function std::wstring std::__cxx11::to_wstring(long double) (null)
;; enabled by -tree-original


{
  const int __n = 328;

  <<cleanup_point   const int __n = 328;>>;
  <<cleanup_point return *<retval> = TARGET_EXPR <D.25360, <<< Unknown tree: aggr_init_expr
  7
  __to_xstring
  D.25360
  vswprintf
  328
  (const wchar_t *) "%\x00\x00\x00L\x00\x00\x00f\x00\x00\x00\x00\x00\x00"
  __val >>>>>>;
}


;; Function std::size_t std::hash<bool>::operator()(bool) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<char>::operator()(char) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<signed char>::operator()(signed char) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<unsigned char>::operator()(unsigned char) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<wchar_t>::operator()(wchar_t) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<char16_t>::operator()(char16_t) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<char32_t>::operator()(char32_t) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<short int>::operator()(short int) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<int>::operator()(int) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<long int>::operator()(long int) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<long long int>::operator()(long long int) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<short unsigned int>::operator()(short unsigned int) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<unsigned int>::operator()(unsigned int) const (null)
;; enabled by -tree-original


return <retval> = __val;


;; Function std::size_t std::hash<long unsigned int>::operator()(long unsigned int) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function std::size_t std::hash<long long unsigned int>::operator()(long long unsigned int) const (null)
;; enabled by -tree-original


return <retval> = (size_t) __val;


;; Function static std::size_t std::_Hash_impl::hash(const void*, std::size_t, std::size_t) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::_Hash_bytes (__ptr, __clength, __seed)>>;


;; Function static std::size_t std::_Fnv_hash_impl::hash(const void*, std::size_t, std::size_t) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::_Fnv_hash_bytes (__ptr, __clength, __seed)>>;


;; Function std::size_t std::hash<float>::operator()(float) const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __val != 0.0 ? std::_Hash_impl::hash<float> ((const float &) &__val) : 0>>;


;; Function std::size_t std::hash<double>::operator()(double) const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __val != 0.0 ? std::_Hash_impl::hash<double> ((const double &) &__val) : 0>>;


;; Function std::size_t std::hash<std::__cxx11::basic_string<char> >::operator()(const string&) const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::_Hash_impl::hash ((const void *) std::__cxx11::basic_string<char>::data ((const struct string *) __s), std::__cxx11::basic_string<char>::length ((const struct string *) __s), 3339675911)>>;


;; Function std::size_t std::hash<std::__cxx11::basic_string<wchar_t> >::operator()(const wstring&) const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::_Hash_impl::hash ((const void *) std::__cxx11::basic_string<wchar_t>::data ((const struct wstring *) __s), std::__cxx11::basic_string<wchar_t>::length ((const struct wstring *) __s) * 4, 3339675911)>>;


;; Function std::size_t std::hash<std::__cxx11::basic_string<char16_t> >::operator()(const u16string&) const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::_Hash_impl::hash ((const void *) std::__cxx11::basic_string<char16_t>::data ((const struct u16string *) __s), std::__cxx11::basic_string<char16_t>::length ((const struct u16string *) __s) * 2, 3339675911)>>;


;; Function std::size_t std::hash<std::__cxx11::basic_string<char32_t> >::operator()(const u32string&) const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::_Hash_impl::hash ((const void *) std::__cxx11::basic_string<char32_t>::data ((const struct u32string *) __s), std::__cxx11::basic_string<char32_t>::length ((const struct u32string *) __s) * 4, 3339675911)>>;


;; Function std::__cxx11::basic_string<char> std::literals::string_literals::operator""s(const char*, std::size_t) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.28007, <<< Unknown tree: aggr_init_expr
  7
  __ct_comp 
  D.28007
  (struct basic_string *) <<< Unknown tree: void_cst >>>
  __str
  __len
  (const struct allocator &) &TARGET_EXPR <D.28006, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.28006
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>> >>>>>>;


;; Function std::__cxx11::basic_string<wchar_t> std::literals::string_literals::operator""s(const wchar_t*, std::size_t) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.28014, <<< Unknown tree: aggr_init_expr
  7
  __ct_comp 
  D.28014
  (struct basic_string *) <<< Unknown tree: void_cst >>>
  __str
  __len
  (const struct allocator &) &TARGET_EXPR <D.28013, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.28013
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>> >>>>>>;


;; Function std::__cxx11::basic_string<char16_t> std::literals::string_literals::operator""s(const char16_t*, std::size_t) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.28074, <<< Unknown tree: aggr_init_expr
  7
  __ct_comp 
  D.28074
  (struct basic_string *) <<< Unknown tree: void_cst >>>
  __str
  __len
  (const struct allocator &) &TARGET_EXPR <D.28073, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.28073
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>> >>>>>>;


;; Function std::__cxx11::basic_string<char32_t> std::literals::string_literals::operator""s(const char32_t*, std::size_t) (null)
;; enabled by -tree-original


<<cleanup_point return *<retval> = TARGET_EXPR <D.28143, <<< Unknown tree: aggr_init_expr
  7
  __ct_comp 
  D.28143
  (struct basic_string *) <<< Unknown tree: void_cst >>>
  __str
  __len
  (const struct allocator &) &TARGET_EXPR <D.28142, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.28142
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>> >>>>>>;


;; Function void* std::memchr(void*, int, std::size_t) (null)
;; enabled by -tree-original


return <retval> = __builtin_memchr ((const void *) __s, __c, __n);


;; Function char* std::strchr(char*, int) (null)
;; enabled by -tree-original


return <retval> = __builtin_strchr ((const char *) __s, __n);


;; Function char* std::strpbrk(char*, const char*) (null)
;; enabled by -tree-original


return <retval> = __builtin_strpbrk ((const char *) __s1, __s2);


;; Function char* std::strrchr(char*, int) (null)
;; enabled by -tree-original


return <retval> = __builtin_strrchr ((const char *) __s, __n);


;; Function char* std::strstr(char*, const char*) (null)
;; enabled by -tree-original


return <retval> = __builtin_strstr ((const char *) __s1, __s2);


;; Function void __enable_irq() (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("cpsie i":::"memory")>>;


;; Function void __disable_irq() (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("cpsid i":::"memory")>>;


;; Function uint32_t __get_CONTROL() (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("MRS %0, control":"=r" result:)>>;
  return <retval> = result;
}


;; Function void __set_CONTROL(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("MSR control, %0"::"r" control:"memory")>>;


;; Function uint32_t __get_IPSR() (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("MRS %0, ipsr":"=r" result:)>>;
  return <retval> = result;
}


;; Function uint32_t __get_APSR() (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("MRS %0, apsr":"=r" result:)>>;
  return <retval> = result;
}


;; Function uint32_t __get_xPSR() (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("MRS %0, xpsr":"=r" result:)>>;
  return <retval> = result;
}


;; Function uint32_t __get_PSP() (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("MRS %0, psp":"=r" result:)>>;
  return <retval> = result;
}


;; Function void __set_PSP(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("MSR psp, %0"::"r" topOfProcStack)>>;


;; Function uint32_t __get_MSP() (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("MRS %0, msp":"=r" result:)>>;
  return <retval> = result;
}


;; Function void __set_MSP(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("MSR msp, %0"::"r" topOfMainStack)>>;


;; Function uint32_t __get_PRIMASK() (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("MRS %0, primask":"=r" result::"memory")>>;
  return <retval> = result;
}


;; Function void __set_PRIMASK(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("MSR primask, %0"::"r" priMask:"memory")>>;


;; Function void __enable_fault_irq() (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("cpsie f":::"memory")>>;


;; Function void __disable_fault_irq() (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("cpsid f":::"memory")>>;


;; Function uint32_t __get_BASEPRI() (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("MRS %0, basepri":"=r" result:)>>;
  return <retval> = result;
}


;; Function void __set_BASEPRI(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("MSR basepri, %0"::"r" basePri:"memory")>>;


;; Function void __set_BASEPRI_MAX(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("MSR basepri_max, %0"::"r" basePri:"memory")>>;


;; Function uint32_t __get_FAULTMASK() (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("MRS %0, faultmask":"=r" result:)>>;
  return <retval> = result;
}


;; Function void __set_FAULTMASK(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("MSR faultmask, %0"::"r" faultMask:"memory")>>;


;; Function uint32_t __get_FPSCR() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) __builtin_arm_get_fpscr ()>>;


;; Function void __set_FPSCR(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_arm_set_fpscr ((unsigned int) fpscr) >>>>>;


;; Function void __ISB() (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("isb 0xF":::"memory")>>;


;; Function void __DSB() (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("dsb 0xF":::"memory")>>;


;; Function void __DMB() (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("dmb 0xF":::"memory")>>;


;; Function uint32_t __REV(uint32_t) (null)
;; enabled by -tree-original


return <retval> = __builtin_bswap32 (value);


;; Function uint32_t __REV16(uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("rev16 %0, %1":"=r" result:"r" value)>>;
  return <retval> = result;
}


;; Function int16_t __REVSH(int16_t) (null)
;; enabled by -tree-original


return <retval> = (int16_t) __builtin_bswap16 ((short unsigned int) value);


;; Function uint32_t __ROR(uint32_t, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (op2 = op2 & 31) >>>>>;
if (op2 == 0)
  {
    return <retval> = op1;
  }
return <retval> = op1 r>> op2;


;; Function uint32_t __RBIT(uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("rbit %0, %1":"=r" result:"r" value)>>;
  return <retval> = result;
}


;; Function uint8_t __LDREXB(volatile uint8_t*) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("ldrexb %0, %1":"=r" result:"Q" *addr)>>;
  return <retval> = (uint8_t) result;
}


;; Function uint16_t __LDREXH(volatile uint16_t*) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("ldrexh %0, %1":"=r" result:"Q" *addr)>>;
  return <retval> = (uint16_t) result;
}


;; Function uint32_t __LDREXW(volatile uint32_t*) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("ldrex %0, %1":"=r" result:"Q" *addr)>>;
  return <retval> = result;
}


;; Function uint32_t __STREXB(uint8_t, volatile uint8_t*) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("strexb %0, %2, %1":"=&r" result, "=Q" *addr:"r" (uint32_t) value)>>;
  return <retval> = result;
}


;; Function uint32_t __STREXH(uint16_t, volatile uint16_t*) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("strexh %0, %2, %1":"=&r" result, "=Q" *addr:"r" (uint32_t) value)>>;
  return <retval> = result;
}


;; Function uint32_t __STREXW(uint32_t, volatile uint32_t*) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("strex %0, %2, %1":"=&r" result, "=Q" *addr:"r" value)>>;
  return <retval> = result;
}


;; Function void __CLREX() (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("clrex":::"memory")>>;


;; Function uint32_t __RRX(uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("rrx %0, %1":"=r" result:"r" value)>>;
  return <retval> = result;
}


;; Function uint8_t __LDRBT(volatile uint8_t*) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("ldrbt %0, %1":"=r" result:"Q" *ptr)>>;
  return <retval> = (uint8_t) result;
}


;; Function uint16_t __LDRHT(volatile uint16_t*) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("ldrht %0, %1":"=r" result:"Q" *ptr)>>;
  return <retval> = (uint16_t) result;
}


;; Function uint32_t __LDRT(volatile uint32_t*) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("ldrt %0, %1":"=r" result:"Q" *ptr)>>;
  return <retval> = result;
}


;; Function void __STRBT(uint8_t, volatile uint8_t*) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("strbt %1, %0":"=Q" *ptr:"r" (uint32_t) value)>>;


;; Function void __STRHT(uint16_t, volatile uint16_t*) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("strht %1, %0":"=Q" *ptr:"r" (uint32_t) value)>>;


;; Function void __STRT(uint32_t, volatile uint32_t*) (null)
;; enabled by -tree-original


<<cleanup_point __asm__ __volatile__("strt %1, %0":"=Q" *ptr:"r" value)>>;


;; Function uint32_t __SADD8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("sadd8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __QADD8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("qadd8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SHADD8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("shadd8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UADD8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uadd8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UQADD8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uqadd8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UHADD8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uhadd8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SSUB8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("ssub8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __QSUB8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("qsub8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SHSUB8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("shsub8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __USUB8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("usub8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UQSUB8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uqsub8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UHSUB8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uhsub8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SADD16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("sadd16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __QADD16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("qadd16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SHADD16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("shadd16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UADD16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uadd16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UQADD16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uqadd16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UHADD16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uhadd16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SSUB16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("ssub16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __QSUB16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("qsub16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SHSUB16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("shsub16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __USUB16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("usub16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UQSUB16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uqsub16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UHSUB16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uhsub16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SASX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("sasx %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __QASX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("qasx %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SHASX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("shasx %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UASX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uasx %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UQASX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uqasx %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UHASX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uhasx %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SSAX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("ssax %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __QSAX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("qsax %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SHSAX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("shsax %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __USAX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("usax %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UQSAX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uqsax %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __UHSAX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uhsax %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __USAD8(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("usad8 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __USADA8(uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("usada8 %0, %1, %2, %3":"=r" result:"r" op1, "r" op2, "r" op3)>>;
  return <retval> = result;
}


;; Function uint32_t __UXTB16(uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uxtb16 %0, %1":"=r" result:"r" op1)>>;
  return <retval> = result;
}


;; Function uint32_t __UXTAB16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("uxtab16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SXTB16(uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("sxtb16 %0, %1":"=r" result:"r" op1)>>;
  return <retval> = result;
}


;; Function uint32_t __SXTAB16(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("sxtab16 %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SMUAD(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("smuad %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SMUADX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("smuadx %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SMLAD(uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("smlad %0, %1, %2, %3":"=r" result:"r" op1, "r" op2, "r" op3)>>;
  return <retval> = result;
}


;; Function uint32_t __SMLADX(uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("smladx %0, %1, %2, %3":"=r" result:"r" op1, "r" op2, "r" op3)>>;
  return <retval> = result;
}


;; Function uint64_t __SMLALD(uint32_t, uint32_t, uint64_t) (null)
;; enabled by -tree-original


{
  typedef union llreg_u llreg_u;
  union llreg_u llr;

    union llreg_u llr;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (llr.w64 = acc) >>>>>;
  <<cleanup_point __asm__ __volatile__("smlald %0, %1, %2, %3":"=r" llr.w32[0], "=r" llr.w32[1]:"r" op1, "r" op2, "0" llr.w32[0], "1" llr.w32[1])>>;
  return <retval> = llr.w64;
}


;; Function uint64_t __SMLALDX(uint32_t, uint32_t, uint64_t) (null)
;; enabled by -tree-original


{
  typedef union llreg_u llreg_u;
  union llreg_u llr;

    union llreg_u llr;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (llr.w64 = acc) >>>>>;
  <<cleanup_point __asm__ __volatile__("smlaldx %0, %1, %2, %3":"=r" llr.w32[0], "=r" llr.w32[1]:"r" op1, "r" op2, "0" llr.w32[0], "1" llr.w32[1])>>;
  return <retval> = llr.w64;
}


;; Function uint32_t __SMUSD(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("smusd %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SMUSDX(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("smusdx %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function uint32_t __SMLSD(uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("smlsd %0, %1, %2, %3":"=r" result:"r" op1, "r" op2, "r" op3)>>;
  return <retval> = result;
}


;; Function uint32_t __SMLSDX(uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("smlsdx %0, %1, %2, %3":"=r" result:"r" op1, "r" op2, "r" op3)>>;
  return <retval> = result;
}


;; Function uint64_t __SMLSLD(uint32_t, uint32_t, uint64_t) (null)
;; enabled by -tree-original


{
  typedef union llreg_u llreg_u;
  union llreg_u llr;

    union llreg_u llr;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (llr.w64 = acc) >>>>>;
  <<cleanup_point __asm__ __volatile__("smlsld %0, %1, %2, %3":"=r" llr.w32[0], "=r" llr.w32[1]:"r" op1, "r" op2, "0" llr.w32[0], "1" llr.w32[1])>>;
  return <retval> = llr.w64;
}


;; Function uint64_t __SMLSLDX(uint32_t, uint32_t, uint64_t) (null)
;; enabled by -tree-original


{
  typedef union llreg_u llreg_u;
  union llreg_u llr;

    union llreg_u llr;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (llr.w64 = acc) >>>>>;
  <<cleanup_point __asm__ __volatile__("smlsldx %0, %1, %2, %3":"=r" llr.w32[0], "=r" llr.w32[1]:"r" op1, "r" op2, "0" llr.w32[0], "1" llr.w32[1])>>;
  return <retval> = llr.w64;
}


;; Function uint32_t __SEL(uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t result;

    uint32_t result;
  <<cleanup_point __asm__ __volatile__("sel %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function int32_t __QADD(int32_t, int32_t) (null)
;; enabled by -tree-original


{
  int32_t result;

    int32_t result;
  <<cleanup_point __asm__ __volatile__("qadd %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function int32_t __QSUB(int32_t, int32_t) (null)
;; enabled by -tree-original


{
  int32_t result;

    int32_t result;
  <<cleanup_point __asm__ __volatile__("qsub %0, %1, %2":"=r" result:"r" op1, "r" op2)>>;
  return <retval> = result;
}


;; Function int32_t __SMMLA(int32_t, int32_t, int32_t) (null)
;; enabled by -tree-original


{
  int32_t result;

    int32_t result;
  <<cleanup_point __asm__ __volatile__("smmla %0, %1, %2, %3":"=r" result:"r" op1, "r" op2, "r" op3)>>;
  return <retval> = result;
}


;; Function void __NVIC_SetPriorityGrouping(uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = PriorityGroup & 7;

    uint32_t reg_value;
    uint32_t PriorityGroupTmp = PriorityGroup & 7;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (reg_value = (uint32_t) 3758157056B->AIRCR) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (reg_value = reg_value & 63743) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (reg_value = (PriorityGroupTmp << 8 | reg_value) | 100270080) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->AIRCR = reg_value) >>>>>;
}


;; Function uint32_t __NVIC_GetPriorityGrouping() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) 3758157056B->AIRCR >> 8) & 7>>;


;; Function void __NVIC_EnableIRQ(IRQn_Type) (null)
;; enabled by -tree-original


if (IRQn >= 0)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758153984B->ISER[(uint32_t) IRQn >> 5] = (uint32_t) (1 << ((uint32_t) (unsigned char) IRQn & 31))) >>>>>;
  }


;; Function uint32_t __NVIC_GetEnableIRQ(IRQn_Type) (null)
;; enabled by -tree-original


if (IRQn >= 0)
  {
    <<cleanup_point return <retval> = (uint32_t) ((long unsigned int) 3758153984B->ISER[(uint32_t) IRQn >> 5] >> ((uint32_t) (unsigned char) IRQn & 31)) & 1>>;
  }
else
  {
    return <retval> = 0;
  }
__builtin_unreachable ();


;; Function void __NVIC_DisableIRQ(IRQn_Type) (null)
;; enabled by -tree-original


if (IRQn >= 0)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758153984B->ICER[(uint32_t) IRQn >> 5] = (uint32_t) (1 << ((uint32_t) (unsigned char) IRQn & 31))) >>>>>;
    <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
    <<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
  }


;; Function uint32_t __NVIC_GetPendingIRQ(IRQn_Type) (null)
;; enabled by -tree-original


if (IRQn >= 0)
  {
    <<cleanup_point return <retval> = (uint32_t) ((long unsigned int) 3758153984B->ISPR[(uint32_t) IRQn >> 5] >> ((uint32_t) (unsigned char) IRQn & 31)) & 1>>;
  }
else
  {
    return <retval> = 0;
  }
__builtin_unreachable ();


;; Function void __NVIC_SetPendingIRQ(IRQn_Type) (null)
;; enabled by -tree-original


if (IRQn >= 0)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758153984B->ISPR[(uint32_t) IRQn >> 5] = (uint32_t) (1 << ((uint32_t) (unsigned char) IRQn & 31))) >>>>>;
  }


;; Function void __NVIC_ClearPendingIRQ(IRQn_Type) (null)
;; enabled by -tree-original


if (IRQn >= 0)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758153984B->ICPR[(uint32_t) IRQn >> 5] = (uint32_t) (1 << ((uint32_t) (unsigned char) IRQn & 31))) >>>>>;
  }


;; Function uint32_t __NVIC_GetActive(IRQn_Type) (null)
;; enabled by -tree-original


if (IRQn >= 0)
  {
    <<cleanup_point return <retval> = (uint32_t) ((long unsigned int) 3758153984B->IABR[(uint32_t) IRQn >> 5] >> ((uint32_t) (unsigned char) IRQn & 31)) & 1>>;
  }
else
  {
    return <retval> = 0;
  }
__builtin_unreachable ();


;; Function void __NVIC_SetPriority(IRQn_Type, uint32_t) (null)
;; enabled by -tree-original


if (IRQn >= 0)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758153984B->IP[(uint32_t) IRQn] = (uint8_t) priority << 4) >>>>>;
  }
else
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->SHPR[((uint32_t) (unsigned char) IRQn & 15) + 4294967292] = (uint8_t) priority << 4) >>>>>;
  }


;; Function uint32_t __NVIC_GetPriority(IRQn_Type) (null)
;; enabled by -tree-original


if (IRQn >= 0)
  {
    <<cleanup_point return <retval> = (uint32_t) ((uint8_t) 3758153984B->IP[(uint32_t) IRQn] >> 4)>>;
  }
else
  {
    <<cleanup_point return <retval> = (uint32_t) ((uint8_t) 3758157056B->SHPR[((uint32_t) (unsigned char) IRQn & 15) + 4294967292] >> 4)>>;
  }
__builtin_unreachable ();


;; Function uint32_t NVIC_EncodePriority(uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t PriorityGroupTmp = PriorityGroup & 7;
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

    uint32_t PriorityGroupTmp = PriorityGroup & 7;
    uint32_t PreemptPriorityBits;
    uint32_t SubPriorityBits;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (PreemptPriorityBits = (uint32_t) MIN_EXPR <7 - PriorityGroupTmp, 4>) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (SubPriorityBits = PriorityGroupTmp + 4 > 6 ? PriorityGroupTmp + 4294967293 : 0) >>>>>;
  return <retval> = ((uint32_t) ((1 << PreemptPriorityBits) + 4294967295) & PreemptPriority) << SubPriorityBits | (uint32_t) ((1 << SubPriorityBits) + 4294967295) & SubPriority;
}


;; Function void NVIC_DecodePriority(uint32_t, uint32_t, uint32_t*, uint32_t*) (null)
;; enabled by -tree-original


{
  uint32_t PriorityGroupTmp = PriorityGroup & 7;
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

    uint32_t PriorityGroupTmp = PriorityGroup & 7;
    uint32_t PreemptPriorityBits;
    uint32_t SubPriorityBits;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (PreemptPriorityBits = (uint32_t) MIN_EXPR <7 - PriorityGroupTmp, 4>) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (SubPriorityBits = PriorityGroupTmp + 4 > 6 ? PriorityGroupTmp + 4294967293 : 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(uint32_t *) pPreemptPriority = Priority >> SubPriorityBits & (uint32_t) ((1 << PreemptPriorityBits) + 4294967295)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(uint32_t *) pSubPriority = (uint32_t) ((1 << SubPriorityBits) + 4294967295) & Priority) >>>>>;
}


;; Function void __NVIC_SetVector(IRQn_Type, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t * vectors;

    uint32_t * vectors;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (vectors = (uint32_t *) 3758157056B->VTOR) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(vectors + ((sizetype) IRQn + 16) * 4) = vector) >>>>>;
}


;; Function uint32_t __NVIC_GetVector(IRQn_Type) (null)
;; enabled by -tree-original


{
  uint32_t * vectors;

    uint32_t * vectors;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (vectors = (uint32_t *) 3758157056B->VTOR) >>>>>;
  return <retval> = *(vectors + ((sizetype) IRQn + 16) * 4);
}


;; Function void __NVIC_SystemReset() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->AIRCR = (uint32_t) ((long unsigned int) 3758157056B->AIRCR & 1792 | 100270084)) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
while (1)
  {
    <<cleanup_point __asm__ __volatile__("nop"::)>>;
  }


;; Function void ARM_MPU_Enable(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157200B->CTRL = MPU_Control | 1) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->SHCSR = (long unsigned int) 3758157056B->SHCSR | 65536) >>>>>;


;; Function void ARM_MPU_Disable() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->SHCSR = (long unsigned int) 3758157056B->SHCSR & 4294901759) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157200B->CTRL = (long unsigned int) 3758157200B->CTRL & 4294967294) >>>>>;


;; Function void ARM_MPU_ClrRegion(uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157200B->RNR = rnr) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157200B->RASR = 0) >>>>>;


;; Function void ARM_MPU_SetRegion(uint32_t, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157200B->RBAR = rbar) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157200B->RASR = rasr) >>>>>;


;; Function void ARM_MPU_SetRegionEx(uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157200B->RNR = rnr) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157200B->RBAR = rbar) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157200B->RASR = rasr) >>>>>;


;; Function void orderedCpy(volatile uint32_t*, const uint32_t*, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t i;

    uint32_t i;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (i = 0) >>>>>;
  while (1)
    {
      if (i >= len) goto <D.30202>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(dst + (sizetype) (i * 4)) = (uint32_t) *(src + (sizetype) (i * 4))) >>>>>;
      <<cleanup_point (void)  ++i>>;
    }
  <D.30202>:;
}


;; Function void ARM_MPU_Load(const ARM_MPU_Region_t*, uint32_t) (null)
;; enabled by -tree-original


{
  const uint32_t rowWordSize = 2;

  <<cleanup_point   const uint32_t rowWordSize = 2;>>;
  while (1)
    {
      if (cnt <= 4) goto <D.30209>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  orderedCpy (3758157212B, &table->RBAR, 8) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (table = table + 32) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (cnt = cnt + 4294967292) >>>>>;
    }
  <D.30209>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  orderedCpy (3758157212B, &table->RBAR, cnt * 2) >>>>>;
}


;; Function uint32_t SCB_GetFPUType() (null)
;; enabled by -tree-original


{
  uint32_t mvfr0;

    uint32_t mvfr0;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (mvfr0 = (uint32_t) 3758157056B->MVFR0) >>>>>;
  if ((mvfr0 & 4080) == 544)
    {
      return <retval> = 2;
    }
  else
    {
      if ((mvfr0 & 4080) == 32)
        {
          return <retval> = 1;
        }
      else
        {
          return <retval> = 0;
        }
    }
  __builtin_unreachable ();
}


;; Function void SCB_EnableICache() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->ICIALLU = 0) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->CCR = (long unsigned int) 3758157056B->CCR | 131072) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;


;; Function void SCB_DisableICache() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->CCR = (long unsigned int) 3758157056B->CCR & 4294836223) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->ICIALLU = 0) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;


;; Function void SCB_InvalidateICache() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->ICIALLU = 0) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;


;; Function void SCB_EnableDCache() (null)
;; enabled by -tree-original


{
  uint32_t ccsidr;
  uint32_t sets;
  uint32_t ways;

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->CSSELR = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ccsidr = (uint32_t) 3758157056B->CCSIDR) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (sets = ccsidr >> 13 & 32767) >>>>>;
  while (1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ways = ccsidr >> 3 & 1023) >>>>>;
      while (1)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->DCISW = sets << 5 & 16352 | ways << 30) >>>>>;
          if (<<cleanup_point ways--  != 0>>) (void) 0; else goto <D.30227>;
        }
      <D.30227>:;
      if (<<cleanup_point sets--  != 0>>) (void) 0; else goto <D.30225>;
    }
  <D.30225>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->CCR = (long unsigned int) 3758157056B->CCR | 65536) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
}


;; Function void SCB_DisableDCache() (null)
;; enabled by -tree-original


{
  uint32_t ccsidr;
  uint32_t sets;
  uint32_t ways;

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->CSSELR = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->CCR = (long unsigned int) 3758157056B->CCR & 4294901759) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ccsidr = (uint32_t) 3758157056B->CCSIDR) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (sets = ccsidr >> 13 & 32767) >>>>>;
  while (1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ways = ccsidr >> 3 & 1023) >>>>>;
      while (1)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->DCCISW = sets << 5 & 16352 | ways << 30) >>>>>;
          if (<<cleanup_point ways--  != 0>>) (void) 0; else goto <D.30236>;
        }
      <D.30236>:;
      if (<<cleanup_point sets--  != 0>>) (void) 0; else goto <D.30234>;
    }
  <D.30234>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
}


;; Function void SCB_InvalidateDCache() (null)
;; enabled by -tree-original


{
  uint32_t ccsidr;
  uint32_t sets;
  uint32_t ways;

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->CSSELR = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ccsidr = (uint32_t) 3758157056B->CCSIDR) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (sets = ccsidr >> 13 & 32767) >>>>>;
  while (1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ways = ccsidr >> 3 & 1023) >>>>>;
      while (1)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->DCISW = sets << 5 & 16352 | ways << 30) >>>>>;
          if (<<cleanup_point ways--  != 0>>) (void) 0; else goto <D.30245>;
        }
      <D.30245>:;
      if (<<cleanup_point sets--  != 0>>) (void) 0; else goto <D.30243>;
    }
  <D.30243>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
}


;; Function void SCB_CleanDCache() (null)
;; enabled by -tree-original


{
  uint32_t ccsidr;
  uint32_t sets;
  uint32_t ways;

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->CSSELR = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ccsidr = (uint32_t) 3758157056B->CCSIDR) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (sets = ccsidr >> 13 & 32767) >>>>>;
  while (1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ways = ccsidr >> 3 & 1023) >>>>>;
      while (1)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->DCCSW = sets << 5 & 16352 | ways << 30) >>>>>;
          if (<<cleanup_point ways--  != 0>>) (void) 0; else goto <D.30254>;
        }
      <D.30254>:;
      if (<<cleanup_point sets--  != 0>>) (void) 0; else goto <D.30252>;
    }
  <D.30252>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
}


;; Function void SCB_CleanInvalidateDCache() (null)
;; enabled by -tree-original


{
  uint32_t ccsidr;
  uint32_t sets;
  uint32_t ways;

    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->CSSELR = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ccsidr = (uint32_t) 3758157056B->CCSIDR) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (sets = ccsidr >> 13 & 32767) >>>>>;
  while (1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ways = ccsidr >> 3 & 1023) >>>>>;
      while (1)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->DCCISW = sets << 5 & 16352 | ways << 30) >>>>>;
          if (<<cleanup_point ways--  != 0>>) (void) 0; else goto <D.30263>;
        }
      <D.30263>:;
      if (<<cleanup_point sets--  != 0>>) (void) 0; else goto <D.30261>;
    }
  <D.30261>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
}


;; Function void SCB_InvalidateDCache_by_Addr(uint32_t*, int32_t) (null)
;; enabled by -tree-original


{
  int32_t op_size = dsize;
  uint32_t op_addr = (uint32_t) addr;
  int32_t linesize = 32;

    int32_t op_size = dsize;
    uint32_t op_addr = (uint32_t) addr;
  <<cleanup_point   int32_t linesize = 32;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  while (1)
    {
      if (op_size <= 0) goto <D.30272>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->DCIMVAC = op_addr) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (op_addr = op_addr + (uint32_t) linesize) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (op_size = op_size - linesize) >>>>>;
    }
  <D.30272>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
}


;; Function void SCB_CleanDCache_by_Addr(uint32_t*, int32_t) (null)
;; enabled by -tree-original


{
  int32_t op_size = dsize;
  uint32_t op_addr = (uint32_t) addr;
  int32_t linesize = 32;

    int32_t op_size = dsize;
    uint32_t op_addr = (uint32_t) addr;
  <<cleanup_point   int32_t linesize = 32;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  while (1)
    {
      if (op_size <= 0) goto <D.30281>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->DCCMVAC = op_addr) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (op_addr = op_addr + (uint32_t) linesize) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (op_size = op_size - linesize) >>>>>;
    }
  <D.30281>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
}


;; Function void SCB_CleanInvalidateDCache_by_Addr(uint32_t*, int32_t) (null)
;; enabled by -tree-original


{
  int32_t op_size = dsize;
  uint32_t op_addr = (uint32_t) addr;
  int32_t linesize = 32;

    int32_t op_size = dsize;
    uint32_t op_addr = (uint32_t) addr;
  <<cleanup_point   int32_t linesize = 32;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  while (1)
    {
      if (op_size <= 0) goto <D.30290>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157056B->DCCIMVAC = op_addr) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (op_addr = op_addr + (uint32_t) linesize) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (op_size = op_size - linesize) >>>>>;
    }
  <D.30290>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __DSB () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __ISB () >>>>>;
}


;; Function uint32_t SysTick_Config(uint32_t) (null)
;; enabled by -tree-original


if (ticks + 4294967295 > 16777215)
  {
    return <retval> = 1;
  }
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758153744B->LOAD = ticks + 4294967295) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  __NVIC_SetPriority (-1, 15) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758153744B->VAL = 0) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758153744B->CTRL = 7) >>>>>;
return <retval> = 0;


;; Function uint32_t ITM_SendChar(uint32_t) (null)
;; enabled by -tree-original


if (<<cleanup_point ((long unsigned int) 3758096384B->TCR & 1) != 0 && ((long unsigned int) 3758096384B->TER & 1) != 0>>)
  {
    while (1)
      {
        if (<<cleanup_point 3758096384B->PORT[0].u32 == 0>>) (void) 0; else goto <D.30299>;
        <<cleanup_point __asm__ __volatile__("nop"::)>>;
      }
    <D.30299>:;
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758096384B->PORT[0].u8 = (uint8_t) ch) >>>>>;
  }
return <retval> = ch;


;; Function int32_t ITM_ReceiveChar() (null)
;; enabled by -tree-original


{
  int32_t ch = -1;

  <<cleanup_point   int32_t ch = -1;>>;
  if (<<cleanup_point ITM_RxBuffer != 1520786085>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ch = (int32_t) ITM_RxBuffer) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ITM_RxBuffer = 1520786085) >>>>>;
    }
  return <retval> = ch;
}


;; Function int32_t ITM_CheckChar() (null)
;; enabled by -tree-original


if (<<cleanup_point ITM_RxBuffer == 1520786085>>)
  {
    return <retval> = 0;
  }
else
  {
    return <retval> = 1;
  }
__builtin_unreachable ();


;; Function void atomic_set_u32(volatile uint32_t*, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t newValue;

    uint32_t newValue;
  while (1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (newValue = __LDREXW (ptr) | mask) >>>>>;
      if (<<cleanup_point __STREXW (newValue, ptr) != 0>>) (void) 0; else goto <D.31172>;
    }
  <D.31172>:;
}


;; Function void atomic_clr_u32(volatile uint32_t*, uint32_t) (null)
;; enabled by -tree-original


{
  uint32_t newValue;

    uint32_t newValue;
  while (1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (newValue = __LDREXW (ptr) & ~mask) >>>>>;
      if (<<cleanup_point __STREXW (newValue, ptr) != 0>>) (void) 0; else goto <D.31179>;
    }
  <D.31179>:;
}


;; Function uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t data_reg_addr = 0;

  <<cleanup_point   register uint32_t data_reg_addr = 0;>>;
  if (Register == 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (data_reg_addr = (uint32_t) &ADCx->DR) >>>>>;
    }
  else
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (data_reg_addr = 1073816328) >>>>>;
    }
  return <retval> = data_reg_addr;
}


;; Function void LL_ADC_SetCommonClock(ADC_Common_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCxy_COMMON->CCR = (long unsigned int) ADCxy_COMMON->CCR & 4294770687 | CommonClock) >>>>>;


;; Function uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCxy_COMMON->CCR & 196608>>;


;; Function void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCxy_COMMON->CCR = (long unsigned int) ADCxy_COMMON->CCR & 4282384383 | PathInternal) >>>>>;


;; Function uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCxy_COMMON->CCR & 12582912>>;


;; Function void LL_ADC_SetResolution(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4244635647 | Resolution) >>>>>;


;; Function uint32_t LL_ADC_GetResolution(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR1 & 50331648>>;


;; Function void LL_ADC_SetDataAlignment(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 & 4294965247 | DataAlignment) >>>>>;


;; Function uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR2 & 2048>>;


;; Function void LL_ADC_SetSequencersScanMode(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4294967039 | ScanMode) >>>>>;


;; Function uint32_t LL_ADC_GetSequencersScanMode(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR1 & 256>>;


;; Function void LL_ADC_REG_SetTriggerSource(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 & 4043309055 | TriggerSource & 251658240) >>>>>;


;; Function uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t TriggerSource;
  register uint32_t ShiftExten = (long unsigned int) TriggerSource >> 26 & 12;

    register uint32_t TriggerSource;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (TriggerSource = (long unsigned int) ADCx->CR2 & 1056964608) >>>>>;
    register uint32_t ShiftExten = (long unsigned int) TriggerSource >> 26 & 12;
  return <retval> = ((long unsigned int) (16773120 << ShiftExten) & TriggerSource) & 251658240 | (long unsigned int) (17891328 << ShiftExten) & 805306368;
}


;; Function uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->CR2 & 805306368) == 0>>;


;; Function uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR2 & 805306368>>;


;; Function void LL_ADC_REG_SetSequencerLength(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->SQR1 = (long unsigned int) ADCx->SQR1 & 4279238655 | SequencerNbRanks) >>>>>;


;; Function uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->SQR1 & 15728640>>;


;; Function void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4294907903 | SeqDiscont) >>>>>;


;; Function uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR1 & 59392>>;


;; Function void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef*, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->SQR1 + (((Rank & 768) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (768))) << 2))) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*preg = *preg & (long unsigned int) ~(31 << (Rank & 31)) | (Channel & 31) << (Rank & 31)) >>>>>;
}


;; Function uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->SQR1 + (((Rank & 768) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (768))) << 2))) >>>>>;
  return <retval> = (uint32_t) ((*preg & (long unsigned int) (31 << (Rank & 31))) >> (Rank & 31));
}


;; Function void LL_ADC_REG_SetContinuousMode(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 & 4294967293 | Continuous) >>>>>;


;; Function uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR2 & 2>>;


;; Function void LL_ADC_REG_SetDMATransfer(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 & 4294966527 | DMATransfer) >>>>>;


;; Function uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR2 & 768>>;


;; Function void LL_ADC_REG_SetFlagEndOfConversion(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 & 4294966271 | EocSelection) >>>>>;


;; Function uint32_t LL_ADC_REG_GetFlagEndOfConversion(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR2 & 1024>>;


;; Function void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 & 4293984255 | TriggerSource & 983040) >>>>>;


;; Function uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t TriggerSource;
  register uint32_t ShiftExten = (long unsigned int) TriggerSource >> 18 & 12;

    register uint32_t TriggerSource;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (TriggerSource = (long unsigned int) ADCx->CR2 & 4128768) >>>>>;
    register uint32_t ShiftExten = (long unsigned int) TriggerSource >> 18 & 12;
  return <retval> = ((long unsigned int) (65520 << ShiftExten) & TriggerSource) & 983040 | (long unsigned int) (69888 << ShiftExten) & 3145728;
}


;; Function uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->CR2 & 3145728) == 0>>;


;; Function uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR2 & 3145728>>;


;; Function void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->JSQR = (long unsigned int) ADCx->JSQR & 4291821567 | SequencerNbRanks) >>>>>;


;; Function uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->JSQR & 3145728>>;


;; Function void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4294963199 | SeqDiscont) >>>>>;


;; Function uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR1 & 4096>>;


;; Function void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef*, uint32_t, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->JSQR = (long unsigned int) ADCx->JSQR & (long unsigned int) ~(31 << (Rank & 31)) | (Channel & 31) << (Rank & 31)) >>>>>;


;; Function uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) (((long unsigned int) ADCx->JSQR & (long unsigned int) (31 << (Rank & 31))) >> (Rank & 31))>>;


;; Function void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4294966271 | TrigAuto) >>>>>;


;; Function uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR1 & 1024>>;


;; Function void LL_ADC_INJ_SetOffset(ADC_TypeDef*, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->JOFR1 + (((Rank & 12288) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (12288))) << 2))) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*preg = *preg & 4294963200 | OffsetLevel) >>>>>;
}


;; Function uint32_t LL_ADC_INJ_GetOffset(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->JOFR1 + (((Rank & 12288) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (12288))) << 2))) >>>>>;
  return <retval> = *preg & 4095;
}


;; Function void LL_ADC_SetChannelSamplingTime(ADC_TypeDef*, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->SMPR1 + (((Channel & 33554432) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (33554432))) << 2))) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*preg = *preg & (long unsigned int) ~(7 << ((Channel & 32505856) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (32505856)))) | SamplingTime << ((Channel & 32505856) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (32505856)))) >>>>>;
}


;; Function uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->SMPR1 + (((Channel & 33554432) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (33554432))) << 2))) >>>>>;
  <<cleanup_point return <retval> = (uint32_t) ((*preg & (long unsigned int) (7 << ((Channel & 32505856) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (32505856))))) >> ((Channel & 32505856) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (32505856))))>>;
}


;; Function void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4282383840 | AWDChannelGroup) >>>>>;


;; Function uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCx->CR1 & 12583455>>;


;; Function void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef*, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg = (uint32_t *) ((uint32_t) &ADCx->HTR + (AWDThresholdsHighLow << 2));

    register uint32_t * preg = (uint32_t *) ((uint32_t) &ADCx->HTR + (AWDThresholdsHighLow << 2));
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*preg = *preg & 4294963200 | AWDThresholdValue) >>>>>;
}


;; Function uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg = (uint32_t *) ((uint32_t) &ADCx->HTR + (AWDThresholdsHighLow << 2));

    register uint32_t * preg = (uint32_t *) ((uint32_t) &ADCx->HTR + (AWDThresholdsHighLow << 2));
  return <retval> = *preg & 4095;
}


;; Function void LL_ADC_SetMultimode(ADC_Common_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCxy_COMMON->CCR = (long unsigned int) ADCxy_COMMON->CCR & 4294967264 | Multimode) >>>>>;


;; Function uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCxy_COMMON->CCR & 31>>;


;; Function void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCxy_COMMON->CCR = (long unsigned int) ADCxy_COMMON->CCR & 4294909951 | MultiDMATransfer) >>>>>;


;; Function uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCxy_COMMON->CCR & 57344>>;


;; Function void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCxy_COMMON->CCR = (long unsigned int) ADCxy_COMMON->CCR & 4294963455 | MultiTwoSamplingDelay) >>>>>;


;; Function uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ADCxy_COMMON->CCR & 3840>>;


;; Function void LL_ADC_Enable(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 | 1) >>>>>;


;; Function void LL_ADC_Disable(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 & 4294967294) >>>>>;


;; Function uint32_t LL_ADC_IsEnabled(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->CR2 & 1) == 1>>;


;; Function void LL_ADC_REG_StartConversionSWStart(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 | 1073741824) >>>>>;


;; Function void LL_ADC_REG_StartConversionExtTrig(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 | ExternalTriggerEdge) >>>>>;


;; Function void LL_ADC_REG_StopConversionExtTrig(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 & 3489660927) >>>>>;


;; Function uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) (uint16_t) ADCx->DR>>;


;; Function uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint16_t) ADCx->DR>>;


;; Function uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint16_t) ADCx->DR>>;


;; Function uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint8_t) ADCx->DR>>;


;; Function uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint8_t) ADCx->DR>>;


;; Function uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) (((long unsigned int) ADCxy_COMMON->CDR & 4294901760) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (ConversionData)))>>;


;; Function void LL_ADC_INJ_StartConversionSWStart(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 | 4194304) >>>>>;


;; Function void LL_ADC_INJ_StartConversionExtTrig(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 | ExternalTriggerEdge) >>>>>;


;; Function void LL_ADC_INJ_StopConversionExtTrig(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR2 = (long unsigned int) ADCx->CR2 & 4291821567) >>>>>;


;; Function uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->JDR1 + (((Rank & 768) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (768))) << 2))) >>>>>;
  return <retval> = *preg & 65535;
}


;; Function uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->JDR1 + (((Rank & 768) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (768))) << 2))) >>>>>;
  return <retval> = (uint16_t) *preg;
}


;; Function uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->JDR1 + (((Rank & 768) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (768))) << 2))) >>>>>;
  return <retval> = (uint16_t) *preg;
}


;; Function uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->JDR1 + (((Rank & 768) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (768))) << 2))) >>>>>;
  return <retval> = (uint8_t) *preg;
}


;; Function uint8_t LL_ADC_INJ_ReadConversionData6(ADC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t * preg;

    register uint32_t * preg;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (preg = (uint32_t *) ((uint32_t) &ADCx->JDR1 + (((Rank & 768) >> (int) (uint8_t) __builtin_clz ((unsigned int) __RBIT (768))) << 2))) >>>>>;
  return <retval> = (uint8_t) *preg;
}


;; Function uint32_t LL_ADC_IsActiveFlag_EOCS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->SR & 2) == 2>>;


;; Function uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->SR & 32) == 32>>;


;; Function uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->SR & 4) == 4>>;


;; Function uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->SR & 1) == 1>>;


;; Function void LL_ADC_ClearFlag_EOCS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->SR = 4294967293) >>>>>;


;; Function void LL_ADC_ClearFlag_OVR(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->SR = 4294967263) >>>>>;


;; Function void LL_ADC_ClearFlag_JEOS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->SR = 4294967291) >>>>>;


;; Function void LL_ADC_ClearFlag_AWD1(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->SR = 4294967294) >>>>>;


;; Function uint32_t LL_ADC_IsActiveFlag_MST_EOCS(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) 1073815552B->SR & 2) == 2>>;


;; Function uint32_t LL_ADC_IsActiveFlag_SLV1_EOCS(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 512) == 512>>;


;; Function uint32_t LL_ADC_IsActiveFlag_SLV2_EOCS(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 131072) == 131072>>;


;; Function uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 32) == 32>>;


;; Function uint32_t LL_ADC_IsActiveFlag_SLV1_OVR(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 8192) == 8192>>;


;; Function uint32_t LL_ADC_IsActiveFlag_SLV2_OVR(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 2097152) == 2097152>>;


;; Function uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 4) == 4>>;


;; Function uint32_t LL_ADC_IsActiveFlag_SLV1_JEOS(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 1024) == 1024>>;


;; Function uint32_t LL_ADC_IsActiveFlag_SLV2_JEOS(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 262144) == 262144>>;


;; Function uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 1) == 1>>;


;; Function uint32_t LL_ADC_IsActiveFlag_SLV1_AWD1(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 256) == 256>>;


;; Function uint32_t LL_ADC_IsActiveFlag_SLV2_AWD1(ADC_Common_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCxy_COMMON->CSR & 65536) == 65536>>;


;; Function void LL_ADC_EnableIT_EOCS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 | 32) >>>>>;


;; Function void LL_ADC_EnableIT_OVR(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 | 67108864) >>>>>;


;; Function void LL_ADC_EnableIT_JEOS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 | 128) >>>>>;


;; Function void LL_ADC_EnableIT_AWD1(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 | 64) >>>>>;


;; Function void LL_ADC_DisableIT_EOCS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4294967263) >>>>>;


;; Function void LL_ADC_DisableIT_OVR(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4227858431) >>>>>;


;; Function void LL_ADC_DisableIT_JEOS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4294967167) >>>>>;


;; Function void LL_ADC_DisableIT_AWD1(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ADCx->CR1 = (long unsigned int) ADCx->CR1 & 4294967231) >>>>>;


;; Function uint32_t LL_ADC_IsEnabledIT_EOCS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->CR1 & 32) == 32>>;


;; Function uint32_t LL_ADC_IsEnabledIT_OVR(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->CR1 & 67108864) == 67108864>>;


;; Function uint32_t LL_ADC_IsEnabledIT_JEOS(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->CR1 & 128) == 128>>;


;; Function uint32_t LL_ADC_IsEnabledIT_AWD1(ADC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) ADCx->CR1 & 64) == 64>>;


;; Function void LL_RTC_SetHourFormat(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294967231 | HourFormat) >>>>>;


;; Function uint32_t LL_RTC_GetHourFormat(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->CR & 64>>;


;; Function void LL_RTC_SetAlarmOutEvent(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4288675839 | AlarmOutput) >>>>>;


;; Function uint32_t LL_RTC_GetAlarmOutEvent(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->CR & 6291456>>;


;; Function void LL_RTC_SetAlarmOutputType(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->OR = (long unsigned int) RTCx->OR & 4294967287 | Output) >>>>>;


;; Function uint32_t LL_RTC_GetAlarmOutputType(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->OR & 8>>;


;; Function void LL_RTC_EnableInitMode(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = 4294967295) >>>>>;


;; Function void LL_RTC_DisableInitMode(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = 4294967167) >>>>>;


;; Function void LL_RTC_SetOutputPolarity(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4293918719 | Polarity) >>>>>;


;; Function uint32_t LL_RTC_GetOutputPolarity(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->CR & 1048576>>;


;; Function void LL_RTC_EnableShadowRegBypass(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 32) >>>>>;


;; Function void LL_RTC_DisableShadowRegBypass(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294967263) >>>>>;


;; Function uint32_t LL_RTC_IsShadowRegBypassEnabled(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->CR & 32) == 32>>;


;; Function void LL_RTC_EnableRefClock(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 16) >>>>>;


;; Function void LL_RTC_DisableRefClock(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294967279) >>>>>;


;; Function void LL_RTC_SetAsynchPrescaler(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->PRER = (long unsigned int) RTCx->PRER & 4286644223 | AsynchPrescaler << 16) >>>>>;


;; Function void LL_RTC_SetSynchPrescaler(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->PRER = (long unsigned int) RTCx->PRER & 4294934528 | SynchPrescaler) >>>>>;


;; Function uint32_t LL_RTC_GetAsynchPrescaler(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->PRER >> 16) & 127>>;


;; Function uint32_t LL_RTC_GetSynchPrescaler(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->PRER & 32767>>;


;; Function void LL_RTC_EnableWriteProtection(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->WPR = 255) >>>>>;


;; Function void LL_RTC_DisableWriteProtection(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->WPR = 202) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->WPR = 83) >>>>>;


;; Function void LL_RTC_TIME_SetFormat(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TR = (long unsigned int) RTCx->TR & 4290772991 | TimeFormat) >>>>>;


;; Function uint32_t LL_RTC_TIME_GetFormat(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TR & 4194304>>;


;; Function void LL_RTC_TIME_SetHour(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TR = (long unsigned int) RTCx->TR & 4290838527 | (long unsigned int) Hours << 16 & 16711680) >>>>>;


;; Function uint32_t LL_RTC_TIME_GetHour(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->TR & 4128768) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 20) << 4 & 48 | (long unsigned int) temp >> 16 & 15);
}


;; Function void LL_RTC_TIME_SetMinute(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TR = (long unsigned int) RTCx->TR & 4294934783 | (long unsigned int) Minutes << 8 & 65535) >>>>>;


;; Function uint32_t LL_RTC_TIME_GetMinute(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->TR & 32512) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 12) << 4 & 112 | (long unsigned int) temp >> 8 & 15);
}


;; Function void LL_RTC_TIME_SetSecond(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TR = (long unsigned int) RTCx->TR & 4294967168 | (long unsigned int) Seconds & 255) >>>>>;


;; Function uint32_t LL_RTC_TIME_GetSecond(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->TR & 127) >>>>>;
  return <retval> = temp & 127;
}


;; Function void LL_RTC_TIME_Config(RTC_TypeDef*, uint32_t, uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (((long unsigned int) Hours << 16 & 16711680 | Format12_24) | (long unsigned int) Minutes << 8 & 65535) | (long unsigned int) Seconds & 255) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TR = (long unsigned int) RTCx->TR & 4286611584 | temp) >>>>>;
}


;; Function uint32_t LL_RTC_TIME_Get(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (LL_RTC_TIME_GetHour (RTCx) << 16 | LL_RTC_TIME_GetMinute (RTCx) << 8) | LL_RTC_TIME_GetSecond (RTCx)>>;


;; Function void LL_RTC_TIME_EnableDayLightStore(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 262144) >>>>>;


;; Function void LL_RTC_TIME_DisableDayLightStore(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294705151) >>>>>;


;; Function uint32_t LL_RTC_TIME_IsDayLightStoreEnabled(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->CR & 262144) == 262144>>;


;; Function void LL_RTC_TIME_DecHour(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 131072) >>>>>;


;; Function void LL_RTC_TIME_IncHour(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 65536) >>>>>;


;; Function uint32_t LL_RTC_TIME_GetSubSecond(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->SSR & 65535>>;


;; Function void LL_RTC_TIME_Synchronize(RTC_TypeDef*, uint32_t, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->SHIFTR = ShiftSecond | Fraction) >>>>>;


;; Function void LL_RTC_DATE_SetYear(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->DR = (long unsigned int) RTCx->DR & 4278255615 | (long unsigned int) Year << 16 & 16711680) >>>>>;


;; Function uint32_t LL_RTC_DATE_GetYear(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->DR & 16711680) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 20) << 4 & 255 | (long unsigned int) temp >> 16 & 15);
}


;; Function void LL_RTC_DATE_SetWeekDay(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->DR = (long unsigned int) RTCx->DR & 4294909951 | WeekDay << 13) >>>>>;


;; Function uint32_t LL_RTC_DATE_GetWeekDay(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->DR >> 13) & 7>>;


;; Function void LL_RTC_DATE_SetMonth(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->DR = (long unsigned int) RTCx->DR & 4294959359 | (long unsigned int) Month << 8 & 65535) >>>>>;


;; Function uint32_t LL_RTC_DATE_GetMonth(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->DR & 7936) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 12) << 4 & 16 | (long unsigned int) temp >> 8 & 15);
}


;; Function void LL_RTC_DATE_SetDay(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->DR = (long unsigned int) RTCx->DR & 4294967232 | (long unsigned int) Day & 255) >>>>>;


;; Function uint32_t LL_RTC_DATE_GetDay(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->DR & 63) >>>>>;
  return <retval> = temp & 63;
}


;; Function void LL_RTC_DATE_Config(RTC_TypeDef*, uint32_t, uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = ((WeekDay << 13 | (long unsigned int) Year << 16 & 16711680) | (long unsigned int) Month << 8 & 65535) | (long unsigned int) Day & 255) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->DR = (long unsigned int) RTCx->DR & 4278190272 | temp) >>>>>;
}


;; Function uint32_t LL_RTC_DATE_Get(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((LL_RTC_DATE_GetWeekDay (RTCx) << 24 | LL_RTC_DATE_GetDay (RTCx) << 16) | LL_RTC_DATE_GetMonth (RTCx) << 8) | LL_RTC_DATE_GetYear (RTCx)>>;


;; Function void LL_RTC_ALMA_Enable(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 256) >>>>>;


;; Function void LL_RTC_ALMA_Disable(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294967039) >>>>>;


;; Function void LL_RTC_ALMA_SetMask(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR & 2139062143 | Mask) >>>>>;


;; Function uint32_t LL_RTC_ALMA_GetMask(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->ALRMAR & 2155905152>>;


;; Function void LL_RTC_ALMA_EnableWeekday(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR | 1073741824) >>>>>;


;; Function void LL_RTC_ALMA_DisableWeekday(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR & 3221225471) >>>>>;


;; Function void LL_RTC_ALMA_SetDay(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR & 3238002687 | (long unsigned int) Day << 24) >>>>>;


;; Function uint32_t LL_RTC_ALMA_GetDay(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->ALRMAR & 1056964608) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 28) << 4 & 48 | (long unsigned int) temp >> 24 & 15);
}


;; Function void LL_RTC_ALMA_SetWeekDay(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR & 4043309055 | WeekDay << 24) >>>>>;


;; Function uint32_t LL_RTC_ALMA_GetWeekDay(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->ALRMAR >> 24) & 15>>;


;; Function void LL_RTC_ALMA_SetTimeFormat(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR & 4290772991 | TimeFormat) >>>>>;


;; Function uint32_t LL_RTC_ALMA_GetTimeFormat(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->ALRMAR & 4194304>>;


;; Function void LL_RTC_ALMA_SetHour(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR & 4290838527 | (long unsigned int) Hours << 16 & 16711680) >>>>>;


;; Function uint32_t LL_RTC_ALMA_GetHour(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->ALRMAR & 4128768) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 20) << 4 & 48 | (long unsigned int) temp >> 16 & 15);
}


;; Function void LL_RTC_ALMA_SetMinute(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR & 4294934783 | (long unsigned int) Minutes << 8 & 65535) >>>>>;


;; Function uint32_t LL_RTC_ALMA_GetMinute(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->ALRMAR & 32512) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 12) << 4 & 112 | (long unsigned int) temp >> 8 & 15);
}


;; Function void LL_RTC_ALMA_SetSecond(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR & 4294967168 | (long unsigned int) Seconds & 255) >>>>>;


;; Function uint32_t LL_RTC_ALMA_GetSecond(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->ALRMAR & 127) >>>>>;
  return <retval> = temp & 127;
}


;; Function void LL_RTC_ALMA_ConfigTime(RTC_TypeDef*, uint32_t, uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (((long unsigned int) Hours << 16 & 16711680 | Format12_24) | (long unsigned int) Minutes << 8 & 65535) | (long unsigned int) Seconds & 255) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMAR = (long unsigned int) RTCx->ALRMAR & 4286611584 | temp) >>>>>;
}


;; Function uint32_t LL_RTC_ALMA_GetTime(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (LL_RTC_ALMA_GetHour (RTCx) << 16 | LL_RTC_ALMA_GetMinute (RTCx) << 8) | LL_RTC_ALMA_GetSecond (RTCx)>>;


;; Function void LL_RTC_ALMA_SetSubSecondMask(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMASSR = (long unsigned int) RTCx->ALRMASSR & 4043309055 | Mask << 24) >>>>>;


;; Function uint32_t LL_RTC_ALMA_GetSubSecondMask(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->ALRMASSR >> 24) & 15>>;


;; Function void LL_RTC_ALMA_SetSubSecond(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMASSR = (long unsigned int) RTCx->ALRMASSR & 4294934528 | Subsecond) >>>>>;


;; Function uint32_t LL_RTC_ALMA_GetSubSecond(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->ALRMASSR & 32767>>;


;; Function void LL_RTC_ALMB_Enable(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 512) >>>>>;


;; Function void LL_RTC_ALMB_Disable(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294966783) >>>>>;


;; Function void LL_RTC_ALMB_SetMask(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBR = (long unsigned int) RTCx->ALRMBR & 2139062143 | Mask) >>>>>;


;; Function uint32_t LL_RTC_ALMB_GetMask(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->ALRMBR & 2155905152>>;


;; Function void LL_RTC_ALMB_EnableWeekday(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBR = (long unsigned int) RTCx->ALRMBR | 1073741824) >>>>>;


;; Function void LL_RTC_ALMB_DisableWeekday(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBR = (long unsigned int) RTCx->ALRMBR & 3221225471) >>>>>;


;; Function void LL_RTC_ALMB_SetDay(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (1073752064B->ALRMBR = (long unsigned int) 1073752064B->ALRMBR & 3238002687 | (long unsigned int) Day << 24) >>>>>;


;; Function uint32_t LL_RTC_ALMB_GetDay(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->ALRMBR & 1056964608) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 28) << 4 & 48 | (long unsigned int) temp >> 24 & 15);
}


;; Function void LL_RTC_ALMB_SetWeekDay(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBR = (long unsigned int) RTCx->ALRMBR & 4043309055 | WeekDay << 24) >>>>>;


;; Function uint32_t LL_RTC_ALMB_GetWeekDay(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->ALRMBR >> 24) & 15>>;


;; Function void LL_RTC_ALMB_SetTimeFormat(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBR = (long unsigned int) RTCx->ALRMBR & 4290772991 | TimeFormat) >>>>>;


;; Function uint32_t LL_RTC_ALMB_GetTimeFormat(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->ALRMBR & 4194304>>;


;; Function void LL_RTC_ALMB_SetHour(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBR = (long unsigned int) RTCx->ALRMBR & 4290838527 | (long unsigned int) Hours << 16 & 16711680) >>>>>;


;; Function uint32_t LL_RTC_ALMB_GetHour(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->ALRMBR & 4128768) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 20) << 4 & 48 | (long unsigned int) temp >> 16 & 15);
}


;; Function void LL_RTC_ALMB_SetMinute(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBR = (long unsigned int) RTCx->ALRMBR & 4294934783 | (long unsigned int) Minutes << 8 & 65535) >>>>>;


;; Function uint32_t LL_RTC_ALMB_GetMinute(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->ALRMBR & 32512) >>>>>;
  return <retval> = (uint32_t) (((long unsigned int) temp >> 12) << 4 & 112 | (long unsigned int) temp >> 8 & 15);
}


;; Function void LL_RTC_ALMB_SetSecond(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBR = (long unsigned int) RTCx->ALRMBR & 4294967168 | (long unsigned int) Seconds & 255) >>>>>;


;; Function uint32_t LL_RTC_ALMB_GetSecond(RTC_TypeDef*) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (long unsigned int) RTCx->ALRMBR & 127) >>>>>;
  return <retval> = temp & 127;
}


;; Function void LL_RTC_ALMB_ConfigTime(RTC_TypeDef*, uint32_t, uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t temp = 0;

  <<cleanup_point   register uint32_t temp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (temp = (((long unsigned int) Hours << 16 & 16711680 | Format12_24) | (long unsigned int) Minutes << 8 & 65535) | (long unsigned int) Seconds & 255) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBR = (long unsigned int) RTCx->ALRMBR & 4286611584 | temp) >>>>>;
}


;; Function uint32_t LL_RTC_ALMB_GetTime(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (LL_RTC_ALMB_GetHour (RTCx) << 16 | LL_RTC_ALMB_GetMinute (RTCx) << 8) | LL_RTC_ALMB_GetSecond (RTCx)>>;


;; Function void LL_RTC_ALMB_SetSubSecondMask(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBSSR = (long unsigned int) RTCx->ALRMBSSR & 4043309055 | Mask << 24) >>>>>;


;; Function uint32_t LL_RTC_ALMB_GetSubSecondMask(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->ALRMBSSR >> 24) & 15>>;


;; Function void LL_RTC_ALMB_SetSubSecond(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ALRMBSSR = (long unsigned int) RTCx->ALRMBSSR & 4294934528 | Subsecond) >>>>>;


;; Function uint32_t LL_RTC_ALMB_GetSubSecond(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->ALRMBSSR & 32767>>;


;; Function void LL_RTC_TS_EnableInternalEvent(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 16777216) >>>>>;


;; Function void LL_RTC_TS_DisableInternalEvent(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4278190079) >>>>>;


;; Function void LL_RTC_TS_Enable(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 2048) >>>>>;


;; Function void LL_RTC_TS_Disable(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294965247) >>>>>;


;; Function void LL_RTC_TS_SetActiveEdge(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294967287 | Edge) >>>>>;


;; Function uint32_t LL_RTC_TS_GetActiveEdge(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->CR & 8>>;


;; Function uint32_t LL_RTC_TS_GetTimeFormat(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TSTR & 4194304>>;


;; Function uint32_t LL_RTC_TS_GetHour(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->TSTR >> 16) & 63>>;


;; Function uint32_t LL_RTC_TS_GetMinute(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->TSTR >> 8) & 127>>;


;; Function uint32_t LL_RTC_TS_GetSecond(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TSTR & 127>>;


;; Function uint32_t LL_RTC_TS_GetTime(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TSTR & 4161407>>;


;; Function uint32_t LL_RTC_TS_GetWeekDay(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->TSDR >> 13) & 7>>;


;; Function uint32_t LL_RTC_TS_GetMonth(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) RTCx->TSDR >> 8) & 31>>;


;; Function uint32_t LL_RTC_TS_GetDay(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TSDR & 63>>;


;; Function uint32_t LL_RTC_TS_GetDate(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TSDR & 65343>>;


;; Function uint32_t LL_RTC_TS_GetSubSecond(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TSSSR & 65535>>;


;; Function void LL_RTC_TS_EnableOnTamper(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | 128) >>>>>;


;; Function void LL_RTC_TS_DisableOnTamper(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & 4294967167) >>>>>;


;; Function void LL_RTC_TAMPER_Enable(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | Tamper) >>>>>;


;; Function void LL_RTC_TAMPER_Disable(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & ~Tamper) >>>>>;


;; Function void LL_RTC_TAMPER_EnableMask(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | Mask) >>>>>;


;; Function void LL_RTC_TAMPER_DisableMask(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & ~Mask) >>>>>;


;; Function void LL_RTC_TAMPER_EnableEraseBKP(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & ~Tamper) >>>>>;


;; Function void LL_RTC_TAMPER_DisableEraseBKP(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | Tamper) >>>>>;


;; Function void LL_RTC_TAMPER_DisablePullUp(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | 32768) >>>>>;


;; Function void LL_RTC_TAMPER_EnablePullUp(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & 4294934527) >>>>>;


;; Function void LL_RTC_TAMPER_SetPrecharge(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & 4294942719 | Duration) >>>>>;


;; Function uint32_t LL_RTC_TAMPER_GetPrecharge(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TAMPCR & 24576>>;


;; Function void LL_RTC_TAMPER_SetFilterCount(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & 4294961151 | FilterCount) >>>>>;


;; Function uint32_t LL_RTC_TAMPER_GetFilterCount(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TAMPCR & 6144>>;


;; Function void LL_RTC_TAMPER_SetSamplingFreq(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & 4294965503 | SamplingFreq) >>>>>;


;; Function uint32_t LL_RTC_TAMPER_GetSamplingFreq(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->TAMPCR & 1792>>;


;; Function void LL_RTC_TAMPER_EnableActiveLevel(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | Tamper) >>>>>;


;; Function void LL_RTC_TAMPER_DisableActiveLevel(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & ~Tamper) >>>>>;


;; Function void LL_RTC_WAKEUP_Enable(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 1024) >>>>>;


;; Function void LL_RTC_WAKEUP_Disable(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294966271) >>>>>;


;; Function uint32_t LL_RTC_WAKEUP_IsEnabled(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->CR & 1024) == 1024>>;


;; Function void LL_RTC_WAKEUP_SetClock(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294967288 | WakeupClock) >>>>>;


;; Function uint32_t LL_RTC_WAKEUP_GetClock(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->CR & 7>>;


;; Function void LL_RTC_WAKEUP_SetAutoReload(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->WUTR = (long unsigned int) RTCx->WUTR & 4294901760 | Value) >>>>>;


;; Function uint32_t LL_RTC_WAKEUP_GetAutoReload(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->WUTR & 65535>>;


;; Function void LL_RTC_BAK_SetRegister(RTC_TypeDef*, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t tmp = 0;

  <<cleanup_point   register uint32_t tmp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmp = (uint32_t) &RTCx->BKP0R) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmp = BackupRegister * 4 + tmp) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(volatile uint32_t *) tmp = Data) >>>>>;
}


;; Function uint32_t LL_RTC_BAK_GetRegister(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t tmp = 0;

  <<cleanup_point   register uint32_t tmp = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmp = (uint32_t) &RTCx->BKP0R) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmp = BackupRegister * 4 + tmp) >>>>>;
  <<cleanup_point return <retval> = (uint32_t) *(volatile uint32_t *) tmp>>;
}


;; Function void LL_RTC_CAL_SetOutputFreq(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4286054399 | Frequency) >>>>>;


;; Function uint32_t LL_RTC_CAL_GetOutputFreq(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->CR & 8912896>>;


;; Function void LL_RTC_CAL_SetPulse(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CALR = (long unsigned int) RTCx->CALR & 4294934527 | Pulse) >>>>>;


;; Function uint32_t LL_RTC_CAL_IsPulseInserted(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->CALR & 32768) == 32768>>;


;; Function void LL_RTC_CAL_SetPeriod(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CALR = (long unsigned int) RTCx->CALR & 4294942719 | Period) >>>>>;


;; Function uint32_t LL_RTC_CAL_GetPeriod(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->CALR & 24576>>;


;; Function void LL_RTC_CAL_SetMinus(RTC_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CALR = (long unsigned int) RTCx->CALR & 4294966784 | CalibMinus) >>>>>;


;; Function uint32_t LL_RTC_CAL_GetMinus(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) RTCx->CALR & 511>>;


;; Function uint32_t LL_RTC_IsActiveFlag_ITS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 131072) == 131072>>;


;; Function uint32_t LL_RTC_IsActiveFlag_RECALP(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 65536) == 65536>>;


;; Function uint32_t LL_RTC_IsActiveFlag_TAMP3(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 32768) == 32768>>;


;; Function uint32_t LL_RTC_IsActiveFlag_TAMP2(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 16384) == 16384>>;


;; Function uint32_t LL_RTC_IsActiveFlag_TAMP1(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 8192) == 8192>>;


;; Function uint32_t LL_RTC_IsActiveFlag_TSOV(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 4096) == 4096>>;


;; Function uint32_t LL_RTC_IsActiveFlag_TS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 2048) == 2048>>;


;; Function uint32_t LL_RTC_IsActiveFlag_WUT(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 1024) == 1024>>;


;; Function uint32_t LL_RTC_IsActiveFlag_ALRB(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 512) == 512>>;


;; Function uint32_t LL_RTC_IsActiveFlag_ALRA(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 256) == 256>>;


;; Function void LL_RTC_ClearFlag_ITS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR | 4294967167) >>>>>;


;; Function void LL_RTC_ClearFlag_TAMP3(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR & 255 | 4294934399) >>>>>;


;; Function void LL_RTC_ClearFlag_TAMP2(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR & 255 | 4294950783) >>>>>;


;; Function void LL_RTC_ClearFlag_TAMP1(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR & 255 | 4294958975) >>>>>;


;; Function void LL_RTC_ClearFlag_TSOV(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR & 255 | 4294963071) >>>>>;


;; Function void LL_RTC_ClearFlag_TS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR & 255 | 4294965119) >>>>>;


;; Function void LL_RTC_ClearFlag_WUT(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR & 255 | 4294966143) >>>>>;


;; Function void LL_RTC_ClearFlag_ALRB(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR & 255 | 4294966655) >>>>>;


;; Function void LL_RTC_ClearFlag_ALRA(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR & 255 | 4294966911) >>>>>;


;; Function uint32_t LL_RTC_IsActiveFlag_INIT(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 64) == 64>>;


;; Function uint32_t LL_RTC_IsActiveFlag_RS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 32) == 32>>;


;; Function void LL_RTC_ClearFlag_RS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->ISR = (long unsigned int) RTCx->ISR & 128 | 4294967135) >>>>>;


;; Function uint32_t LL_RTC_IsActiveFlag_INITS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 16) == 16>>;


;; Function uint32_t LL_RTC_IsActiveFlag_SHP(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 8) == 8>>;


;; Function uint32_t LL_RTC_IsActiveFlag_WUTW(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 4) == 4>>;


;; Function uint32_t LL_RTC_IsActiveFlag_ALRBW(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 2) == 2>>;


;; Function uint32_t LL_RTC_IsActiveFlag_ALRAW(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->ISR & 1) == 1>>;


;; Function void LL_RTC_EnableIT_TS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 32768) >>>>>;


;; Function void LL_RTC_DisableIT_TS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294934527) >>>>>;


;; Function void LL_RTC_EnableIT_WUT(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 16384) >>>>>;


;; Function void LL_RTC_DisableIT_WUT(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294950911) >>>>>;


;; Function void LL_RTC_EnableIT_ALRB(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 8192) >>>>>;


;; Function void LL_RTC_DisableIT_ALRB(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294959103) >>>>>;


;; Function void LL_RTC_EnableIT_ALRA(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR | 4096) >>>>>;


;; Function void LL_RTC_DisableIT_ALRA(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->CR = (long unsigned int) RTCx->CR & 4294963199) >>>>>;


;; Function void LL_RTC_EnableIT_TAMP3(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | 4194304) >>>>>;


;; Function void LL_RTC_DisableIT_TAMP3(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & 4290772991) >>>>>;


;; Function void LL_RTC_EnableIT_TAMP2(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | 524288) >>>>>;


;; Function void LL_RTC_DisableIT_TAMP2(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & 4294443007) >>>>>;


;; Function void LL_RTC_EnableIT_TAMP1(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | 65536) >>>>>;


;; Function void LL_RTC_DisableIT_TAMP1(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & 4294901759) >>>>>;


;; Function void LL_RTC_EnableIT_TAMP(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR | 4) >>>>>;


;; Function void LL_RTC_DisableIT_TAMP(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (RTCx->TAMPCR = (long unsigned int) RTCx->TAMPCR & 4294967291) >>>>>;


;; Function uint32_t LL_RTC_IsEnabledIT_TS(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->CR & 32768) == 32768>>;


;; Function uint32_t LL_RTC_IsEnabledIT_WUT(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->CR & 16384) == 16384>>;


;; Function uint32_t LL_RTC_IsEnabledIT_ALRB(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->CR & 8192) == 8192>>;


;; Function uint32_t LL_RTC_IsEnabledIT_ALRA(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->CR & 4096) == 4096>>;


;; Function uint32_t LL_RTC_IsEnabledIT_TAMP3(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->TAMPCR & 4194304) == 4194304>>;


;; Function uint32_t LL_RTC_IsEnabledIT_TAMP2(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->TAMPCR & 524288) == 524288>>;


;; Function uint32_t LL_RTC_IsEnabledIT_TAMP1(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->TAMPCR & 65536) == 65536>>;


;; Function uint32_t LL_RTC_IsEnabledIT_TAMP(RTC_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) RTCx->TAMPCR & 4) == 4>>;


;; Function void gpio_write(gpio_t*, int) (null)
;; enabled by -tree-original


if (value != 0)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*obj->reg_set = obj->mask) >>>>>;
  }
else
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*obj->reg_clr = obj->mask << 16) >>>>>;
  }


;; Function int gpio_read(gpio_t*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) *obj->reg_in & obj->mask) != 0 ? 1 : 0>>;


;; Function int gpio_is_connected(const gpio_t*) (null)
;; enabled by -tree-original


return <retval> = obj->pin != -1;


;; Function void LL_USART_Enable(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 1) >>>>>;


;; Function void LL_USART_Disable(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294967294) >>>>>;


;; Function uint32_t LL_USART_IsEnabled(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 1) == 1>>;


;; Function void LL_USART_EnableDirectionRx(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 4) >>>>>;


;; Function void LL_USART_DisableDirectionRx(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294967291) >>>>>;


;; Function void LL_USART_EnableDirectionTx(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 8) >>>>>;


;; Function void LL_USART_DisableDirectionTx(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294967287) >>>>>;


;; Function void LL_USART_SetTransferDirection(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294967283 | TransferDirection) >>>>>;


;; Function uint32_t LL_USART_GetTransferDirection(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR1 & 12>>;


;; Function void LL_USART_SetParity(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294965759 | Parity) >>>>>;


;; Function uint32_t LL_USART_GetParity(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR1 & 1536>>;


;; Function void LL_USART_SetWakeUpMethod(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294965247 | Method) >>>>>;


;; Function uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR1 & 2048>>;


;; Function void LL_USART_SetDataWidth(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4026527743 | DataWidth) >>>>>;


;; Function uint32_t LL_USART_GetDataWidth(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR1 & 268439552>>;


;; Function void LL_USART_EnableMuteMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 8192) >>>>>;


;; Function void LL_USART_DisableMuteMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294959103) >>>>>;


;; Function uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 8192) == 8192>>;


;; Function void LL_USART_SetOverSampling(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294934527 | OverSampling) >>>>>;


;; Function uint32_t LL_USART_GetOverSampling(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR1 & 32768>>;


;; Function void LL_USART_SetLastClkPulseOutput(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294967039 | LastBitClockPulse) >>>>>;


;; Function uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 256>>;


;; Function void LL_USART_SetClockPhase(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294966783 | ClockPhase) >>>>>;


;; Function uint32_t LL_USART_GetClockPhase(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 512>>;


;; Function void LL_USART_SetClockPolarity(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294966271 | ClockPolarity) >>>>>;


;; Function uint32_t LL_USART_GetClockPolarity(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 1024>>;


;; Function void LL_USART_ConfigClock(USART_TypeDef*, uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294965503 | ((Phase | Polarity) | LBCPOutput)) >>>>>;


;; Function void LL_USART_EnableSCLKOutput(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 | 2048) >>>>>;


;; Function void LL_USART_DisableSCLKOutput(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294965247) >>>>>;


;; Function uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR2 & 2048) == 2048>>;


;; Function void LL_USART_SetStopBitsLength(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294955007 | StopBits) >>>>>;


;; Function uint32_t LL_USART_GetStopBitsLength(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 12288>>;


;; Function void LL_USART_ConfigCharacter(USART_TypeDef*, uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4026526207 | (Parity | DataWidth)) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294955007 | StopBits) >>>>>;


;; Function void LL_USART_SetTXRXSwap(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294934527 | SwapConfig) >>>>>;


;; Function uint32_t LL_USART_GetTXRXSwap(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 32768>>;


;; Function void LL_USART_SetRXPinLevel(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294901759 | PinInvMethod) >>>>>;


;; Function uint32_t LL_USART_GetRXPinLevel(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 65536>>;


;; Function void LL_USART_SetTXPinLevel(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294836223 | PinInvMethod) >>>>>;


;; Function uint32_t LL_USART_GetTXPinLevel(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 131072>>;


;; Function void LL_USART_SetBinaryDataLogic(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294705151 | DataLogic) >>>>>;


;; Function uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 262144>>;


;; Function void LL_USART_SetTransferBitOrder(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294443007 | BitOrder) >>>>>;


;; Function uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 524288>>;


;; Function void LL_USART_EnableAutoBaudRate(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 | 1048576) >>>>>;


;; Function void LL_USART_DisableAutoBaudRate(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4293918719) >>>>>;


;; Function uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR2 & 1048576) == 1048576>>;


;; Function void LL_USART_SetAutoBaudRateMode(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4288675839 | AutoBaudRateMode) >>>>>;


;; Function uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 6291456>>;


;; Function void LL_USART_EnableRxTimeout(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 | 8388608) >>>>>;


;; Function void LL_USART_DisableRxTimeout(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4286578687) >>>>>;


;; Function uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR2 & 8388608) == 8388608>>;


;; Function void LL_USART_ConfigNodeAddress(USART_TypeDef*, uint32_t, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 16777199 | (NodeAddress << 24 | AddressLen)) >>>>>;


;; Function uint32_t LL_USART_GetNodeAddress(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) USARTx->CR2 >> 24) & 255>>;


;; Function uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 16>>;


;; Function void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 256) >>>>>;


;; Function void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967039) >>>>>;


;; Function void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 512) >>>>>;


;; Function void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294966783) >>>>>;


;; Function void LL_USART_SetHWFlowCtrl(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294966527 | HardwareFlowControl) >>>>>;


;; Function uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR3 & 768>>;


;; Function void LL_USART_EnableOneBitSamp(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 2048) >>>>>;


;; Function void LL_USART_DisableOneBitSamp(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294965247) >>>>>;


;; Function uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 2048) == 2048>>;


;; Function void LL_USART_EnableOverrunDetect(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294963199) >>>>>;


;; Function void LL_USART_DisableOverrunDetect(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 4096) >>>>>;


;; Function uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 4096) != 4096>>;


;; Function void LL_USART_SetBaudRate(USART_TypeDef*, uint32_t, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t usartdiv = 0;
  register uint32_t brrtemp = 0;

  <<cleanup_point   register uint32_t usartdiv = 0;>>;
  <<cleanup_point   register uint32_t brrtemp = 0;>>;
  if (OverSampling == 32768)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (usartdiv = (uint32_t) (uint16_t) ((PeriphClk * 2 + BaudRate / 2) / BaudRate)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (brrtemp = usartdiv & 65520) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (brrtemp = (long unsigned int) (uint16_t) ((long unsigned int) usartdiv >> 1) & 7 | brrtemp) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->BRR = brrtemp) >>>>>;
    }
  else
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->BRR = (uint32_t) (uint16_t) ((BaudRate / 2 + PeriphClk) / BaudRate)) >>>>>;
    }
}


;; Function uint32_t LL_USART_GetBaudRate(USART_TypeDef*, uint32_t, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t usartdiv = 0;
  register uint32_t brrresult = 0;

  <<cleanup_point   register uint32_t usartdiv = 0;>>;
  <<cleanup_point   register uint32_t brrresult = 0;>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (usartdiv = (uint32_t) USARTx->BRR) >>>>>;
  if (OverSampling == 32768)
    {
      if ((usartdiv & 65527) != 0)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (usartdiv = (uint32_t) ((uint16_t) usartdiv & 65520 | (uint16_t) usartdiv << 1 & 14)) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (brrresult = (PeriphClk * 2) / usartdiv) >>>>>;
        }
    }
  else
    {
      if ((usartdiv & 65535) != 0)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (brrresult = PeriphClk / usartdiv) >>>>>;
        }
    }
  return <retval> = brrresult;
}


;; Function void LL_USART_SetRxTimeout(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->RTOR = (long unsigned int) USARTx->RTOR & 4278190080 | Timeout) >>>>>;


;; Function uint32_t LL_USART_GetRxTimeout(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->RTOR & 16777215>>;


;; Function void LL_USART_SetBlockLength(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->RTOR = (long unsigned int) USARTx->RTOR & 16777215 | BlockLength << 24) >>>>>;


;; Function uint32_t LL_USART_GetBlockLength(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) USARTx->RTOR >> 24) & 255>>;


;; Function void LL_USART_EnableIrda(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 2) >>>>>;


;; Function void LL_USART_DisableIrda(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967293) >>>>>;


;; Function uint32_t LL_USART_IsEnabledIrda(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 2) == 2>>;


;; Function void LL_USART_SetIrdaPowerMode(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967291 | PowerMode) >>>>>;


;; Function uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR3 & 4>>;


;; Function void LL_USART_SetIrdaPrescaler(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->GTPR = (long unsigned int) USARTx->GTPR & 4294967040 | PrescalerValue) >>>>>;


;; Function uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->GTPR & 255>>;


;; Function void LL_USART_EnableSmartcardNACK(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 16) >>>>>;


;; Function void LL_USART_DisableSmartcardNACK(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967279) >>>>>;


;; Function uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 16) == 16>>;


;; Function void LL_USART_EnableSmartcard(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 32) >>>>>;


;; Function void LL_USART_DisableSmartcard(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967263) >>>>>;


;; Function uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 32) == 32>>;


;; Function void LL_USART_SetSmartcardAutoRetryCount(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294049791 | AutoRetryCount << 17) >>>>>;


;; Function uint32_t LL_USART_GetSmartcardAutoRetryCount(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) USARTx->CR3 >> 17) & 7>>;


;; Function void LL_USART_SetSmartcardPrescaler(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->GTPR = (long unsigned int) USARTx->GTPR & 4294967040 | PrescalerValue) >>>>>;


;; Function uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->GTPR & 255>>;


;; Function void LL_USART_SetSmartcardGuardTime(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->GTPR = (long unsigned int) USARTx->GTPR & 4294902015 | GuardTime << 8) >>>>>;


;; Function uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) USARTx->GTPR >> 8) & 255>>;


;; Function void LL_USART_EnableHalfDuplex(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 8) >>>>>;


;; Function void LL_USART_DisableHalfDuplex(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967287) >>>>>;


;; Function uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 8) == 8>>;


;; Function void LL_USART_SetLINBrkDetectionLen(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294967263 | LINBDLength) >>>>>;


;; Function uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR2 & 32>>;


;; Function void LL_USART_EnableLIN(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 | 16384) >>>>>;


;; Function void LL_USART_DisableLIN(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294950911) >>>>>;


;; Function uint32_t LL_USART_IsEnabledLIN(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR2 & 16384) == 16384>>;


;; Function void LL_USART_SetDEDeassertionTime(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4292935679 | Time << 16) >>>>>;


;; Function uint32_t LL_USART_GetDEDeassertionTime(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) USARTx->CR1 >> 16) & 31>>;


;; Function void LL_USART_SetDEAssertionTime(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4229955583 | Time << 21) >>>>>;


;; Function uint32_t LL_USART_GetDEAssertionTime(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) ((long unsigned int) USARTx->CR1 >> 21) & 31>>;


;; Function void LL_USART_EnableDEMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 16384) >>>>>;


;; Function void LL_USART_DisableDEMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294950911) >>>>>;


;; Function uint32_t LL_USART_IsEnabledDEMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 16384) == 16384>>;


;; Function void LL_USART_SetDESignalPolarity(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294934527 | Polarity) >>>>>;


;; Function uint32_t LL_USART_GetDESignalPolarity(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint32_t) USARTx->CR3 & 32768>>;


;; Function void LL_USART_ConfigAsyncMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294948863) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967253) >>>>>;


;; Function void LL_USART_ConfigSyncMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294950911) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967253) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 | 2048) >>>>>;


;; Function void LL_USART_ConfigLINMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294952959) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967253) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 | 16384) >>>>>;


;; Function void LL_USART_ConfigHalfDuplexMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294948863) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967261) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 8) >>>>>;


;; Function void LL_USART_ConfigSmartcardMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294950911) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967285) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 | 14336) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 32) >>>>>;


;; Function void LL_USART_ConfigIrdaMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294936575) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967255) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 2) >>>>>;


;; Function void LL_USART_ConfigMultiProcessMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294948863) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967253) >>>>>;


;; Function uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 1) == 1>>;


;; Function uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 2) == 2>>;


;; Function uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 4) == 4>>;


;; Function uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 8) == 8>>;


;; Function uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 16) == 16>>;


;; Function uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 32) == 32>>;


;; Function uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 64) == 64>>;


;; Function uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 128) == 128>>;


;; Function uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 256) == 256>>;


;; Function uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 512) == 512>>;


;; Function uint32_t LL_USART_IsActiveFlag_CTS(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 1024) == 1024>>;


;; Function uint32_t LL_USART_IsActiveFlag_RTO(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 2048) == 2048>>;


;; Function uint32_t LL_USART_IsActiveFlag_EOB(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 4096) == 4096>>;


;; Function uint32_t LL_USART_IsActiveFlag_ABRE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 16384) == 16384>>;


;; Function uint32_t LL_USART_IsActiveFlag_ABR(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 32768) == 32768>>;


;; Function uint32_t LL_USART_IsActiveFlag_BUSY(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 65536) == 65536>>;


;; Function uint32_t LL_USART_IsActiveFlag_CM(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 131072) == 131072>>;


;; Function uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 262144) == 262144>>;


;; Function uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 524288) == 524288>>;


;; Function uint32_t LL_USART_IsActiveFlag_TEACK(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->ISR & 2097152) == 2097152>>;


;; Function void LL_USART_ClearFlag_PE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 1) >>>>>;


;; Function void LL_USART_ClearFlag_FE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 2) >>>>>;


;; Function void LL_USART_ClearFlag_NE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 4) >>>>>;


;; Function void LL_USART_ClearFlag_ORE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 8) >>>>>;


;; Function void LL_USART_ClearFlag_IDLE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 16) >>>>>;


;; Function void LL_USART_ClearFlag_TC(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 64) >>>>>;


;; Function void LL_USART_ClearFlag_LBD(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 256) >>>>>;


;; Function void LL_USART_ClearFlag_nCTS(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 512) >>>>>;


;; Function void LL_USART_ClearFlag_RTO(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 2048) >>>>>;


;; Function void LL_USART_ClearFlag_EOB(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 4096) >>>>>;


;; Function void LL_USART_ClearFlag_CM(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->ICR = 131072) >>>>>;


;; Function void LL_USART_EnableIT_IDLE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 16) >>>>>;


;; Function void LL_USART_EnableIT_RXNE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 32) >>>>>;


;; Function void LL_USART_EnableIT_TC(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 64) >>>>>;


;; Function void LL_USART_EnableIT_TXE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 128) >>>>>;


;; Function void LL_USART_EnableIT_PE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 256) >>>>>;


;; Function void LL_USART_EnableIT_CM(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 16384) >>>>>;


;; Function void LL_USART_EnableIT_RTO(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 67108864) >>>>>;


;; Function void LL_USART_EnableIT_EOB(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 | 134217728) >>>>>;


;; Function void LL_USART_EnableIT_LBD(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 | 64) >>>>>;


;; Function void LL_USART_EnableIT_ERROR(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 1) >>>>>;


;; Function void LL_USART_EnableIT_CTS(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 1024) >>>>>;


;; Function void LL_USART_DisableIT_IDLE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294967279) >>>>>;


;; Function void LL_USART_DisableIT_RXNE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294967263) >>>>>;


;; Function void LL_USART_DisableIT_TC(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294967231) >>>>>;


;; Function void LL_USART_DisableIT_TXE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294967167) >>>>>;


;; Function void LL_USART_DisableIT_PE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294967039) >>>>>;


;; Function void LL_USART_DisableIT_CM(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4294950911) >>>>>;


;; Function void LL_USART_DisableIT_RTO(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4227858431) >>>>>;


;; Function void LL_USART_DisableIT_EOB(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR1 = (long unsigned int) USARTx->CR1 & 4160749567) >>>>>;


;; Function void LL_USART_DisableIT_LBD(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR2 = (long unsigned int) USARTx->CR2 & 4294967231) >>>>>;


;; Function void LL_USART_DisableIT_ERROR(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967294) >>>>>;


;; Function void LL_USART_DisableIT_CTS(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294966271) >>>>>;


;; Function uint32_t LL_USART_IsEnabledIT_IDLE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 16) == 16>>;


;; Function uint32_t LL_USART_IsEnabledIT_RXNE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 32) == 32>>;


;; Function uint32_t LL_USART_IsEnabledIT_TC(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 64) == 64>>;


;; Function uint32_t LL_USART_IsEnabledIT_TXE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 128) == 128>>;


;; Function uint32_t LL_USART_IsEnabledIT_PE(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 256) == 256>>;


;; Function uint32_t LL_USART_IsEnabledIT_CM(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 16384) == 16384>>;


;; Function uint32_t LL_USART_IsEnabledIT_RTO(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 67108864) == 67108864>>;


;; Function uint32_t LL_USART_IsEnabledIT_EOB(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR1 & 134217728) == 134217728>>;


;; Function uint32_t LL_USART_IsEnabledIT_LBD(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR2 & 64) == 64>>;


;; Function uint32_t LL_USART_IsEnabledIT_ERROR(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 1) == 1>>;


;; Function uint32_t LL_USART_IsEnabledIT_CTS(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 1024) == 1024>>;


;; Function void LL_USART_EnableDMAReq_RX(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 64) >>>>>;


;; Function void LL_USART_DisableDMAReq_RX(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967231) >>>>>;


;; Function uint32_t LL_USART_IsEnabledDMAReq_RX(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 64) == 64>>;


;; Function void LL_USART_EnableDMAReq_TX(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 128) >>>>>;


;; Function void LL_USART_DisableDMAReq_TX(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294967167) >>>>>;


;; Function uint32_t LL_USART_IsEnabledDMAReq_TX(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 128) == 128>>;


;; Function void LL_USART_EnableDMADeactOnRxErr(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 | 8192) >>>>>;


;; Function void LL_USART_DisableDMADeactOnRxErr(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->CR3 = (long unsigned int) USARTx->CR3 & 4294959103) >>>>>;


;; Function uint32_t LL_USART_IsEnabledDMADeactOnRxErr(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((long unsigned int) USARTx->CR3 & 8192) == 8192>>;


;; Function uint32_t LL_USART_DMA_GetRegAddr(USART_TypeDef*, uint32_t) (null)
;; enabled by -tree-original


{
  register uint32_t data_reg_addr = 0;

  <<cleanup_point   register uint32_t data_reg_addr = 0;>>;
  if (Direction == 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (data_reg_addr = (uint32_t) &USARTx->TDR) >>>>>;
    }
  else
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (data_reg_addr = (uint32_t) &USARTx->RDR) >>>>>;
    }
  return <retval> = data_reg_addr;
}


;; Function uint8_t LL_USART_ReceiveData8(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint8_t) USARTx->RDR>>;


;; Function uint16_t LL_USART_ReceiveData9(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (uint16_t) USARTx->RDR & 511>>;


;; Function void LL_USART_TransmitData8(USART_TypeDef*, uint8_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->TDR = (uint32_t) Value) >>>>>;


;; Function void LL_USART_TransmitData9(USART_TypeDef*, uint16_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->TDR = (uint32_t) Value & 511) >>>>>;


;; Function void LL_USART_RequestAutoBaudRate(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->RQR = (long unsigned int) USARTx->RQR | 1) >>>>>;


;; Function void LL_USART_RequestBreakSending(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->RQR = (long unsigned int) USARTx->RQR | 2) >>>>>;


;; Function void LL_USART_RequestEnterMuteMode(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->RQR = (long unsigned int) USARTx->RQR | 4) >>>>>;


;; Function void LL_USART_RequestRxDataFlush(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->RQR = (long unsigned int) USARTx->RQR | 8) >>>>>;


;; Function void LL_USART_RequestTxDataFlush(USART_TypeDef*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (USARTx->RQR = (long unsigned int) USARTx->RQR | 16) >>>>>;


;; Function constexpr float std::acos(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_acosf (__x)>>;


;; Function constexpr long double std::acos(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_acosl (__x)>>;


;; Function constexpr float std::asin(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_asinf (__x)>>;


;; Function constexpr long double std::asin(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_asinl (__x)>>;


;; Function constexpr float std::atan(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_atanf (__x);


;; Function constexpr long double std::atan(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_atanl (__x);


;; Function constexpr float std::atan2(float, float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_atan2f (__y, __x)>>;


;; Function constexpr long double std::atan2(long double, long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_atan2l (__y, __x)>>;


;; Function constexpr float std::ceil(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_ceilf (__x);


;; Function constexpr long double std::ceil(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_ceill (__x);


;; Function constexpr float std::cos(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_cosf (__x);


;; Function constexpr long double std::cos(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_cosl (__x);


;; Function constexpr float std::cosh(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_coshf (__x)>>;


;; Function constexpr long double std::cosh(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_coshl (__x)>>;


;; Function constexpr float std::exp(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expf (__x)>>;


;; Function constexpr long double std::exp(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expl (__x)>>;


;; Function constexpr float std::fabs(float) (null)
;; enabled by -tree-original


return <retval> = ABS_EXPR <__x>;


;; Function constexpr long double std::fabs(long double) (null)
;; enabled by -tree-original


return <retval> = ABS_EXPR <__x>;


;; Function constexpr float std::floor(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_floorf (__x);


;; Function constexpr long double std::floor(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_floorl (__x);


;; Function constexpr float std::fmod(float, float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_fmodf (__x, __y)>>;


;; Function constexpr long double std::fmod(long double, long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_fmodl (__x, __y)>>;


;; Function float std::frexp(float, int*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_frexpf (__x, __exp)>>;


;; Function long double std::frexp(long double, int*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_frexpl (__x, __exp)>>;


;; Function constexpr float std::ldexp(float, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_ldexpf (__x, __exp)>>;


;; Function constexpr long double std::ldexp(long double, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_ldexpl (__x, __exp)>>;


;; Function constexpr float std::log(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_logf (__x)>>;


;; Function constexpr long double std::log(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_logl (__x)>>;


;; Function constexpr float std::log10(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_log10f (__x)>>;


;; Function constexpr long double std::log10(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_log10l (__x)>>;


;; Function float std::modf(float, float*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_modff (__x, __iptr)>>;


;; Function long double std::modf(long double, long double*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_modfl (__x, __iptr)>>;


;; Function constexpr float std::pow(float, float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_powf (__x, __y)>>;


;; Function constexpr long double std::pow(long double, long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_powl (__x, __y)>>;


;; Function constexpr float std::sin(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_sinf (__x);


;; Function constexpr long double std::sin(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_sinl (__x);


;; Function constexpr float std::sinh(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_sinhf (__x)>>;


;; Function constexpr long double std::sinh(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_sinhl (__x)>>;


;; Function constexpr float std::sqrt(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_sqrtf (__x)>>;


;; Function constexpr long double std::sqrt(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_sqrtl (__x)>>;


;; Function constexpr float std::tan(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_tanf (__x);


;; Function constexpr long double std::tan(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_tanl (__x);


;; Function constexpr float std::tanh(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_tanhf (__x);


;; Function constexpr long double std::tanh(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_tanhl (__x);


;; Function constexpr int std::fpclassify(float) (null)
;; enabled by -tree-original


return <retval> = SAVE_EXPR <ABS_EXPR <__x>> ord SAVE_EXPR <ABS_EXPR <__x>> ? SAVE_EXPR <ABS_EXPR <__x>> u<= 3.4028234663852885981170418348451692544e+38 ? SAVE_EXPR <ABS_EXPR <__x>> >= 1.17549435082228750796873653722224567781866555677208752151e-38 ? 4 : SAVE_EXPR <ABS_EXPR <__x>> == 0.0 ? 2 : 3 : 1 : 0;


;; Function constexpr int std::fpclassify(double) (null)
;; enabled by -tree-original


return <retval> = SAVE_EXPR <ABS_EXPR <__x>> ord SAVE_EXPR <ABS_EXPR <__x>> ? SAVE_EXPR <ABS_EXPR <__x>> u<= 1.79769313486231570814527423731704356798070567525844996599e+308 ? SAVE_EXPR <ABS_EXPR <__x>> >= 2.22507385850720138309023271733240406421921598046233183055e-308 ? 4 : SAVE_EXPR <ABS_EXPR <__x>> == 0.0 ? 2 : 3 : 1 : 0;


;; Function constexpr int std::fpclassify(long double) (null)
;; enabled by -tree-original


return <retval> = SAVE_EXPR <ABS_EXPR <__x>> ord SAVE_EXPR <ABS_EXPR <__x>> ? SAVE_EXPR <ABS_EXPR <__x>> u<= 1.79769313486231570814527423731704356798070567525844996599e+308 ? SAVE_EXPR <ABS_EXPR <__x>> >= 2.22507385850720138309023271733240406421921598046233183055e-308 ? 4 : SAVE_EXPR <ABS_EXPR <__x>> == 0.0 ? 2 : 3 : 1 : 0;


;; Function constexpr bool std::isfinite(float) (null)
;; enabled by -tree-original


return <retval> = !(ABS_EXPR <__x> u> 3.4028234663852885981170418348451692544e+38) != 0;


;; Function constexpr bool std::isfinite(double) (null)
;; enabled by -tree-original


return <retval> = !(ABS_EXPR <__x> u> 1.79769313486231570814527423731704356798070567525844996599e+308) != 0;


;; Function constexpr bool std::isfinite(long double) (null)
;; enabled by -tree-original


return <retval> = !(ABS_EXPR <__x> u> 1.79769313486231570814527423731704356798070567525844996599e+308) != 0;


;; Function constexpr bool std::isinf(float) (null)
;; enabled by -tree-original


return <retval> = !(ABS_EXPR <__x> u<= 3.4028234663852885981170418348451692544e+38) != 0;


;; Function constexpr bool std::isinf(double) (null)
;; enabled by -tree-original


return <retval> = !(ABS_EXPR <__x> u<= 1.79769313486231570814527423731704356798070567525844996599e+308) != 0;


;; Function constexpr bool std::isinf(long double) (null)
;; enabled by -tree-original


return <retval> = !(ABS_EXPR <__x> u<= 1.79769313486231570814527423731704356798070567525844996599e+308) != 0;


;; Function constexpr bool std::isnan(float) (null)
;; enabled by -tree-original


return <retval> = __x unord __x != 0;


;; Function constexpr bool std::isnan(double) (null)
;; enabled by -tree-original


return <retval> = __x unord __x != 0;


;; Function constexpr bool std::isnan(long double) (null)
;; enabled by -tree-original


return <retval> = __x unord __x != 0;


;; Function constexpr bool std::isnormal(float) (null)
;; enabled by -tree-original


return <retval> = (int) ((bool) !(ABS_EXPR <__x> u> 3.4028234663852885981170418348451692544e+38) && (bool) !(ABS_EXPR <__x> u< 1.17549435082228750796873653722224567781866555677208752151e-38)) != 0;


;; Function constexpr bool std::isnormal(double) (null)
;; enabled by -tree-original


return <retval> = (int) ((bool) !(ABS_EXPR <__x> u> 1.79769313486231570814527423731704356798070567525844996599e+308) && (bool) !(ABS_EXPR <__x> u< 2.22507385850720138309023271733240406421921598046233183055e-308)) != 0;


;; Function constexpr bool std::isnormal(long double) (null)
;; enabled by -tree-original


return <retval> = (int) ((bool) !(ABS_EXPR <__x> u> 1.79769313486231570814527423731704356798070567525844996599e+308) && (bool) !(ABS_EXPR <__x> u< 2.22507385850720138309023271733240406421921598046233183055e-308)) != 0;


;; Function constexpr bool std::signbit(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_signbit (__x) != 0;


;; Function constexpr bool std::signbit(double) (null)
;; enabled by -tree-original


return <retval> = __builtin_signbit (__x) != 0;


;; Function constexpr bool std::signbit(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_signbit (__x) != 0;


;; Function constexpr bool std::isgreater(float, float) (null)
;; enabled by -tree-original


return <retval> = !(__x u<= __y) != 0;


;; Function constexpr bool std::isgreater(double, double) (null)
;; enabled by -tree-original


return <retval> = !(__x u<= __y) != 0;


;; Function constexpr bool std::isgreater(long double, long double) (null)
;; enabled by -tree-original


return <retval> = !(__x u<= __y) != 0;


;; Function constexpr bool std::isgreaterequal(float, float) (null)
;; enabled by -tree-original


return <retval> = !(__x u< __y) != 0;


;; Function constexpr bool std::isgreaterequal(double, double) (null)
;; enabled by -tree-original


return <retval> = !(__x u< __y) != 0;


;; Function constexpr bool std::isgreaterequal(long double, long double) (null)
;; enabled by -tree-original


return <retval> = !(__x u< __y) != 0;


;; Function constexpr bool std::isless(float, float) (null)
;; enabled by -tree-original


return <retval> = !(__x u>= __y) != 0;


;; Function constexpr bool std::isless(double, double) (null)
;; enabled by -tree-original


return <retval> = !(__x u>= __y) != 0;


;; Function constexpr bool std::isless(long double, long double) (null)
;; enabled by -tree-original


return <retval> = !(__x u>= __y) != 0;


;; Function constexpr bool std::islessequal(float, float) (null)
;; enabled by -tree-original


return <retval> = !(__x u> __y) != 0;


;; Function constexpr bool std::islessequal(double, double) (null)
;; enabled by -tree-original


return <retval> = !(__x u> __y) != 0;


;; Function constexpr bool std::islessequal(long double, long double) (null)
;; enabled by -tree-original


return <retval> = !(__x u> __y) != 0;


;; Function constexpr bool std::islessgreater(float, float) (null)
;; enabled by -tree-original


return <retval> = !(__x u== __y) != 0;


;; Function constexpr bool std::islessgreater(double, double) (null)
;; enabled by -tree-original


return <retval> = !(__x u== __y) != 0;


;; Function constexpr bool std::islessgreater(long double, long double) (null)
;; enabled by -tree-original


return <retval> = !(__x u== __y) != 0;


;; Function constexpr bool std::isunordered(float, float) (null)
;; enabled by -tree-original


return <retval> = __x unord __y != 0;


;; Function constexpr bool std::isunordered(double, double) (null)
;; enabled by -tree-original


return <retval> = __x unord __y != 0;


;; Function constexpr bool std::isunordered(long double, long double) (null)
;; enabled by -tree-original


return <retval> = __x unord __y != 0;


;; Function constexpr float std::acosh(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_acoshf (__x)>>;


;; Function constexpr long double std::acosh(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_acoshl (__x)>>;


;; Function constexpr float std::asinh(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_asinhf (__x);


;; Function constexpr long double std::asinh(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_asinhl (__x);


;; Function constexpr float std::atanh(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_atanhf (__x)>>;


;; Function constexpr long double std::atanh(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_atanhl (__x)>>;


;; Function constexpr float std::cbrt(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_cbrtf (__x);


;; Function constexpr long double std::cbrt(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_cbrtl (__x);


;; Function constexpr float std::copysign(float, float) (null)
;; enabled by -tree-original


return <retval> = __builtin_copysignf (__x, __y);


;; Function constexpr long double std::copysign(long double, long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_copysignl (__x, __y);


;; Function constexpr float std::erf(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_erff (__x);


;; Function constexpr long double std::erf(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_erfl (__x);


;; Function constexpr float std::erfc(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_erfcf (__x)>>;


;; Function constexpr long double std::erfc(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_erfcl (__x)>>;


;; Function constexpr float std::exp2(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_exp2f (__x)>>;


;; Function constexpr long double std::exp2(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_exp2l (__x)>>;


;; Function constexpr float std::expm1(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expm1f (__x)>>;


;; Function constexpr long double std::expm1(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_expm1l (__x)>>;


;; Function constexpr float std::fdim(float, float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_fdimf (__x, __y)>>;


;; Function constexpr long double std::fdim(long double, long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_fdiml (__x, __y)>>;


;; Function constexpr float std::fma(float, float, float) (null)
;; enabled by -tree-original


return <retval> = __builtin_fmaf (__x, __y, __z);


;; Function constexpr long double std::fma(long double, long double, long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_fmal (__x, __y, __z);


;; Function constexpr float std::fmax(float, float) (null)
;; enabled by -tree-original


return <retval> = __builtin_fmaxf (__x, __y);


;; Function constexpr long double std::fmax(long double, long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_fmaxl (__x, __y);


;; Function constexpr float std::fmin(float, float) (null)
;; enabled by -tree-original


return <retval> = __builtin_fminf (__x, __y);


;; Function constexpr long double std::fmin(long double, long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_fminl (__x, __y);


;; Function constexpr float std::hypot(float, float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_hypotf (__x, __y)>>;


;; Function constexpr long double std::hypot(long double, long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_hypotl (__x, __y)>>;


;; Function constexpr int std::ilogb(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_ilogbf (__x)>>;


;; Function constexpr int std::ilogb(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_ilogbl (__x)>>;


;; Function constexpr float std::lgamma(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_lgammaf (__x)>>;


;; Function constexpr long double std::lgamma(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_lgammal (__x)>>;


;; Function constexpr long long int std::llrint(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_llrintf (__x)>>;


;; Function constexpr long long int std::llrint(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_llrintl (__x)>>;


;; Function constexpr long long int std::llround(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_llroundf (__x)>>;


;; Function constexpr long long int std::llround(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_llroundl (__x)>>;


;; Function constexpr float std::log1p(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_log1pf (__x)>>;


;; Function constexpr long double std::log1p(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_log1pl (__x)>>;


;; Function constexpr float std::log2(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_log2f (__x)>>;


;; Function constexpr long double std::log2(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_log2l (__x)>>;


;; Function constexpr float std::logb(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_logbf (__x)>>;


;; Function constexpr long double std::logb(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_logbl (__x)>>;


;; Function constexpr long int std::lrint(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_lrintf (__x)>>;


;; Function constexpr long int std::lrint(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_lrintl (__x)>>;


;; Function constexpr long int std::lround(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_lroundf (__x)>>;


;; Function constexpr long int std::lround(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_lroundl (__x)>>;


;; Function constexpr float std::nearbyint(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_nearbyintf (__x);


;; Function constexpr long double std::nearbyint(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_nearbyintl (__x);


;; Function constexpr float std::nextafter(float, float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_nextafterf (__x, __y)>>;


;; Function constexpr long double std::nextafter(long double, long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_nextafterl (__x, __y)>>;


;; Function constexpr float std::nexttoward(float, long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_nexttowardf (__x, __y)>>;


;; Function constexpr long double std::nexttoward(long double, long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_nexttowardl (__x, __y)>>;


;; Function constexpr float std::remainder(float, float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_remainderf (__x, __y)>>;


;; Function constexpr long double std::remainder(long double, long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_remainderl (__x, __y)>>;


;; Function float std::remquo(float, float, int*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_remquof (__x, __y, __pquo)>>;


;; Function long double std::remquo(long double, long double, int*) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_remquol (__x, __y, __pquo)>>;


;; Function constexpr float std::rint(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_rintf (__x);


;; Function constexpr long double std::rint(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_rintl (__x);


;; Function constexpr float std::round(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_roundf (__x);


;; Function constexpr long double std::round(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_roundl (__x);


;; Function constexpr float std::scalbln(float, long int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_scalblnf (__x, __ex)>>;


;; Function constexpr long double std::scalbln(long double, long int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_scalblnl (__x, __ex)>>;


;; Function constexpr float std::scalbn(float, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_scalbnf (__x, __ex)>>;


;; Function constexpr long double std::scalbn(long double, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_scalbnl (__x, __ex)>>;


;; Function constexpr float std::tgamma(float) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_tgammaf (__x)>>;


;; Function constexpr long double std::tgamma(long double) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __builtin_tgammal (__x)>>;


;; Function constexpr float std::trunc(float) (null)
;; enabled by -tree-original


return <retval> = __builtin_truncf (__x);


;; Function constexpr long double std::trunc(long double) (null)
;; enabled by -tree-original


return <retval> = __builtin_truncl (__x);


;; Function void debug(const char*, ...) (null)
;; enabled by -tree-original


{
  struct va_list args;

    struct va_list args;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_start ((struct  &) &args, format) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) vfprintf (_impure_ptr->_stderr, format, args) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_end ((struct  &) &args) >>>>>;
}


;; Function void debug_if(int, const char*, ...) (null)
;; enabled by -tree-original


{
  {
    if (condition != 0)
      {
        {
          struct va_list args;

                    struct va_list args;
          <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_start ((struct  &) &args, format) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) vfprintf (_impure_ptr->_stderr, format, args) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_end ((struct  &) &args) >>>>>;
        }
      }
  }
}


;; Function mbed::DigitalIn::DigitalIn(PinName) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct DigitalIn *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct DigitalIn *) this)->gpio = {.mask=0, .reg_in=0B, .reg_set=0B, .reg_clr=0B, .pin=0, .gpio=0B, .ll_pin=0}) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  gpio_init_in (&((struct DigitalIn *) this)->gpio, pin) >>>>>;
}
<D.41957>:;
return this;


;; Function mbed::DigitalIn::DigitalIn(PinName, PinMode) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct DigitalIn *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct DigitalIn *) this)->gpio = {.mask=0, .reg_in=0B, .reg_set=0B, .reg_clr=0B, .pin=0, .gpio=0B, .ll_pin=0}) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  gpio_init_in_ex (&((struct DigitalIn *) this)->gpio, pin, mode) >>>>>;
}
<D.41997>:;
return this;


;; Function int mbed::DigitalIn::read() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = gpio_read (&((struct DigitalIn *) this)->gpio)>>;


;; Function void mbed::DigitalIn::mode(PinMode) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  gpio_mode (&((struct DigitalIn *) this)->gpio, pull) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function int mbed::DigitalIn::is_connected() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = gpio_is_connected ((const struct gpio_t *) &((struct DigitalIn *) this)->gpio)>>;


;; Function mbed::DigitalIn::operator int() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::DigitalIn::read ((struct DigitalIn *) this)>>;


;; Function mbed::DigitalOut::DigitalOut(PinName) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct DigitalOut *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct DigitalOut *) this)->gpio = {.mask=0, .reg_in=0B, .reg_set=0B, .reg_clr=0B, .pin=0, .gpio=0B, .ll_pin=0}) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  gpio_init_out (&((struct DigitalOut *) this)->gpio, pin) >>>>>;
}
<D.42048>:;
return this;


;; Function mbed::DigitalOut::DigitalOut(PinName, int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct DigitalOut *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct DigitalOut *) this)->gpio = {.mask=0, .reg_in=0B, .reg_set=0B, .reg_clr=0B, .pin=0, .gpio=0B, .ll_pin=0}) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  gpio_init_out_ex (&((struct DigitalOut *) this)->gpio, pin, value) >>>>>;
}
<D.42055>:;
return this;


;; Function void mbed::DigitalOut::write(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  gpio_write (&((struct DigitalOut *) this)->gpio, value) >>>>>;


;; Function int mbed::DigitalOut::read() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = gpio_read (&((struct DigitalOut *) this)->gpio)>>;


;; Function int mbed::DigitalOut::is_connected() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = gpio_is_connected ((const struct gpio_t *) &((struct DigitalOut *) this)->gpio)>>;


;; Function mbed::DigitalOut& mbed::DigitalOut::operator=(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::DigitalOut::write ((struct DigitalOut *) this, value) >>>>>;
return <retval> = (struct DigitalOut &) this;


;; Function mbed::DigitalOut& mbed::DigitalOut::operator=(mbed::DigitalOut&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::DigitalOut::write ((struct DigitalOut *) this, mbed::DigitalOut::read ((struct DigitalOut *) rhs)) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
return <retval> = (struct DigitalOut &) this;


;; Function mbed::DigitalOut::operator int() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::DigitalOut::read ((struct DigitalOut *) this)>>;


;; Function mbed::DigitalInOut::DigitalInOut(PinName) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct DigitalInOut *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct DigitalInOut *) this)->gpio = {.mask=0, .reg_in=0B, .reg_set=0B, .reg_clr=0B, .pin=0, .gpio=0B, .ll_pin=0}) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  gpio_init_in (&((struct DigitalInOut *) this)->gpio, pin) >>>>>;
}
<D.42121>:;
return this;


;; Function mbed::DigitalInOut::DigitalInOut(PinName, PinDirection, PinMode, int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct DigitalInOut *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct DigitalInOut *) this)->gpio = {.mask=0, .reg_in=0B, .reg_set=0B, .reg_clr=0B, .pin=0, .gpio=0B, .ll_pin=0}) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  gpio_init_inout (&((struct DigitalInOut *) this)->gpio, pin, direction, mode, value) >>>>>;
}
<D.42128>:;
return this;


;; Function void mbed::DigitalInOut::write(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  gpio_write (&((struct DigitalInOut *) this)->gpio, value) >>>>>;


;; Function int mbed::DigitalInOut::read() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = gpio_read (&((struct DigitalInOut *) this)->gpio)>>;


;; Function void mbed::DigitalInOut::output() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  gpio_dir (&((struct DigitalInOut *) this)->gpio, 1) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function void mbed::DigitalInOut::input() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  gpio_dir (&((struct DigitalInOut *) this)->gpio, 0) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function void mbed::DigitalInOut::mode(PinMode) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  gpio_mode (&((struct DigitalInOut *) this)->gpio, pull) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function int mbed::DigitalInOut::is_connected() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = gpio_is_connected ((const struct gpio_t *) &((struct DigitalInOut *) this)->gpio)>>;


;; Function mbed::DigitalInOut& mbed::DigitalInOut::operator=(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::DigitalInOut::write ((struct DigitalInOut *) this, value) >>>>>;
return <retval> = (struct DigitalInOut &) this;


;; Function mbed::DigitalInOut& mbed::DigitalInOut::operator=(mbed::DigitalInOut&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::DigitalInOut::write ((struct DigitalInOut *) this, mbed::DigitalInOut::read ((struct DigitalInOut *) rhs)) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
return <retval> = (struct DigitalInOut &) this;


;; Function mbed::DigitalInOut::operator int() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::DigitalInOut::read ((struct DigitalInOut *) this)>>;


;; Function PlatformMutex::PlatformMutex() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<PlatformMutex>::NonCopyable ((struct NonCopyable *) this) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) mbed::NonCopyable<PlatformMutex>::~NonCopyable ((struct NonCopyable *) this);
    }
}
<D.42224>:;
return this;


;; Function PlatformMutex::~PlatformMutex() (null)
;; enabled by -tree-original


{
  try
    {
      
    }
  finally
    {
      (void) mbed::NonCopyable<PlatformMutex>::~NonCopyable ((struct NonCopyable *) this);
    }
}
<D.42231>:;
return this;


;; Function void PlatformMutex::lock() (null)
;; enabled by -tree-original





;; Function void PlatformMutex::unlock() (null)
;; enabled by -tree-original





;; Function int mbed::BusIn::mask() (null)
;; enabled by -tree-original


return <retval> = ((struct BusIn *) this)->_nc_mask;


;; Function int mbed::BusOut::mask() (null)
;; enabled by -tree-original


return <retval> = ((struct BusOut *) this)->_nc_mask;


;; Function int mbed::BusInOut::mask() (null)
;; enabled by -tree-original


return <retval> = ((struct BusInOut *) this)->_nc_mask;


;; Function mbed::PortIn::PortIn(PortName, int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct PortIn *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  port_init (&((struct PortIn *) this)->_port, port, mask, 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
}
<D.42701>:;
return this;


;; Function int mbed::PortIn::read() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = port_read (&((struct PortIn *) this)->_port)>>;


;; Function void mbed::PortIn::mode(PinMode) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  port_mode (&((struct PortIn *) this)->_port, mode) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function mbed::PortIn::operator int() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::PortIn::read ((struct PortIn *) this)>>;


;; Function mbed::PortInOut::PortInOut(PortName, int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct PortInOut *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  port_init (&((struct PortInOut *) this)->_port, port, mask, 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
}
<D.42780>:;
return this;


;; Function void mbed::PortInOut::write(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  port_write (&((struct PortInOut *) this)->_port, value) >>>>>;


;; Function int mbed::PortInOut::read() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = port_read (&((struct PortInOut *) this)->_port)>>;


;; Function void mbed::PortInOut::output() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  port_dir (&((struct PortInOut *) this)->_port, 1) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function void mbed::PortInOut::input() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  port_dir (&((struct PortInOut *) this)->_port, 0) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function void mbed::PortInOut::mode(PinMode) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  port_mode (&((struct PortInOut *) this)->_port, mode) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function mbed::PortInOut& mbed::PortInOut::operator=(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::PortInOut::write ((struct PortInOut *) this, value) >>>>>;
return <retval> = (struct PortInOut &) this;


;; Function mbed::PortInOut& mbed::PortInOut::operator=(mbed::PortInOut&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::PortInOut::write ((struct PortInOut *) this, mbed::PortInOut::read ((struct PortInOut *) rhs)) >>>>>;
return <retval> = (struct PortInOut &) this;


;; Function mbed::PortInOut::operator int() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::PortInOut::read ((struct PortInOut *) this)>>;


;; Function mbed::PortOut::PortOut(PortName, int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct PortOut *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  port_init (&((struct PortOut *) this)->_port, port, mask, 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
}
<D.42824>:;
return this;


;; Function void mbed::PortOut::write(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  port_write (&((struct PortOut *) this)->_port, value) >>>>>;


;; Function int mbed::PortOut::read() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = port_read (&((struct PortOut *) this)->_port)>>;


;; Function mbed::PortOut& mbed::PortOut::operator=(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::PortOut::write ((struct PortOut *) this, value) >>>>>;
return <retval> = (struct PortOut &) this;


;; Function mbed::PortOut& mbed::PortOut::operator=(mbed::PortOut&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::PortOut::write ((struct PortOut *) this, mbed::PortOut::read ((struct PortOut *) rhs)) >>>>>;
return <retval> = (struct PortOut &) this;


;; Function mbed::PortOut::operator int() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::PortOut::read ((struct PortOut *) this)>>;


;; Function void singleton_lock() (null)
;; enabled by -tree-original





;; Function void singleton_unlock() (null)
;; enabled by -tree-original





;; Function mbed::AnalogIn::AnalogIn(PinName) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct AnalogIn *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct AnalogIn *) this)->_vptr.AnalogIn = &_ZTVN4mbed8AnalogInE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::AnalogIn::lock ((struct AnalogIn *) this) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  analogin_init (&((struct AnalogIn *) this)->_adc, pin) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::AnalogIn::unlock ((struct AnalogIn *) this) >>>>>;
}
<D.42908>:;
return this;


;; Function float mbed::AnalogIn::read() (null)
;; enabled by -tree-original


{
  float ret;

  <<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogIn *) this)->_vptr.AnalogIn + 8);(struct AnalogIn)(struct AnalogIn *) this->2) ((struct AnalogIn *) this) >>>>>;
    float ret;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret = analogin_read (&((struct AnalogIn *) this)->_adc)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogIn *) this)->_vptr.AnalogIn + 12);(struct AnalogIn)(struct AnalogIn *) this->3) ((struct AnalogIn *) this) >>>>>;
  return <retval> = ret;
}


;; Function short unsigned int mbed::AnalogIn::read_u16() (null)
;; enabled by -tree-original


{
  short unsigned int ret;

  <<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogIn *) this)->_vptr.AnalogIn + 8);(struct AnalogIn)(struct AnalogIn *) this->2) ((struct AnalogIn *) this) >>>>>;
    short unsigned int ret;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret = analogin_read_u16 (&((struct AnalogIn *) this)->_adc)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogIn *) this)->_vptr.AnalogIn + 12);(struct AnalogIn)(struct AnalogIn *) this->3) ((struct AnalogIn *) this) >>>>>;
  return <retval> = ret;
}


;; Function mbed::AnalogIn::operator float() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::AnalogIn::read ((struct AnalogIn *) this)>>;


;; Function virtual mbed::AnalogIn::~AnalogIn() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct AnalogIn *) this)->_vptr.AnalogIn = &_ZTVN4mbed8AnalogInE + 8) >>>>>;
  try
    {
      
    }
  finally
    {
      *(struct AnalogIn *) this = {CLOBBER};
    }
}
<D.43019>:;
return this;


;; Function virtual void mbed::AnalogIn::lock() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  PlatformMutex::lock (SingletonPtr<PlatformMutex>::operator-> (&_mutex)) >>>>>;


;; Function virtual void mbed::AnalogIn::unlock() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  PlatformMutex::unlock (SingletonPtr<PlatformMutex>::operator-> (&_mutex)) >>>>>;


;; Function mbed::AnalogOut::AnalogOut(PinName) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    int (*) () * _vptr.AnalogOut;
    struct dac_t _dac;
    struct PlatformMutex _mutex;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct AnalogOut *) this)->_vptr.AnalogOut = &_ZTVN4mbed9AnalogOutE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  PlatformMutex::PlatformMutex (&((struct AnalogOut *) this)->_mutex) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  analogout_init (&((struct AnalogOut *) this)->_dac, pin) >>>>>;
    }
  catch
    {
      (void) PlatformMutex::~PlatformMutex (&((struct AnalogOut *) this)->_mutex);
    }
}
<D.43105>:;
return this;


;; Function void mbed::AnalogOut::write(float) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogOut *) this)->_vptr.AnalogOut + 8);(struct AnalogOut)(struct AnalogOut *) this->2) ((struct AnalogOut *) this) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  analogout_write (&((struct AnalogOut *) this)->_dac, value) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogOut *) this)->_vptr.AnalogOut + 12);(struct AnalogOut)(struct AnalogOut *) this->3) ((struct AnalogOut *) this) >>>>>;


;; Function void mbed::AnalogOut::write_u16(short unsigned int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogOut *) this)->_vptr.AnalogOut + 8);(struct AnalogOut)(struct AnalogOut *) this->2) ((struct AnalogOut *) this) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  analogout_write_u16 (&((struct AnalogOut *) this)->_dac, value) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogOut *) this)->_vptr.AnalogOut + 12);(struct AnalogOut)(struct AnalogOut *) this->3) ((struct AnalogOut *) this) >>>>>;


;; Function float mbed::AnalogOut::read() (null)
;; enabled by -tree-original


{
  float ret;

  <<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogOut *) this)->_vptr.AnalogOut + 8);(struct AnalogOut)(struct AnalogOut *) this->2) ((struct AnalogOut *) this) >>>>>;
    float ret;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret = analogout_read (&((struct AnalogOut *) this)->_dac)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct AnalogOut *) this)->_vptr.AnalogOut + 12);(struct AnalogOut)(struct AnalogOut *) this->3) ((struct AnalogOut *) this) >>>>>;
  return <retval> = ret;
}


;; Function mbed::AnalogOut& mbed::AnalogOut::operator=(float) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::AnalogOut::write ((struct AnalogOut *) this, percent) >>>>>;
return <retval> = (struct AnalogOut &) this;


;; Function mbed::AnalogOut& mbed::AnalogOut::operator=(mbed::AnalogOut&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::AnalogOut::write ((struct AnalogOut *) this, mbed::AnalogOut::read ((struct AnalogOut *) rhs)) >>>>>;
return <retval> = (struct AnalogOut &) this;


;; Function mbed::AnalogOut::operator float() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::AnalogOut::read ((struct AnalogOut *) this)>>;


;; Function virtual mbed::AnalogOut::~AnalogOut() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct AnalogOut *) this)->_vptr.AnalogOut = &_ZTVN4mbed9AnalogOutE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) PlatformMutex::~PlatformMutex (&((struct AnalogOut *) this)->_mutex);
        }
    }
  finally
    {
      *(struct 
      {
        int (*) () * _vptr.AnalogOut;
        struct dac_t _dac;
        struct PlatformMutex _mutex;
      } &) this = {CLOBBER};
    }
}
<D.43194>:;
return this;


;; Function virtual void mbed::AnalogOut::lock() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  PlatformMutex::lock (&((struct AnalogOut *) this)->_mutex) >>>>>;


;; Function virtual void mbed::AnalogOut::unlock() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  PlatformMutex::unlock (&((struct AnalogOut *) this)->_mutex) >>>>>;


;; Function void sleep() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  sleep_manager_sleep_auto () >>>>>;


;; Function void deepsleep() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  sleep_manager_sleep_auto () >>>>>;


;; Function void system_reset() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __NVIC_SystemReset () >>>>>;


;; Function mbed::PwmOut::PwmOut(PinName) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct pwmout_t _pwm;
    bool _deep_sleep_locked;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PwmOut *) this)->_deep_sleep_locked = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  pwmout_init (&((struct PwmOut *) this)->_pwm, pin) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
}
<D.43391>:;
return this;


;; Function mbed::PwmOut::~PwmOut() (null)
;; enabled by -tree-original


{
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::PwmOut::unlock_deep_sleep ((struct PwmOut *) this) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
    }
  finally
    {
      *(struct 
      {
        struct pwmout_t _pwm;
        bool _deep_sleep_locked;
      } &) this = {CLOBBER};
    }
}
<D.43431>:;
return this;


;; Function void mbed::PwmOut::write(float) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::PwmOut::lock_deep_sleep ((struct PwmOut *) this) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  pwmout_write (&((struct PwmOut *) this)->_pwm, value) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function float mbed::PwmOut::read() (null)
;; enabled by -tree-original


{
  float val;

  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
    float val;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (val = pwmout_read (&((struct PwmOut *) this)->_pwm)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
  return <retval> = val;
}


;; Function void mbed::PwmOut::period(float) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  pwmout_period (&((struct PwmOut *) this)->_pwm, seconds) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function void mbed::PwmOut::period_ms(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  pwmout_period_ms (&((struct PwmOut *) this)->_pwm, ms) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function void mbed::PwmOut::period_us(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  pwmout_period_us (&((struct PwmOut *) this)->_pwm, us) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function void mbed::PwmOut::pulsewidth(float) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  pwmout_pulsewidth (&((struct PwmOut *) this)->_pwm, seconds) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function void mbed::PwmOut::pulsewidth_ms(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  pwmout_pulsewidth_ms (&((struct PwmOut *) this)->_pwm, ms) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function void mbed::PwmOut::pulsewidth_us(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  pwmout_pulsewidth_us (&((struct PwmOut *) this)->_pwm, us) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function mbed::PwmOut& mbed::PwmOut::operator=(float) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::PwmOut::write ((struct PwmOut *) this, value) >>>>>;
return <retval> = (struct PwmOut &) this;


;; Function mbed::PwmOut& mbed::PwmOut::operator=(mbed::PwmOut&) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::PwmOut::write ((struct PwmOut *) this, mbed::PwmOut::read ((struct PwmOut *) rhs)) >>>>>;
return <retval> = (struct PwmOut &) this;


;; Function mbed::PwmOut::operator float() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::PwmOut::read ((struct PwmOut *) this)>>;


;; Function void mbed::PwmOut::lock_deep_sleep() (null)
;; enabled by -tree-original


if ((int) ((struct PwmOut *) this)->_deep_sleep_locked == 0)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  sleep_manager_lock_deep_sleep_internal () >>>>>;
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PwmOut *) this)->_deep_sleep_locked = 1) >>>>>;
  }


;; Function void mbed::PwmOut::unlock_deep_sleep() (null)
;; enabled by -tree-original


if ((int) ((struct PwmOut *) this)->_deep_sleep_locked == 1)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  sleep_manager_unlock_deep_sleep_internal () >>>>>;
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct PwmOut *) this)->_deep_sleep_locked = 0) >>>>>;
  }


;; Function virtual mbed::FileHandle::~FileHandle() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct FileHandle *) this)->_vptr.FileHandle = &_ZTVN4mbed10FileHandleE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) mbed::NonCopyable<mbed::FileHandle>::~NonCopyable ((struct NonCopyable *) this);
        }
    }
  finally
    {
      *(struct FileHandle *) this = {CLOBBER};
    }
}
<D.49379>:;
return this;


;; Function virtual int mbed::FileHandle::sync() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function virtual int mbed::FileHandle::isatty() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function virtual off_t mbed::FileHandle::tell() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = OBJ_TYPE_REF(*(((struct FileHandle *) this)->_vptr.FileHandle + 16);(struct FileHandle)(struct FileHandle *) this->4) ((struct FileHandle *) this, 0, 1)>>;


;; Function virtual void mbed::FileHandle::rewind() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) OBJ_TYPE_REF(*(((struct FileHandle *) this)->_vptr.FileHandle + 16);(struct FileHandle)(struct FileHandle *) this->4) ((struct FileHandle *) this, 0, 0) >>>>>;


;; Function virtual off_t mbed::FileHandle::lseek(off_t, int) (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = OBJ_TYPE_REF(*(((struct FileHandle *) this)->_vptr.FileHandle + 16);(struct FileHandle)(struct FileHandle *) this->4) ((struct FileHandle *) this, offset, whence)>>;


;; Function virtual int mbed::FileHandle::fsync() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = OBJ_TYPE_REF(*(((struct FileHandle *) this)->_vptr.FileHandle + 24);(struct FileHandle)(struct FileHandle *) this->6) ((struct FileHandle *) this)>>;


;; Function virtual off_t mbed::FileHandle::flen() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = OBJ_TYPE_REF(*(((struct FileHandle *) this)->_vptr.FileHandle + 40);(struct FileHandle)(struct FileHandle *) this->10) ((struct FileHandle *) this)>>;


;; Function virtual int mbed::FileHandle::set_blocking(bool) (null)
;; enabled by -tree-original


return <retval> = blocking ? 0 : -25;


;; Function virtual bool mbed::FileHandle::is_blocking() const (null)
;; enabled by -tree-original


return <retval> = 1;


;; Function virtual short int mbed::FileHandle::poll(short int) const (null)
;; enabled by -tree-original


return <retval> = 17;


;; Function bool mbed::FileHandle::writable() const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((int) (unsigned short) OBJ_TYPE_REF(*(((const struct FileHandle *) this)->_vptr.FileHandle + 64);(const struct FileHandle)(const struct FileHandle *) this->16) ((const struct FileHandle *) this, 16) & 16) != 0>>;


;; Function bool mbed::FileHandle::readable() const (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = ((int) (unsigned short) OBJ_TYPE_REF(*(((const struct FileHandle *) this)->_vptr.FileHandle + 64);(const struct FileHandle)(const struct FileHandle *) this->16) ((const struct FileHandle *) this, 1) & 1) != 0>>;


;; Function virtual void mbed::FileHandle::sigio(mbed::Callback<void()>) (null)
;; enabled by -tree-original





;; Function mbed::FileHandle::FileHandle() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<mbed::FileHandle>::NonCopyable ((struct NonCopyable *) this) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct FileHandle *) this)->_vptr.FileHandle = &_ZTVN4mbed10FileHandleE + 8) >>>>>;
    }
  catch
    {
      (void) mbed::NonCopyable<mbed::FileHandle>::~NonCopyable ((struct NonCopyable *) this);
    }
}
<D.50135>:;
return this;


;; Function mbed::FileLike::FileLike(const char*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct FileHandle D.50112;
    struct 
    {
      int (*) () * _vptr.FileBase;
      struct FileBase * _next;
      const char * const _name;
      const PathType _path_type;
    } D.50113;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::FileHandle::FileHandle (&((struct FileLike *) this)->D.50110) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::FileBase::FileBase (&((struct FileLike *) this)->D.50111, name, 0) >>>>>;
      try
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<mbed::FileLike>::NonCopyable ((struct NonCopyable *) this) >>>>>;
          try
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct FileLike *) this)->D.50110._vptr.FileHandle = &_ZTVN4mbed8FileLikeE + 8) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct FileLike *) this)->D.50111._vptr.FileBase = &_ZTVN4mbed8FileLikeE + 88) >>>>>;
            }
          catch
            {
              (void) mbed::NonCopyable<mbed::FileLike>::~NonCopyable ((struct NonCopyable *) this);
            }
        }
      catch
        {
          (void) mbed::FileBase::~FileBase (&((struct FileLike *) this)->D.50111);
        }
    }
  catch
    {
      (void) mbed::FileHandle::~FileHandle (&((struct FileLike *) this)->D.50110);
    }
}
<D.50118>:;
return this;


;; Function virtual mbed::FileLike::~FileLike() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct FileLike *) this)->D.50110._vptr.FileHandle = &_ZTVN4mbed8FileLikeE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct FileLike *) this)->D.50111._vptr.FileBase = &_ZTVN4mbed8FileLikeE + 88) >>>>>;
  try
    {
      try
        {
          try
            {
              try
                {
                  
                }
              finally
                {
                  (void) mbed::NonCopyable<mbed::FileLike>::~NonCopyable ((struct NonCopyable *) this);
                }
            }
          finally
            {
              (void) mbed::FileBase::~FileBase (&((struct FileLike *) this)->D.50111);
            }
        }
      finally
        {
          (void) mbed::FileHandle::~FileHandle (&((struct FileLike *) this)->D.50110);
        }
    }
  finally
    {
      *(struct 
      {
        struct FileHandle D.50112;
        struct 
        {
          int (*) () * _vptr.FileBase;
          struct FileBase * _next;
          const char * const _name;
          const PathType _path_type;
        } D.50113;
      } &) this = {CLOBBER};
    }
}
<D.50156>:;
return this;


;; Function mbed::Stream::operator FILE*() (null)
;; enabled by -tree-original


return <retval> = ((struct Stream *) this)->_file;


;; Function virtual void mbed::Stream::lock() (null)
;; enabled by -tree-original





;; Function virtual void mbed::Stream::unlock() (null)
;; enabled by -tree-original





;; Function bool mbed::Serial::readable() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::SerialBase::readable (&((struct Serial *) this)->D.51717) != 0>>;


;; Function bool mbed::Serial::writable() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::SerialBase::writeable (&((struct Serial *) this)->D.51717) != 0>>;


;; Function bool mbed::Serial::writeable() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = mbed::SerialBase::writeable (&((struct Serial *) this)->D.51717) != 0>>;


;; Function virtual mbed::I2C::~I2C() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct I2C *) this)->_vptr.I2C = &_ZTVN4mbed3I2CE + 8) >>>>>;
  try
    {
      try
        {
          try
            {
              try
                {
                  
                }
              finally
                {
                  (void) CThunk<mbed::I2C>::~CThunk (&((struct I2C *) this)->_irq);
                }
            }
          finally
            {
              (void) mbed::Callback<void(int)>::~Callback (&((struct I2C *) this)->_callback);
            }
        }
      finally
        {
          (void) mbed::NonCopyable<mbed::I2C>::~NonCopyable ((struct NonCopyable *) this);
        }
    }
  finally
    {
      *(struct I2C *) this = {CLOBBER};
    }
}
<D.52781>:;
return this;


;; Function mbed::CANMessage::CANMessage() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct CANMessage *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964 = {.id=0, .data={[0 ... 7]=0}, .len=0, .format=0, .type=0}) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.len = 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.type = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.format = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.id = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memset ((void *) &((struct CANMessage *) this)->D.52964.data, 0, 8) >>>>>;
}
<D.52967>:;
return this;


;; Function mbed::CANMessage::CANMessage(unsigned int, const char*, char, CANType, CANFormat) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct CANMessage *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.len = (unsigned char) _len & 15) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.type = _type) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.format = _format) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.id = _id) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memcpy ((void *) &((struct CANMessage *) this)->D.52964.data, (const void *) _data, (size_t) _len) >>>>>;
}
<D.53007>:;
return this;


;; Function mbed::CANMessage::CANMessage(unsigned int, CANFormat) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct CANMessage *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.len = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.type = 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.format = _format) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CANMessage *) this)->D.52964.id = _id) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memset ((void *) &((struct CANMessage *) this)->D.52964.data, 0, 8) >>>>>;
}
<D.53014>:;
return this;


;; Function virtual int mbed::UARTSerial::set_blocking(bool) (_ZN4mbed10UARTSerial12set_blockingEb)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct UARTSerial *) this)->_blocking = blocking) >>>>>;
return <retval> = 0;


;; Function virtual bool mbed::UARTSerial::is_blocking() const (_ZNK4mbed10UARTSerial11is_blockingEv)
;; enabled by -tree-original


return <retval> = (bool) ((const struct UARTSerial *) this)->_blocking;


;; Function static constexpr bool std::numeric_limits<bool>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr bool std::numeric_limits<bool>::max() (null)
;; enabled by -tree-original


return <retval> = 1;


;; Function static constexpr bool std::numeric_limits<bool>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr bool std::numeric_limits<bool>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr bool std::numeric_limits<bool>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr bool std::numeric_limits<bool>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr bool std::numeric_limits<bool>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr bool std::numeric_limits<bool>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr bool std::numeric_limits<bool>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char std::numeric_limits<char>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char std::numeric_limits<char>::max() (null)
;; enabled by -tree-original


return <retval> = 255;


;; Function static constexpr char std::numeric_limits<char>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr char std::numeric_limits<char>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char std::numeric_limits<char>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char std::numeric_limits<char>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char std::numeric_limits<char>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char std::numeric_limits<char>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char std::numeric_limits<char>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr signed char std::numeric_limits<signed char>::min() (null)
;; enabled by -tree-original


return <retval> = -128;


;; Function static constexpr signed char std::numeric_limits<signed char>::max() (null)
;; enabled by -tree-original


return <retval> = 127;


;; Function static constexpr signed char std::numeric_limits<signed char>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = -128>>;


;; Function static constexpr signed char std::numeric_limits<signed char>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr signed char std::numeric_limits<signed char>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr signed char std::numeric_limits<signed char>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr signed char std::numeric_limits<signed char>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr signed char std::numeric_limits<signed char>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr signed char std::numeric_limits<signed char>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned char std::numeric_limits<unsigned char>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned char std::numeric_limits<unsigned char>::max() (null)
;; enabled by -tree-original


return <retval> = 255;


;; Function static constexpr unsigned char std::numeric_limits<unsigned char>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr unsigned char std::numeric_limits<unsigned char>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned char std::numeric_limits<unsigned char>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned char std::numeric_limits<unsigned char>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned char std::numeric_limits<unsigned char>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned char std::numeric_limits<unsigned char>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned char std::numeric_limits<unsigned char>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr wchar_t std::numeric_limits<wchar_t>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr wchar_t std::numeric_limits<wchar_t>::max() (null)
;; enabled by -tree-original


return <retval> = 4294967295;


;; Function static constexpr wchar_t std::numeric_limits<wchar_t>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr wchar_t std::numeric_limits<wchar_t>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr wchar_t std::numeric_limits<wchar_t>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr wchar_t std::numeric_limits<wchar_t>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr wchar_t std::numeric_limits<wchar_t>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr wchar_t std::numeric_limits<wchar_t>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr wchar_t std::numeric_limits<wchar_t>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char16_t std::numeric_limits<char16_t>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char16_t std::numeric_limits<char16_t>::max() (null)
;; enabled by -tree-original


return <retval> = 65535;


;; Function static constexpr char16_t std::numeric_limits<char16_t>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr char16_t std::numeric_limits<char16_t>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char16_t std::numeric_limits<char16_t>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char16_t std::numeric_limits<char16_t>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char16_t std::numeric_limits<char16_t>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char16_t std::numeric_limits<char16_t>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char16_t std::numeric_limits<char16_t>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char32_t std::numeric_limits<char32_t>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char32_t std::numeric_limits<char32_t>::max() (null)
;; enabled by -tree-original


return <retval> = 4294967295;


;; Function static constexpr char32_t std::numeric_limits<char32_t>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr char32_t std::numeric_limits<char32_t>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char32_t std::numeric_limits<char32_t>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char32_t std::numeric_limits<char32_t>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char32_t std::numeric_limits<char32_t>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char32_t std::numeric_limits<char32_t>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr char32_t std::numeric_limits<char32_t>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short int std::numeric_limits<short int>::min() (null)
;; enabled by -tree-original


return <retval> = -32768;


;; Function static constexpr short int std::numeric_limits<short int>::max() (null)
;; enabled by -tree-original


return <retval> = 32767;


;; Function static constexpr short int std::numeric_limits<short int>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = -32768>>;


;; Function static constexpr short int std::numeric_limits<short int>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short int std::numeric_limits<short int>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short int std::numeric_limits<short int>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short int std::numeric_limits<short int>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short int std::numeric_limits<short int>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short int std::numeric_limits<short int>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short unsigned int std::numeric_limits<short unsigned int>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short unsigned int std::numeric_limits<short unsigned int>::max() (null)
;; enabled by -tree-original


return <retval> = 65535;


;; Function static constexpr short unsigned int std::numeric_limits<short unsigned int>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr short unsigned int std::numeric_limits<short unsigned int>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short unsigned int std::numeric_limits<short unsigned int>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short unsigned int std::numeric_limits<short unsigned int>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short unsigned int std::numeric_limits<short unsigned int>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short unsigned int std::numeric_limits<short unsigned int>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr short unsigned int std::numeric_limits<short unsigned int>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr int std::numeric_limits<int>::min() (null)
;; enabled by -tree-original


return <retval> = -2147483648;


;; Function static constexpr int std::numeric_limits<int>::max() (null)
;; enabled by -tree-original


return <retval> = 2147483647;


;; Function static constexpr int std::numeric_limits<int>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = -2147483648>>;


;; Function static constexpr int std::numeric_limits<int>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr int std::numeric_limits<int>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr int std::numeric_limits<int>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr int std::numeric_limits<int>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr int std::numeric_limits<int>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr int std::numeric_limits<int>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned int std::numeric_limits<unsigned int>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned int std::numeric_limits<unsigned int>::max() (null)
;; enabled by -tree-original


return <retval> = 4294967295;


;; Function static constexpr unsigned int std::numeric_limits<unsigned int>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr unsigned int std::numeric_limits<unsigned int>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned int std::numeric_limits<unsigned int>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned int std::numeric_limits<unsigned int>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned int std::numeric_limits<unsigned int>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned int std::numeric_limits<unsigned int>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr unsigned int std::numeric_limits<unsigned int>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long int std::numeric_limits<long int>::min() (null)
;; enabled by -tree-original


return <retval> = -2147483648;


;; Function static constexpr long int std::numeric_limits<long int>::max() (null)
;; enabled by -tree-original


return <retval> = 2147483647;


;; Function static constexpr long int std::numeric_limits<long int>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = -2147483648>>;


;; Function static constexpr long int std::numeric_limits<long int>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long int std::numeric_limits<long int>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long int std::numeric_limits<long int>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long int std::numeric_limits<long int>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long int std::numeric_limits<long int>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long int std::numeric_limits<long int>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long unsigned int std::numeric_limits<long unsigned int>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long unsigned int std::numeric_limits<long unsigned int>::max() (null)
;; enabled by -tree-original


return <retval> = 4294967295;


;; Function static constexpr long unsigned int std::numeric_limits<long unsigned int>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr long unsigned int std::numeric_limits<long unsigned int>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long unsigned int std::numeric_limits<long unsigned int>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long unsigned int std::numeric_limits<long unsigned int>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long unsigned int std::numeric_limits<long unsigned int>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long unsigned int std::numeric_limits<long unsigned int>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long unsigned int std::numeric_limits<long unsigned int>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long int std::numeric_limits<long long int>::min() (null)
;; enabled by -tree-original


return <retval> = -9223372036854775808;


;; Function static constexpr long long int std::numeric_limits<long long int>::max() (null)
;; enabled by -tree-original


return <retval> = 9223372036854775807;


;; Function static constexpr long long int std::numeric_limits<long long int>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = -9223372036854775808>>;


;; Function static constexpr long long int std::numeric_limits<long long int>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long int std::numeric_limits<long long int>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long int std::numeric_limits<long long int>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long int std::numeric_limits<long long int>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long int std::numeric_limits<long long int>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long int std::numeric_limits<long long int>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long unsigned int std::numeric_limits<long long unsigned int>::min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long unsigned int std::numeric_limits<long long unsigned int>::max() (null)
;; enabled by -tree-original


return <retval> = 18446744073709551615;


;; Function static constexpr long long unsigned int std::numeric_limits<long long unsigned int>::lowest() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = 0>>;


;; Function static constexpr long long unsigned int std::numeric_limits<long long unsigned int>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long unsigned int std::numeric_limits<long long unsigned int>::round_error() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long unsigned int std::numeric_limits<long long unsigned int>::infinity() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long unsigned int std::numeric_limits<long long unsigned int>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long unsigned int std::numeric_limits<long long unsigned int>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr long long unsigned int std::numeric_limits<long long unsigned int>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static constexpr float std::numeric_limits<float>::min() (null)
;; enabled by -tree-original


return <retval> = 1.17549435082228750796873653722224567781866555677208752151e-38;


;; Function static constexpr float std::numeric_limits<float>::max() (null)
;; enabled by -tree-original


return <retval> = 3.4028234663852885981170418348451692544e+38;


;; Function static constexpr float std::numeric_limits<float>::lowest() (null)
;; enabled by -tree-original


return <retval> = -3.4028234663852885981170418348451692544e+38;


;; Function static constexpr float std::numeric_limits<float>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 1.1920928955078125e-7;


;; Function static constexpr float std::numeric_limits<float>::round_error() (null)
;; enabled by -tree-original


return <retval> = 5.0e-1;


;; Function static constexpr float std::numeric_limits<float>::infinity() (null)
;; enabled by -tree-original


return <retval> =  Inf;


;; Function static constexpr float std::numeric_limits<float>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> =  Nan;


;; Function static constexpr float std::numeric_limits<float>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> =  Nan;


;; Function static constexpr float std::numeric_limits<float>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 1.40129846432481707092372958328991613128026194187651577176e-45;


;; Function static constexpr double std::numeric_limits<double>::min() (null)
;; enabled by -tree-original


return <retval> = 2.22507385850720138309023271733240406421921598046233183055e-308;


;; Function static constexpr double std::numeric_limits<double>::max() (null)
;; enabled by -tree-original


return <retval> = 1.79769313486231570814527423731704356798070567525844996599e+308;


;; Function static constexpr double std::numeric_limits<double>::lowest() (null)
;; enabled by -tree-original


return <retval> = -1.79769313486231570814527423731704356798070567525844996599e+308;


;; Function static constexpr double std::numeric_limits<double>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 2.220446049250313080847263336181640625e-16;


;; Function static constexpr double std::numeric_limits<double>::round_error() (null)
;; enabled by -tree-original


return <retval> = 5.0e-1;


;; Function static constexpr double std::numeric_limits<double>::infinity() (null)
;; enabled by -tree-original


return <retval> =  Inf;


;; Function static constexpr double std::numeric_limits<double>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> =  Nan;


;; Function static constexpr double std::numeric_limits<double>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> =  Nan;


;; Function static constexpr double std::numeric_limits<double>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 4.94065645841246544176568792868221372365059802614324764425e-324;


;; Function static constexpr long double std::numeric_limits<long double>::min() (null)
;; enabled by -tree-original


return <retval> = 2.22507385850720138309023271733240406421921598046233183055e-308;


;; Function static constexpr long double std::numeric_limits<long double>::max() (null)
;; enabled by -tree-original


return <retval> = 1.79769313486231570814527423731704356798070567525844996599e+308;


;; Function static constexpr long double std::numeric_limits<long double>::lowest() (null)
;; enabled by -tree-original


return <retval> = -1.79769313486231570814527423731704356798070567525844996599e+308;


;; Function static constexpr long double std::numeric_limits<long double>::epsilon() (null)
;; enabled by -tree-original


return <retval> = 2.220446049250313080847263336181640625e-16;


;; Function static constexpr long double std::numeric_limits<long double>::round_error() (null)
;; enabled by -tree-original


return <retval> = 5.0e-1;


;; Function static constexpr long double std::numeric_limits<long double>::infinity() (null)
;; enabled by -tree-original


return <retval> =  Inf;


;; Function static constexpr long double std::numeric_limits<long double>::quiet_NaN() (null)
;; enabled by -tree-original


return <retval> =  Nan;


;; Function static constexpr long double std::numeric_limits<long double>::signaling_NaN() (null)
;; enabled by -tree-original


return <retval> =  Nan;


;; Function static constexpr long double std::numeric_limits<long double>::denorm_min() (null)
;; enabled by -tree-original


return <retval> = 4.94065645841246544176568792868221372365059802614324764425e-324;


;; Function mbed::Ticker::Ticker() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*) () * _vptr.TimerEvent;
      struct ticker_event_t event;
      const struct ticker_data_t * _ticker_data;
    } D.59298;
    us_timestamp_t _delay;
    struct Callback _function;
    bool _lock_deepsleep;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::TimerEvent::TimerEvent (&((struct Ticker *) this)->D.59297) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<mbed::Ticker>::NonCopyable ((struct NonCopyable *) this) >>>>>;
      try
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Ticker *) this)->D.59297._vptr.TimerEvent = &_ZTVN4mbed6TickerE + 8) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Callback<void()>::Callback (&((struct Ticker *) this)->_function, 0B) >>>>>;
          try
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Ticker *) this)->_lock_deepsleep = 1) >>>>>;
            }
          catch
            {
              (void) mbed::Callback<void()>::~Callback (&((struct Ticker *) this)->_function);
            }
        }
      catch
        {
          (void) mbed::NonCopyable<mbed::Ticker>::~NonCopyable ((struct NonCopyable *) this);
        }
    }
  catch
    {
      (void) mbed::TimerEvent::~TimerEvent (&((struct Ticker *) this)->D.59297);
    }
}
<D.59304>:;
return this;


;; Function mbed::Ticker::Ticker(const ticker_data_t*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int (*) () * _vptr.TimerEvent;
      struct ticker_event_t event;
      const struct ticker_data_t * _ticker_data;
    } D.59298;
    us_timestamp_t _delay;
    struct Callback _function;
    bool _lock_deepsleep;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::TimerEvent::TimerEvent (&((struct Ticker *) this)->D.59297, data) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<mbed::Ticker>::NonCopyable ((struct NonCopyable *) this) >>>>>;
      try
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Ticker *) this)->D.59297._vptr.TimerEvent = &_ZTVN4mbed6TickerE + 8) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Callback<void()>::Callback (&((struct Ticker *) this)->_function, 0B) >>>>>;
          try
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Ticker *) this)->_lock_deepsleep = 1) >>>>>;
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Ticker *) this)->_lock_deepsleep = get_lp_ticker_data () != data) >>>>>;
            }
          catch
            {
              (void) mbed::Callback<void()>::~Callback (&((struct Ticker *) this)->_function);
            }
        }
      catch
        {
          (void) mbed::NonCopyable<mbed::Ticker>::~NonCopyable ((struct NonCopyable *) this);
        }
    }
  catch
    {
      (void) mbed::TimerEvent::~TimerEvent (&((struct Ticker *) this)->D.59297);
    }
}
<D.59344>:;
return this;


;; Function void mbed::Ticker::attach(mbed::Callback<void()>, float) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Ticker::attach_us ((struct Ticker *) this, &TARGET_EXPR <D.59351, <<< Unknown tree: aggr_init_expr
  5
  __ct_comp 
  D.59351
  (struct Callback *) <<< Unknown tree: void_cst >>>
  (const struct Callback &) (struct Callback *) func >>>>, (us_timestamp_t) (t * 1.0e+6)) >>>>>;


;; Function virtual mbed::Ticker::~Ticker() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Ticker *) this)->D.59297._vptr.TimerEvent = &_ZTVN4mbed6TickerE + 8) >>>>>;
  try
    {
      try
        {
          try
            {
              try
                {
                  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Ticker::detach ((struct Ticker *) this) >>>>>;
                }
              finally
                {
                  (void) mbed::Callback<void()>::~Callback (&((struct Ticker *) this)->_function);
                }
            }
          finally
            {
              (void) mbed::NonCopyable<mbed::Ticker>::~NonCopyable ((struct NonCopyable *) this);
            }
        }
      finally
        {
          (void) mbed::TimerEvent::~TimerEvent (&((struct Ticker *) this)->D.59297);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          int (*) () * _vptr.TimerEvent;
          struct ticker_event_t event;
          const struct ticker_data_t * _ticker_data;
        } D.59298;
        us_timestamp_t _delay;
        struct Callback _function;
        bool _lock_deepsleep;
      } &) this = {CLOBBER};
    }
}
<D.59355>:;
return this;


;; Function mbed::LowPowerTicker::LowPowerTicker() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      struct 
      {
        int (*) () * _vptr.TimerEvent;
        struct ticker_event_t event;
        const struct ticker_data_t * _ticker_data;
      } D.59298;
      us_timestamp_t _delay;
      struct Callback _function;
      bool _lock_deepsleep;
    } D.59463;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Ticker::Ticker (&((struct LowPowerTicker *) this)->D.59462, get_lp_ticker_data ()) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<mbed::LowPowerTicker>::NonCopyable ((struct NonCopyable *) this) >>>>>;
      try
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct LowPowerTicker *) this)->D.59462.D.59297._vptr.TimerEvent = &_ZTVN4mbed14LowPowerTickerE + 8) >>>>>;
        }
      catch
        {
          (void) mbed::NonCopyable<mbed::LowPowerTicker>::~NonCopyable ((struct NonCopyable *) this);
        }
    }
  catch
    {
      (void) mbed::Ticker::~Ticker (&((struct LowPowerTicker *) this)->D.59462);
    }
}
<D.59466>:;
return this;


;; Function virtual mbed::LowPowerTicker::~LowPowerTicker() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct LowPowerTicker *) this)->D.59462.D.59297._vptr.TimerEvent = &_ZTVN4mbed14LowPowerTickerE + 8) >>>>>;
  try
    {
      try
        {
          try
            {
              
            }
          finally
            {
              (void) mbed::NonCopyable<mbed::LowPowerTicker>::~NonCopyable ((struct NonCopyable *) this);
            }
        }
      finally
        {
          (void) mbed::Ticker::~Ticker (&((struct LowPowerTicker *) this)->D.59462);
        }
    }
  finally
    {
      *(struct 
      {
        struct 
        {
          struct 
          {
            int (*) () * _vptr.TimerEvent;
            struct ticker_event_t event;
            const struct ticker_data_t * _ticker_data;
          } D.59298;
          us_timestamp_t _delay;
          struct Callback _function;
          bool _lock_deepsleep;
        } D.59463;
      } &) this = {CLOBBER};
    }
}
<D.59482>:;
return this;


;; Function virtual void mbed::LowPowerTimeout::handler() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Callback<void()>::call (&((struct LowPowerTimeout *) this)->D.59536.D.59462._function) >>>>>;


;; Function mbed::LowPowerTimer::LowPowerTimer() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct 
  {
    struct 
    {
      int _running;
      us_timestamp_t _start;
      us_timestamp_t _time;
      const struct ticker_data_t * _ticker_data;
      bool _lock_deepsleep;
    } D.59579;
  } &) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::Timer (&((struct LowPowerTimer *) this)->D.59578, get_lp_ticker_data ()) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<mbed::LowPowerTimer>::NonCopyable ((struct NonCopyable *) this) >>>>>;
      try
        {
          
        }
      catch
        {
          (void) mbed::NonCopyable<mbed::LowPowerTimer>::~NonCopyable ((struct NonCopyable *) this);
        }
    }
  catch
    {
      (void) mbed::Timer::~Timer (&((struct LowPowerTimer *) this)->D.59578);
    }
}
<D.59581>:;
return this;


;; Function mbed::ATCmdParser::ATCmdParser(mbed::FileHandle*, const char*, int, int, bool) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct ATCmdParser *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<mbed::ATCmdParser>::NonCopyable ((struct NonCopyable *) this) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_fh = fh) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_buffer_size = buffer_size) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_oob_cb_count = 0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_in_prev = 0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_oobs = 0B) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_buffer = (char *) operator new [] ((size_t) NON_LVALUE_EXPR <SAVE_EXPR <(sizetype) buffer_size>>)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::ATCmdParser::set_timeout ((struct ATCmdParser *) this, timeout) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::ATCmdParser::set_delimiter ((struct ATCmdParser *) this, output_delimiter) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::ATCmdParser::debug_on ((struct ATCmdParser *) this, (uint8_t) debug) >>>>>;
    }
  catch
    {
      (void) mbed::NonCopyable<mbed::ATCmdParser>::~NonCopyable ((struct NonCopyable *) this);
    }
}
<D.59774>:;
return this;


;; Function mbed::ATCmdParser::oob::~oob() (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          
        }
      finally
        {
          (void) mbed::Callback<void()>::~Callback (&((struct oob *) this)->cb);
        }
    }
  finally
    {
      *(struct oob *) this = {CLOBBER};
    }
}
<D.59793>:;
return this;


;; Function mbed::ATCmdParser::~ATCmdParser() (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          {
            while (1)
              {
                if (((struct ATCmdParser *) this)->_oobs == 0B) goto <D.59799>;
                {
                  struct oob * oob = ((struct ATCmdParser *) this)->_oobs;

                                    struct oob * oob = ((struct ATCmdParser *) this)->_oobs;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_oobs = oob->next) >>>>>;
                  <<cleanup_point <<< Unknown tree: expr_stmt
  if (SAVE_EXPR <oob> != 0B)
    {
      try
        {
          (void) mbed::ATCmdParser::oob::~oob (SAVE_EXPR <oob>);
        }
      finally
        {
          operator delete ((void *) SAVE_EXPR <oob>, 28);
        }
    }
  else
    {
      <<< Unknown tree: void_cst >>>
    } >>>>>;
                }
              }
            <D.59799>:;
            <<cleanup_point <<< Unknown tree: expr_stmt
  (if (((struct ATCmdParser *) this)->_buffer != 0B)
    {
      operator delete [] ((void *) ((struct ATCmdParser *) this)->_buffer);
    }
  else
    {
      0
    }) >>>>>;
          }
        }
      finally
        {
          (void) mbed::NonCopyable<mbed::ATCmdParser>::~NonCopyable ((struct NonCopyable *) this);
        }
    }
  finally
    {
      *(struct ATCmdParser *) this = {CLOBBER};
    }
}
<D.59781>:;
return this;


;; Function void mbed::ATCmdParser::set_timeout(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_timeout = timeout) >>>>>;


;; Function void mbed::ATCmdParser::setTimeout(int) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::ATCmdParser::set_timeout ((struct ATCmdParser *) this, timeout) >>>>>;


;; Function void mbed::ATCmdParser::set_delimiter(const char*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_output_delimiter = output_delimiter) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_output_delim_size = (int) strlen (output_delimiter)) >>>>>;


;; Function void mbed::ATCmdParser::setDelimiter(const char*) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::ATCmdParser::set_delimiter ((struct ATCmdParser *) this, output_delimiter) >>>>>;


;; Function void mbed::ATCmdParser::debug_on(uint8_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct ATCmdParser *) this)->_dbg_on = on != 0) >>>>>;


;; Function void mbed::ATCmdParser::debugOn(uint8_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  mbed::ATCmdParser::debug_on ((struct ATCmdParser *) this, on) >>>>>;


;; Function virtual mbed::DirHandle::~DirHandle() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct DirHandle *) this)->_vptr.DirHandle = &_ZTVN4mbed9DirHandleE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) mbed::NonCopyable<mbed::DirHandle>::~NonCopyable ((struct NonCopyable *) this);
        }
    }
  finally
    {
      *(struct DirHandle *) this = {CLOBBER};
    }
}
<D.59886>:;
return this;


;; Function virtual size_t mbed::DirHandle::size() (null)
;; enabled by -tree-original


{
  off_t off;
  size_t size = 0;
  struct dirent * ent;

    off_t off;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (off = OBJ_TYPE_REF(*(((struct DirHandle *) this)->_vptr.DirHandle + 20);(struct DirHandle)(struct DirHandle *) this->5) ((struct DirHandle *) this)) >>>>>;
  <<cleanup_point   size_t size = 0;>>;
    struct dirent * ent;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ent = (struct dirent *) operator new (257)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct DirHandle *) this)->_vptr.DirHandle + 24);(struct DirHandle)(struct DirHandle *) this->6) ((struct DirHandle *) this) >>>>>;
  while (1)
    {
      if (<<cleanup_point OBJ_TYPE_REF(*(((struct DirHandle *) this)->_vptr.DirHandle + 8);(struct DirHandle)(struct DirHandle *) this->2) ((struct DirHandle *) this, ent) > 0>>) (void) 0; else goto <D.59931>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (size = size + 1) >>>>>;
    }
  <D.59931>:;
  <<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct DirHandle *) this)->_vptr.DirHandle + 16);(struct DirHandle)(struct DirHandle *) this->4) ((struct DirHandle *) this, off) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  if (SAVE_EXPR <ent> != 0B)
    {
      try
        {
          *SAVE_EXPR <ent> = {CLOBBER};
        }
      finally
        {
          operator delete ((void *) SAVE_EXPR <ent>, 257);
        }
    }
  else
    {
      <<< Unknown tree: void_cst >>>
    } >>>>>;
  return <retval> = size;
}


;; Function virtual int mbed::DirHandle::closedir() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = OBJ_TYPE_REF(*(((struct DirHandle *) this)->_vptr.DirHandle + 12);(struct DirHandle)(struct DirHandle *) this->3) ((struct DirHandle *) this)>>;


;; Function virtual dirent* mbed::DirHandle::readdir() (null)
;; enabled by -tree-original


{
  static struct dirent ent;

    static struct dirent ent;
  <<cleanup_point return <retval> = OBJ_TYPE_REF(*(((struct DirHandle *) this)->_vptr.DirHandle + 8);(struct DirHandle)(struct DirHandle *) this->2) ((struct DirHandle *) this, &ent) > 0 ? &ent : 0B>>;
}


;; Function virtual void mbed::DirHandle::rewinddir() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct DirHandle *) this)->_vptr.DirHandle + 24);(struct DirHandle)(struct DirHandle *) this->6) ((struct DirHandle *) this) >>>>>;


;; Function virtual off_t mbed::DirHandle::telldir() (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = OBJ_TYPE_REF(*(((struct DirHandle *) this)->_vptr.DirHandle + 20);(struct DirHandle)(struct DirHandle *) this->5) ((struct DirHandle *) this)>>;


;; Function virtual void mbed::DirHandle::seekdir(off_t) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  OBJ_TYPE_REF(*(((struct DirHandle *) this)->_vptr.DirHandle + 16);(struct DirHandle)(struct DirHandle *) this->4) ((struct DirHandle *) this, location) >>>>>;


;; Function virtual mbed::FileSystemHandle::~FileSystemHandle() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct FileSystemHandle *) this)->_vptr.FileSystemHandle = &_ZTVN4mbed16FileSystemHandleE + 8) >>>>>;
  try
    {
      try
        {
          
        }
      finally
        {
          (void) mbed::NonCopyable<mbed::FileSystemHandle>::~NonCopyable ((struct NonCopyable *) this);
        }
    }
  finally
    {
      *(struct FileSystemHandle *) this = {CLOBBER};
    }
}
<D.60015>:;
return this;


;; Function mbed::CriticalSectionLock::CriticalSectionLock() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;
}
<D.60048>:;
return this;


;; Function mbed::CriticalSectionLock::~CriticalSectionLock() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
}
<D.60055>:;
return this;


;; Function void mbed::CriticalSectionLock::lock() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;


;; Function void mbed::CriticalSectionLock::unlock() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function static void mbed::CriticalSectionLock::enable() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_enter () >>>>>;


;; Function static void mbed::CriticalSectionLock::disable() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;


;; Function mbed::DeepSleepLock::DeepSleepLock() (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct DeepSleepLock *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct DeepSleepLock *) this)->_lock_count = 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  sleep_manager_lock_deep_sleep_internal () >>>>>;
}
<D.60089>:;
return this;


;; Function mbed::DeepSleepLock::~DeepSleepLock() (null)
;; enabled by -tree-original


{
  try
    {
      if (((struct DeepSleepLock *) this)->_lock_count != 0)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  sleep_manager_unlock_deep_sleep_internal () >>>>>;
        }
    }
  finally
    {
      *(struct DeepSleepLock *) this = {CLOBBER};
    }
}
<D.60096>:;
return this;


;; Function void mbed::DeepSleepLock::lock() (null)
;; enabled by -tree-original


{
  uint16_t count;

    uint16_t count;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (count = core_util_atomic_incr_u16 ((volatile uint16_t *) &((struct DeepSleepLock *) this)->_lock_count, 1)) >>>>>;
  if (count == 1)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  sleep_manager_lock_deep_sleep_internal () >>>>>;
    }
  if (count == 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed_error (-2147417821, (const char *) "DeepSleepLock overflow (> USHRT_MAX)", (unsigned int) count, 0B, 0) >>>>>;
    }
}


;; Function void mbed::DeepSleepLock::unlock() (null)
;; enabled by -tree-original


{
  uint16_t count;

    uint16_t count;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (count = core_util_atomic_decr_u16 ((volatile uint16_t *) &((struct DeepSleepLock *) this)->_lock_count, 1)) >>>>>;
  if (count == 0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  sleep_manager_unlock_deep_sleep_internal () >>>>>;
    }
  if (count == 65535)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  core_util_critical_section_exit () >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed_error (-2147417820, (const char *) "DeepSleepLock underflow (< 0)", (unsigned int) count, 0B, 0) >>>>>;
    }
}


;; Function mbed::ScopedRomWriteLock::ScopedRomWriteLock() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<mbed::ScopedRomWriteLock>::NonCopyable ((struct NonCopyable *) this) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed_mpu_manager_lock_rom_write () >>>>>;
    }
  catch
    {
      (void) mbed::NonCopyable<mbed::ScopedRomWriteLock>::~NonCopyable ((struct NonCopyable *) this);
    }
}
<D.60164>:;
return this;


;; Function mbed::ScopedRomWriteLock::~ScopedRomWriteLock() (null)
;; enabled by -tree-original


{
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed_mpu_manager_unlock_rom_write () >>>>>;
    }
  finally
    {
      (void) mbed::NonCopyable<mbed::ScopedRomWriteLock>::~NonCopyable ((struct NonCopyable *) this);
    }
}
<D.60171>:;
return this;


;; Function mbed::ScopedRamExecutionLock::ScopedRamExecutionLock() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::NonCopyable<mbed::ScopedRamExecutionLock>::NonCopyable ((struct NonCopyable *) this) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed_mpu_manager_lock_ram_execution () >>>>>;
    }
  catch
    {
      (void) mbed::NonCopyable<mbed::ScopedRamExecutionLock>::~NonCopyable ((struct NonCopyable *) this);
    }
}
<D.60225>:;
return this;


;; Function mbed::ScopedRamExecutionLock::~ScopedRamExecutionLock() (null)
;; enabled by -tree-original


{
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed_mpu_manager_unlock_ram_execution () >>>>>;
    }
  finally
    {
      (void) mbed::NonCopyable<mbed::ScopedRamExecutionLock>::~NonCopyable ((struct NonCopyable *) this);
    }
}
<D.60232>:;
return this;


;; Function void* xmalloc(size_t) (null)
;; enabled by -tree-original


{
  void * buf;

    void * buf;
  if (len == 0)
    {
      return <retval> = 0B;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (buf = malloc (len)) >>>>>;
  if (buf == 0B)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fprintf (_impure_ptr->_stderr, (const char *) "memory allocation error\n") >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  exit (1) >>>>>;
    }
  return <retval> = buf;
}


;; Function void display_mallinfo() (null)
;; enabled by -tree-original


{
  struct mallinfo mi;

    struct mallinfo mi;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (mi = *(struct mallinfo &) &TARGET_EXPR <D.60757, mallinfo ()>) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) printf ((const char *) "Total non-mmapped bytes (arena):       %zu\n\r", mi.arena) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) printf ((const char *) "Total allocated space (uordblks):      %zu\n\r", mi.uordblks) >>>>>;
}


;; Function int main() (null)
;; enabled by -tree-original


{
  uint64_t start;
  uint64_t stop;
  uint64_t delta;
  uint64_t min;
  uint64_t max;
  int us;
  int cnt;
  long double average_us;
  long double average_clk;
  long double avclk_old;
  long double var;
  long double std_err;
  long double ddelta;
  int ret_val = 0;
  int i = 3;
  unsigned int logn = 9;
  char seed[16] = "\x00";
  struct shake256_context sc;
  void * pubkey;
  void * privkey;
  void * sig;
  void * expkey;
  size_t pubkey_len;
  size_t privkey_len;
  size_t sig_len;
  size_t expkey_len;
  void * tmpsd;
  void * tmpkg;
  void * tmpmp;
  void * tmpvv;
  void * tmpek;
  void * tmpst;
  size_t tmpkg_len;
  size_t tmpvv_len;
  size_t tmpmp_len;
  size_t tmpsd_len;
  size_t tmpek_len;
  size_t tmpst_len;

    uint64_t start;
    uint64_t stop;
    uint64_t delta;
    uint64_t min;
    uint64_t max;
    int us;
    int cnt;
    long double average_us;
    long double average_clk;
    long double avclk_old;
    long double var;
    long double std_err;
    long double ddelta;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758157296B->DEMCR = (long unsigned int) 3758157296B->DEMCR | 16777216) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758100480B->LAR = 3316436565) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758100480B->CYCCNT = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758100480B->CTRL = (long unsigned int) 3758100480B->CTRL | 1) >>>>>;
  <<cleanup_point   int ret_val = 0;>>;
  <<cleanup_point   int i = 3;>>;
  while (1)
    {
      if (i <= 0) goto <D.60847>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  wait (1.0e+0) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "This program runs will run in %d seconds.\n\r", i-- ) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::DigitalOut::operator= (&myled, mbed::DigitalOut::operator int (&myled) == 0) >>>>>;
    }
  <D.60847>:;
  <<cleanup_point   unsigned int logn = 9;>>;
  <<cleanup_point   char seed[16] = "\x00";>>;
    struct shake256_context sc;
  <<cleanup_point <<< Unknown tree: expr_stmt
  shake256_init_prng_from_seed (&sc, (const void *) &seed, 16) >>>>>;
    void * pubkey;
    void * privkey;
    void * sig;
    void * expkey;
    size_t pubkey_len;
    size_t privkey_len;
    size_t sig_len;
    size_t expkey_len;
    void * tmpsd;
    void * tmpkg;
    void * tmpmp;
    void * tmpvv;
    void * tmpek;
    void * tmpst;
    size_t tmpkg_len;
    size_t tmpvv_len;
    size_t tmpmp_len;
    size_t tmpsd_len;
    size_t tmpek_len;
    size_t tmpst_len;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fflush (_impure_ptr->_stdout) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (pubkey_len = logn > 1 ? (7 << logn + 4294967294) + 1 : 5) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (privkey_len = logn <= 3 ? (3 << logn) + 1 : ((10 - (logn >> 1) << logn + 4294967294) + (unsigned int) (1 << logn)) + 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (sig_len = ((3 << logn + 4294967295) - (logn == 3)) + 41) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (expkey_len = ((logn + 5) * 8 << logn) + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpsd_len = (78 << logn) + 7) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpkg_len = ((logn > 3 ? 28 << logn : 272) + (3 << logn)) + 7) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpmp_len = (6 << logn) + 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpvv_len = (8 << logn) + 1) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpek_len = (52 << logn) + 7) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpst_len = (50 << logn) + 7) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (pubkey = xmalloc (pubkey_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (privkey = xmalloc (privkey_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (sig = xmalloc (sig_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (expkey = xmalloc (expkey_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpkg = xmalloc (tmpkg_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpsd = xmalloc (tmpsd_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpmp = xmalloc (tmpmp_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpvv = xmalloc (tmpvv_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpek = xmalloc (tmpek_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (tmpst = xmalloc (tmpst_len)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "------------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "| Starting Lazy Falcon |\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "-----------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "------------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "| Doing Key Generation |\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "------------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memset (privkey, 0, privkey_len) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memset (pubkey, 0, pubkey_len) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (start = stop = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (delta = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ddelta = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (var = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_clk = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_us = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (avclk_old = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (min = 9999999999) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (max = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::reset (&timer) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (cnt = 1) >>>>>;
  {
    size_t r = 0;

    <<cleanup_point     size_t r = 0;>>;
    while (1)
      {
        if (r > 49) goto <D.60849>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758100480B->CYCCNT = 0) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::reset (&timer) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::start (&timer) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (start = (uint64_t) 3758100480B->CYCCNT) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret_val = TARGET_EXPR <D.60838, falcon_keygen_make (&sc, logn, privkey, privkey_len, pubkey, pubkey_len, tmpkg, tmpkg_len)>;, ret_val + D.60838;) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (stop = (uint64_t) 3758100480B->CYCCNT) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (us = mbed::Timer::read_us (&timer)) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (avclk_old = average_clk) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (delta = stop - start) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ddelta = (long double) delta) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_clk = (ddelta - average_clk) / (long double) cnt + average_clk) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (var = (ddelta - average_clk) * (ddelta - avclk_old) + var) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (var = var / (long double) cnt) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_us = ((long double) us - average_us) / (long double) cnt + average_us) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (min = delta < min ? delta : min) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (max = delta > max ? delta : max) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (cnt = cnt + 1) >>>>>;
        <<cleanup_point (void) r++ >>;
      }
    <D.60849>:;
  }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (std_err = std::sqrt (var / (long double) cnt)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Avg clock cycles:        %.0Lf\n\r", average_clk) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Min clock cycles:        %lld\n\r", min) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Max clock cycles:        %lld\n\r", max) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Std dev of clock cycles: %.1Lf\n\r", std::sqrt (var)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Std err of clock cycles: %.1Lf\n\r", std_err) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Avg time in millisecs:   %.1Lf\n\r", average_us / 1.0e+3) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memset (pubkey, 255, pubkey_len) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret_val = TARGET_EXPR <D.60842, falcon_make_public (pubkey, pubkey_len, (const void *) privkey, privkey_len, tmpmp, tmpmp_len)>;, ret_val + D.60842;) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "----------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "| Doing Lazy Signing |\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "----------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memset (sig, 0, sig_len) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (start = stop = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (delta = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ddelta = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (var = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_clk = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_us = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (avclk_old = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (min = 9999999999) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (max = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::reset (&timer) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (cnt = 1) >>>>>;
  {
    size_t r = 0;

    <<cleanup_point     size_t r = 0;>>;
    while (1)
      {
        if (r > 49) goto <D.60851>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758100480B->CYCCNT = 0) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::reset (&timer) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::start (&timer) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (start = (uint64_t) 3758100480B->CYCCNT) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret_val = TARGET_EXPR <D.60844, falcon_sign_dyn_lazy (&sc, sig, &sig_len, 3, (const void *) privkey, privkey_len, (const void *) "data1", 5, tmpsd, tmpsd_len)>;, ret_val + D.60844;) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (stop = (uint64_t) 3758100480B->CYCCNT) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (us = mbed::Timer::read_us (&timer)) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (avclk_old = average_clk) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (delta = stop - start) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ddelta = (long double) delta) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_clk = (ddelta - average_clk) / (long double) cnt + average_clk) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (var = (ddelta - average_clk) * (ddelta - avclk_old) + var) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (var = var / (long double) cnt) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_us = ((long double) us - average_us) / (long double) cnt + average_us) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (min = delta < min ? delta : min) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (max = delta > max ? delta : max) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (cnt = cnt + 1) >>>>>;
        <<cleanup_point (void) r++ >>;
      }
    <D.60851>:;
  }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (std_err = std::sqrt (var / (long double) cnt)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Avg clock cycles:        %.0Lf\n\r", average_clk) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Min clock cycles:        %lld\n\r", min) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Max clock cycles:        %lld\n\r", max) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Std dev of clock cycles: %.1Lf\n\r", std::sqrt (var)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Std err of clock cycles: %.1Lf\n\r", std_err) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Avg time in millisecs:   %.1Lf\n\r", average_us / 1.0e+3) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "-------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "| Doing Verifying |\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "-------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (start = stop = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (delta = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ddelta = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (var = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_clk = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_us = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (avclk_old = 0.0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (min = 9999999999) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (max = 0) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::reset (&timer) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (cnt = 1) >>>>>;
  {
    size_t r = 0;

    <<cleanup_point     size_t r = 0;>>;
    while (1)
      {
        if (r > 49) goto <D.60853>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (3758100480B->CYCCNT = 0) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::reset (&timer) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::start (&timer) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (start = (uint64_t) 3758100480B->CYCCNT) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ret_val = TARGET_EXPR <D.60846, falcon_verify ((const void *) sig, sig_len, 3, (const void *) pubkey, pubkey_len, (const void *) "data1", 5, tmpvv, tmpvv_len)>;, ret_val + D.60846;) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (stop = (uint64_t) 3758100480B->CYCCNT) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (us = mbed::Timer::read_us (&timer)) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (avclk_old = average_clk) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (delta = stop - start) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (ddelta = (long double) delta) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_clk = (ddelta - average_clk) / (long double) cnt + average_clk) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (var = (ddelta - average_clk) * (ddelta - avclk_old) + var) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (var = var / (long double) cnt) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (average_us = ((long double) us - average_us) / (long double) cnt + average_us) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (min = delta < min ? delta : min) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (max = delta > max ? delta : max) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (cnt = cnt + 1) >>>>>;
        <<cleanup_point (void) r++ >>;
      }
    <D.60853>:;
  }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (std_err = std::sqrt (var / (long double) cnt)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Avg clock cycles:        %.0Lf\n\r", average_clk) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Min clock cycles:        %lld\n\r", min) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Max clock cycles:        %lld\n\r", max) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Std dev of clock cycles: %.1Lf\n\r", std::sqrt (var)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Std err of clock cycles: %.1Lf\n\r", std_err) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "Avg time in millisecs:   %.1Lf\n\r", average_us / 1.0e+3) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "------------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "| Lazy Falcon Finished |\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) mbed::Stream::printf (&pc.D.51718, (const char *) "------------------------\n\r") >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  display_mallinfo () >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) fflush (_impure_ptr->_stdout) >>>>>;
}
return <retval> = 0;


;; Function const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char *) std::__cxx11::basic_string<char>::_M_data ((const struct basic_string *) this)>>;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.60888>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.60895>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = char; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  int __ret;
  char * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long int __tmp;

    int __ret;
    char * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long int, int, char, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const char *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long int, int, char, {int}>::_Range_chk::_S_chk ((long int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.60973, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) (__endptr - __str)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long int, int, char, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = long int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.61041>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = long int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.61048>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long int; _Ret = long int; _CharT = char; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = long int; _CharT = char; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = long int; _CharT = char; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIllcJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long int __ret;
  char * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long int __tmp;

    long int __ret;
    char * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long int, long int, char, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const char *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long int, long int, char, {int}>::_Range_chk::_S_chk ((long int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.61102, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) (__endptr - __str)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long int, long int, char, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.61146>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.61153>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = char; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = char; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = 1;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = char; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaImmcJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long unsigned int __ret;
  char * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long unsigned int __tmp;

    long unsigned int __ret;
    char * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long unsigned int, long unsigned int, char, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long unsigned int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const char *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long unsigned int, long unsigned int, char, {int}>::_Range_chk::_S_chk ((long unsigned int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.61198, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long unsigned int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) (__endptr - __str)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long unsigned int, long unsigned int, char, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long long int; _Ret = long long int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.61242>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long long int; _Ret = long long int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.61249>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long long int; _Ret = long long int; _CharT = char; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long long int; _Ret = long long int; _CharT = char; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = (unsigned long long) __val + 2147483648 > 4294967295;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long int; _Ret = long long int; _CharT = char; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIxxcJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long long int __ret;
  char * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long long int __tmp;

    long long int __ret;
    char * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long long int, long long int, char, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long long int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const char *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long long int, long long int, char, {int}>::_Range_chk::_S_chk ((long long int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.61294, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long long int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) (__endptr - __str)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long long int, long long int, char, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.61338>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.61345>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = 1;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIyycJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long long unsigned int __ret;
  char * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long long unsigned int __tmp;

    long long unsigned int __ret;
    char * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long long unsigned int, long long unsigned int, char, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long long unsigned int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const char *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long long unsigned int, long long unsigned int, char, {int}>::_Range_chk::_S_chk ((long long unsigned int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.61390, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long long unsigned int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) (__endptr - __str)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long long unsigned int, long long unsigned int, char, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = float; _Ret = float; _CharT = char; _Base = {}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.61434>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = float; _Ret = float; _CharT = char; _Base = {}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.61441>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = float; _Ret = float; _CharT = char; _Base = {}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = float; _Ret = float; _CharT = char; _Base = {}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = __val < -2.147483648e+9 || __val > 2.147483648e+9;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = float; _Ret = float; _CharT = char; _Base = {}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  float __ret;
  char * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const float __tmp;

    float __ret;
    char * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<float, float, char, {}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const float __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr)) >>>>>;
      if ((const char *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<float, float, char, {}>::_Range_chk::_S_chk ((float) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.61486, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (float) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) (__endptr - __str)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<float, float, char, {}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = double; _Ret = double; _CharT = char; _Base = {}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.61530>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = double; _Ret = double; _CharT = char; _Base = {}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.61537>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = double; _Ret = double; _CharT = char; _Base = {}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = double; _Ret = double; _CharT = char; _Base = {}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = __val < -2.147483648e+9 || __val > 2.147483647e+9;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = double; _Ret = double; _CharT = char; _Base = {}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIddcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  double __ret;
  char * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const double __tmp;

    double __ret;
    char * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<double, double, char, {}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const double __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr)) >>>>>;
      if ((const char *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<double, double, char, {}>::_Range_chk::_S_chk ((double) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.61582, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (double) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) (__endptr - __str)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<double, double, char, {}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long double; _Ret = long double; _CharT = char; _Base = {}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.61626>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long double; _Ret = long double; _CharT = char; _Base = {}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.61633>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long double; _Ret = long double; _CharT = char; _Base = {}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long double; _Ret = long double; _CharT = char; _Base = {}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = __val < -2.147483648e+9 || __val > 2.147483647e+9;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long double; _Ret = long double; _CharT = char; _Base = {}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIeecJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long double __ret;
  char * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long double __tmp;

    long double __ret;
    char * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long double, long double, char, {}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long double __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr)) >>>>>;
      if ((const char *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long double, long double, char, {}>::_Range_chk::_S_chk ((long double) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.61678, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long double) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) (__endptr - __str)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long double, long double, char, {}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<char>::new_allocator ((struct new_allocator *) this) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) __gnu_cxx::new_allocator<char>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.61691>:;
return this;


;; Function std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char] (null)
;; enabled by -tree-original


{
  try
    {
      
    }
  finally
    {
      (void) __gnu_cxx::new_allocator<char>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.61698>:;
return this;


;; Function std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider() (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          
        }
      finally
        {
          (void) std::allocator<char>::~allocator ((struct allocator *) this);
        }
    }
  finally
    {
      *(struct _Alloc_hider *) this = {CLOBBER};
    }
}
<D.61734>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<char>::_M_local_data ((struct basic_string *) this), __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_construct ((struct basic_string *) this, __n, __c) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.61705>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_dispose ((struct basic_string *) this) >>>>>;
        }
      finally
        {
          (void) std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
        }
    }
  finally
    {
      *(struct basic_string *) this = {CLOBBER};
    }
}
<D.61746>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[](std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::reference = char&; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (value_type &) (std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) this) + (sizetype) NON_LVALUE_EXPR <__pos>)>>;


;; Function void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = unsigned int] (null)
;; enabled by -tree-original


{
  static const char __digits[201] = "00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899";
  unsigned int __pos = __len + 4294967295;

  <<cleanup_point   static const char __digits[201] = "00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899";>>;
    unsigned int __pos = __len + 4294967295;
  while (1)
    {
      if (__val <= 99) goto <D.61760>;
      {
        const unsigned int __num = (__val % 100) * 2;

                const unsigned int __num = (__val % 100) * 2;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__val = __val / 100) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(__first + (sizetype) NON_LVALUE_EXPR <__pos>) = (char) __digits[(unsigned int) __num + 1]) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(__first + ((sizetype) NON_LVALUE_EXPR <__pos> + 4294967295)) = (char) __digits[(unsigned int) __num]) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__pos = __pos + 4294967294) >>>>>;
      }
    }
  <D.61760>:;
  {
    if (__val > 9)
      {
        {
          const unsigned int __num = __val * 2;

                    const unsigned int __num = __val * 2;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(__first + 1) = (char) __digits[(unsigned int) __num + 1]) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*NON_LVALUE_EXPR <__first> = (char) __digits[(unsigned int) __num]) >>>>>;
        }
      }
    else
      {
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*NON_LVALUE_EXPR <__first> = (char) __val + 48) >>>>>;
      }
  }
}


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<char>::_M_local_data ((struct basic_string *) this), (struct allocator &) std::move<std::allocator<char>&> ((struct allocator &) std::__cxx11::basic_string<char>::_M_get_allocator ((struct basic_string *) __str))) >>>>>;
  try
    {
      if (<<cleanup_point std::__cxx11::basic_string<char>::_M_is_local ((struct basic_string *) __str)>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) std::char_traits<char>::copy ((char *) &((struct basic_string *) this)->D.22924._M_local_buf, (const char_type *) &__str->D.22924._M_local_buf, 16) >>>>>;
        }
      else
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) __str)) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_capacity ((struct basic_string *) this, __str->D.22924._M_allocated_capacity) >>>>>;
        }
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_length ((struct basic_string *) this, std::__cxx11::basic_string<char>::length ((struct basic_string *) __str)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) __str, std::__cxx11::basic_string<char>::_M_local_data ((struct basic_string *) __str)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_set_length ((struct basic_string *) __str, 0) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.61763>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


return <retval> = (size_type) ((const struct basic_string *) this)->_M_string_length;


;; Function void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = long unsigned int] (null)
;; enabled by -tree-original


{
  static const char __digits[201] = "00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899";
  unsigned int __pos = __len + 4294967295;

  <<cleanup_point   static const char __digits[201] = "00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899";>>;
    unsigned int __pos = __len + 4294967295;
  while (1)
    {
      if (__val <= 99) goto <D.61781>;
      {
        const long unsigned int __num = (__val % 100) * 2;

                const long unsigned int __num = (__val % 100) * 2;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__val = __val / 100) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(__first + (sizetype) NON_LVALUE_EXPR <__pos>) = (char) __digits[(long unsigned int) __num + 1]) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(__first + ((sizetype) NON_LVALUE_EXPR <__pos> + 4294967295)) = (char) __digits[(long unsigned int) __num]) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__pos = __pos + 4294967294) >>>>>;
      }
    }
  <D.61781>:;
  {
    if (__val > 9)
      {
        {
          const long unsigned int __num = __val * 2;

                    const long unsigned int __num = __val * 2;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(__first + 1) = (char) __digits[(long unsigned int) __num + 1]) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*NON_LVALUE_EXPR <__first> = (char) __digits[(long unsigned int) __num]) >>>>>;
        }
      }
    else
      {
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*NON_LVALUE_EXPR <__first> = (char) __val + 48) >>>>>;
      }
  }
}


;; Function void std::__detail::__to_chars_10_impl(char*, unsigned int, _Tp) [with _Tp = long long unsigned int] (null)
;; enabled by -tree-original


{
  static const char __digits[201] = "00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899";
  unsigned int __pos = __len + 4294967295;

  <<cleanup_point   static const char __digits[201] = "00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899";>>;
    unsigned int __pos = __len + 4294967295;
  while (1)
    {
      if (__val <= 99) goto <D.61788>;
      {
        const long long unsigned int __num = (__val % 100) * 2;

                const long long unsigned int __num = (__val % 100) * 2;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__val = __val / 100) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(__first + (sizetype) NON_LVALUE_EXPR <__pos>) = (char) __digits[(long long unsigned int) __num + 1]) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(__first + ((sizetype) NON_LVALUE_EXPR <__pos> + 4294967295)) = (char) __digits[(long long unsigned int) __num]) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__pos = __pos + 4294967294) >>>>>;
      }
    }
  <D.61788>:;
  {
    if (__val > 9)
      {
        {
          const long long unsigned int __num = __val * 2;

                    const long long unsigned int __num = __val * 2;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*(__first + 1) = (char) __digits[(long long unsigned int) __num + 1]) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*NON_LVALUE_EXPR <__first> = (char) __digits[(long long unsigned int) __num]) >>>>>;
        }
      }
    else
      {
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*NON_LVALUE_EXPR <__first> = (char) __val + 48) >>>>>;
      }
  }
}


;; Function _String __gnu_cxx::__to_xstring(int (*)(_CharT*, std::size_t, const _CharT*, __va_list), std::size_t, const _CharT*, ...) [with _String = std::__cxx11::basic_string<char>; _CharT = char; std::size_t = unsigned int] (null)
;; enabled by -tree-original


{
  char * __s;
  struct  __args;
  const int __len;

    char * __s;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__s = (char *) __builtin_alloca (NON_LVALUE_EXPR <__n>)) >>>>>;
    struct  __args;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_start ((struct  &) &__args, __fmt) >>>>>;
    const int __len;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__len = __convf (__s, __n, __fmt, __args)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_end ((struct  &) &__args) >>>>>;
  <<cleanup_point return *<retval> = TARGET_EXPR <D.61916, <<< Unknown tree: aggr_init_expr
  7
  __ct_comp 
  D.61916
  (struct basic_string *) <<< Unknown tree: void_cst >>>
  __s
  __s + (sizetype) __len
  (const struct allocator &) &TARGET_EXPR <D.61915, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.61915
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>> >>>>>>;
}


;; Function const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::c_str() const [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const wchar_t *) std::__cxx11::basic_string<wchar_t>::_M_data ((const struct basic_string *) this)>>;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.61950>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.61957>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long int; _Ret = int; _CharT = wchar_t; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = int; _CharT = wchar_t; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = int; _CharT = wchar_t; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIliwJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  int __ret;
  wchar_t * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long int __tmp;

    int __ret;
    wchar_t * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long int, int, wchar_t, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const wchar_t *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long int, int, wchar_t, {int}>::_Range_chk::_S_chk ((long int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.61976, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) ((__endptr - __str) /[ex] 4)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long int, int, wchar_t, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long int; _Ret = long int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.62011>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long int; _Ret = long int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.62018>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long int; _Ret = long int; _CharT = wchar_t; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long int; _Ret = long int; _CharT = wchar_t; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long int; _Ret = long int; _CharT = wchar_t; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIllwJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long int __ret;
  wchar_t * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long int __tmp;

    long int __ret;
    wchar_t * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long int, long int, wchar_t, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const wchar_t *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long int, long int, wchar_t, {int}>::_Range_chk::_S_chk ((long int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.62037, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) ((__endptr - __str) /[ex] 4)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long int, long int, wchar_t, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.62072>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.62079>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = wchar_t; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = wchar_t; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = 1;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long unsigned int; _Ret = long unsigned int; _CharT = wchar_t; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaImmwJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long unsigned int __ret;
  wchar_t * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long unsigned int __tmp;

    long unsigned int __ret;
    wchar_t * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long unsigned int, long unsigned int, wchar_t, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long unsigned int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const wchar_t *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long unsigned int, long unsigned int, wchar_t, {int}>::_Range_chk::_S_chk ((long unsigned int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.62098, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long unsigned int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) ((__endptr - __str) /[ex] 4)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long unsigned int, long unsigned int, wchar_t, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long long int; _Ret = long long int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.62133>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long long int; _Ret = long long int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.62140>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long long int; _Ret = long long int; _CharT = wchar_t; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long long int; _Ret = long long int; _CharT = wchar_t; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = (unsigned long long) __val + 2147483648 > 4294967295;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long int; _Ret = long long int; _CharT = wchar_t; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIxxwJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long long int __ret;
  wchar_t * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long long int __tmp;

    long long int __ret;
    wchar_t * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long long int, long long int, wchar_t, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long long int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const wchar_t *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long long int, long long int, wchar_t, {int}>::_Range_chk::_S_chk ((long long int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.62159, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long long int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) ((__endptr - __str) /[ex] 4)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long long int, long long int, wchar_t, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.62194>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = wchar_t; _Base = {int}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.62201>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = wchar_t; _Base = {int}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = wchar_t; _Base = {int}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = 1;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = wchar_t; _Base = {int}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIyywJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long long unsigned int __ret;
  wchar_t * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long long unsigned int __tmp;

    long long unsigned int __ret;
    wchar_t * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long long unsigned int, long long unsigned int, wchar_t, {int}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long long unsigned int __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr, __base#0)) >>>>>;
      if ((const wchar_t *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long long unsigned int, long long unsigned int, wchar_t, {int}>::_Range_chk::_S_chk ((long long unsigned int) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.62220, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long long unsigned int) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) ((__endptr - __str) /[ex] 4)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long long unsigned int, long long unsigned int, wchar_t, {int}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = float; _Ret = float; _CharT = wchar_t; _Base = {}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.62255>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = float; _Ret = float; _CharT = wchar_t; _Base = {}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.62262>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = float; _Ret = float; _CharT = wchar_t; _Base = {}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = float; _Ret = float; _CharT = wchar_t; _Base = {}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = __val < -2.147483648e+9 || __val > 2.147483648e+9;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = float; _Ret = float; _CharT = wchar_t; _Base = {}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIffwJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  float __ret;
  wchar_t * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const float __tmp;

    float __ret;
    wchar_t * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<float, float, wchar_t, {}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const float __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr)) >>>>>;
      if ((const wchar_t *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<float, float, wchar_t, {}>::_Range_chk::_S_chk ((float) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.62281, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (float) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) ((__endptr - __str) /[ex] 4)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<float, float, wchar_t, {}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = double; _Ret = double; _CharT = wchar_t; _Base = {}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.62316>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = double; _Ret = double; _CharT = wchar_t; _Base = {}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.62323>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = double; _Ret = double; _CharT = wchar_t; _Base = {}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = double; _Ret = double; _CharT = wchar_t; _Base = {}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = __val < -2.147483648e+9 || __val > 2.147483647e+9;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = double; _Ret = double; _CharT = wchar_t; _Base = {}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIddwJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  double __ret;
  wchar_t * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const double __tmp;

    double __ret;
    wchar_t * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<double, double, wchar_t, {}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const double __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr)) >>>>>;
      if ((const wchar_t *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<double, double, wchar_t, {}>::_Range_chk::_S_chk ((double) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.62342, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (double) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) ((__endptr - __str) /[ex] 4)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<double, double, wchar_t, {}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::_Save_errno() [with _TRet = long double; _Ret = long double; _CharT = wchar_t; _Base = {}] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Save_errno *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Save_errno *) this)->_M_errno = *__errno ()) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = 0) >>>>>;
}
<D.62377>:;
return this;


;; Function __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Save_errno::~_Save_errno() [with _TRet = long double; _Ret = long double; _CharT = wchar_t; _Base = {}] (null)
;; enabled by -tree-original


{
  try
    {
      if (<<cleanup_point *__errno () == 0>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__errno () = ((struct _Save_errno *) this)->_M_errno) >>>>>;
        }
    }
  finally
    {
      *(struct _Save_errno *) this = {CLOBBER};
    }
}
<D.62384>:;
return this;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::false_type) [with _TRet = long double; _Ret = long double; _CharT = wchar_t; _Base = {}; std::false_type = std::integral_constant<bool, false>] (null)
;; enabled by -tree-original


return <retval> = 0;


;; Function static bool __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...)::_Range_chk::_S_chk(_TRet, std::true_type) [with _TRet = long double; _Ret = long double; _CharT = wchar_t; _Base = {}; std::true_type = std::integral_constant<bool, true>] (null)
;; enabled by -tree-original


return <retval> = __val < -2.147483648e+9 || __val > 2.147483647e+9;


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long double; _Ret = long double; _CharT = wchar_t; _Base = {}; std::size_t = unsigned int] (_ZN9__gnu_cxx6__stoaIeewJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_)
;; enabled by -tree-original


{
  long double __ret;
  wchar_t * __endptr;
  typedef extern struct _Save_errno _Save_errno;
  const struct _Save_errno __save_errno;
  typedef extern struct _Range_chk _Range_chk;
  const long double __tmp;

    long double __ret;
    wchar_t * __endptr;
    const struct _Save_errno __save_errno;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::__stoa<long double, long double, wchar_t, {}>::_Save_errno::_Save_errno ((struct _Save_errno *) &__save_errno) >>>>>;
  try
    {
            const long double __tmp;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__tmp = __convf (__str, &__endptr)) >>>>>;
      if ((const wchar_t *) __endptr == __str)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_invalid_argument (__name) >>>>>;
        }
      else
        {
          if (<<cleanup_point *__errno () == 34 || __gnu_cxx::__stoa<long double, long double, wchar_t, {}>::_Range_chk::_S_chk ((long double) __tmp, *(struct integral_constant &) &TARGET_EXPR <D.62403, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>)
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_out_of_range (__name) >>>>>;
            }
          else
            {
              <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__ret = (long double) __tmp) >>>>>;
            }
        }
      if (__idx != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__idx = (size_t) ((__endptr - __str) /[ex] 4)) >>>>>;
        }
      return <retval> = __ret;
    }
  finally
    {
      (void) __gnu_cxx::__stoa<long double, long double, wchar_t, {}>::_Save_errno::~_Save_errno ((struct _Save_errno *) &__save_errno);
    }
}


;; Function _String __gnu_cxx::__to_xstring(int (*)(_CharT*, std::size_t, const _CharT*, __va_list), std::size_t, const _CharT*, ...) [with _String = std::__cxx11::basic_string<wchar_t>; _CharT = wchar_t; std::size_t = unsigned int] (null)
;; enabled by -tree-original


{
  wchar_t * __s;
  struct  __args;
  const int __len;

    wchar_t * __s;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__s = (wchar_t *) __builtin_alloca (__n * 4)) >>>>>;
    struct  __args;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_start ((struct  &) &__args, __fmt) >>>>>;
    const int __len;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__len = __convf (__s, __n, __fmt, __args)) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  __builtin_va_end ((struct  &) &__args) >>>>>;
  <<cleanup_point return *<retval> = TARGET_EXPR <D.62436, <<< Unknown tree: aggr_init_expr
  7
  __ct_comp 
  D.62436
  (struct basic_string *) <<< Unknown tree: void_cst >>>
  __s
  __s + (sizetype) ((unsigned int) __len * 4)
  (const struct allocator &) &TARGET_EXPR <D.62435, <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.62435
  (struct allocator *) <<< Unknown tree: void_cst >>> >>>> >>>>>>;
}


;; Function std::__cxx11::basic_string<wchar_t>::_Alloc_hider::~_Alloc_hider() (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          
        }
      finally
        {
          (void) std::allocator<wchar_t>::~allocator ((struct allocator *) this);
        }
    }
  finally
    {
      *(struct _Alloc_hider *) this = {CLOBBER};
    }
}
<D.62440>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_dispose ((struct basic_string *) this) >>>>>;
        }
      finally
        {
          (void) std::__cxx11::basic_string<wchar_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
        }
    }
  finally
    {
      *(struct basic_string *) this = {CLOBBER};
    }
}
<D.62438>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<wchar_t>::_M_local_data ((struct basic_string *) this), (struct allocator &) std::move<std::allocator<wchar_t>&> ((struct allocator &) std::__cxx11::basic_string<wchar_t>::_M_get_allocator ((struct basic_string *) __str))) >>>>>;
  try
    {
      if (<<cleanup_point std::__cxx11::basic_string<wchar_t>::_M_is_local ((struct basic_string *) __str)>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) std::char_traits<wchar_t>::copy ((wchar_t *) &((struct basic_string *) this)->D.24361._M_local_buf, (const char_type *) &__str->D.24361._M_local_buf, 4) >>>>>;
        }
      else
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<wchar_t>::_M_data ((struct basic_string *) __str)) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_capacity ((struct basic_string *) this, __str->D.24361._M_allocated_capacity) >>>>>;
        }
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_length ((struct basic_string *) this, std::__cxx11::basic_string<wchar_t>::length ((struct basic_string *) __str)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_data ((struct basic_string *) __str, std::__cxx11::basic_string<wchar_t>::_M_local_data ((struct basic_string *) __str)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_set_length ((struct basic_string *) __str, 0) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<wchar_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.62452>:;
return this;


;; Function static std::size_t std::_Hash_impl::hash(const _Tp&) [with _Tp = float; std::size_t = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::_Hash_impl::hash ((const void *) __val, 4, 3339675911)>>;


;; Function static std::size_t std::_Hash_impl::hash(const _Tp&) [with _Tp = double; std::size_t = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::_Hash_impl::hash ((const void *) __val, 8, 3339675911)>>;


;; Function const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char *) std::__cxx11::basic_string<char>::_M_data ((const struct basic_string *) this)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


return <retval> = (size_type) ((const struct basic_string *) this)->_M_string_length;


;; Function const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const wchar_t *) std::__cxx11::basic_string<wchar_t>::_M_data ((const struct basic_string *) this)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


return <retval> = (size_type) ((const struct basic_string *) this)->_M_string_length;


;; Function const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char16_t *) std::__cxx11::basic_string<char16_t>::_M_data ((const struct basic_string *) this)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


return <retval> = (size_type) ((const struct basic_string *) this)->_M_string_length;


;; Function const _CharT* std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::data() const [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char32_t *) std::__cxx11::basic_string<char32_t>::_M_data ((const struct basic_string *) this)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::length() const [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


return <retval> = (size_type) ((const struct basic_string *) this)->_M_string_length;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<char>::_M_local_data ((struct basic_string *) this), __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_construct<const char*> ((struct basic_string *) this, __s, __s + (sizetype) NON_LVALUE_EXPR <__n>) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.62502>:;
return this;


;; Function std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = wchar_t] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<wchar_t>::new_allocator ((struct new_allocator *) this) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) __gnu_cxx::new_allocator<wchar_t>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.62513>:;
return this;


;; Function std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = wchar_t] (null)
;; enabled by -tree-original


{
  try
    {
      
    }
  finally
    {
      (void) __gnu_cxx::new_allocator<wchar_t>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.62520>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<wchar_t>::_M_local_data ((struct basic_string *) this), __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_construct<const wchar_t*> ((struct basic_string *) this, __s, __s + (sizetype) (__n * 4)) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<wchar_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.62527>:;
return this;


;; Function std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char16_t] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<char16_t>::new_allocator ((struct new_allocator *) this) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) __gnu_cxx::new_allocator<char16_t>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.62538>:;
return this;


;; Function std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char16_t] (null)
;; enabled by -tree-original


{
  try
    {
      
    }
  finally
    {
      (void) __gnu_cxx::new_allocator<char16_t>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.62545>:;
return this;


;; Function std::__cxx11::basic_string<char16_t>::_Alloc_hider::~_Alloc_hider() (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          
        }
      finally
        {
          (void) std::allocator<char16_t>::~allocator ((struct allocator *) this);
        }
    }
  finally
    {
      *(struct _Alloc_hider *) this = {CLOBBER};
    }
}
<D.62581>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<char16_t>::_M_local_data ((struct basic_string *) this), __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_construct<const char16_t*> ((struct basic_string *) this, __s, __s + (sizetype) (__n * 2)) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char16_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.62552>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>] (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_dispose ((struct basic_string *) this) >>>>>;
        }
      finally
        {
          (void) std::__cxx11::basic_string<char16_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
        }
    }
  finally
    {
      *(struct basic_string *) this = {CLOBBER};
    }
}
<D.62597>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<char16_t>::_M_local_data ((struct basic_string *) this), (struct allocator &) std::move<std::allocator<char16_t>&> ((struct allocator &) std::__cxx11::basic_string<char16_t>::_M_get_allocator ((struct basic_string *) __str))) >>>>>;
  try
    {
      if (<<cleanup_point std::__cxx11::basic_string<char16_t>::_M_is_local ((struct basic_string *) __str)>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) std::char_traits<char16_t>::copy ((char16_t *) &((struct basic_string *) this)->D.26041._M_local_buf, (const char_type *) &__str->D.26041._M_local_buf, 8) >>>>>;
        }
      else
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<char16_t>::_M_data ((struct basic_string *) __str)) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_capacity ((struct basic_string *) this, __str->D.26041._M_allocated_capacity) >>>>>;
        }
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_length ((struct basic_string *) this, std::__cxx11::basic_string<char16_t>::length ((struct basic_string *) __str)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_data ((struct basic_string *) __str, std::__cxx11::basic_string<char16_t>::_M_local_data ((struct basic_string *) __str)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_set_length ((struct basic_string *) __str, 0) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char16_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.62604>:;
return this;


;; Function std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = char32_t] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<char32_t>::new_allocator ((struct new_allocator *) this) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) __gnu_cxx::new_allocator<char32_t>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.62617>:;
return this;


;; Function std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = char32_t] (null)
;; enabled by -tree-original


{
  try
    {
      
    }
  finally
    {
      (void) __gnu_cxx::new_allocator<char32_t>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.62624>:;
return this;


;; Function std::__cxx11::basic_string<char32_t>::_Alloc_hider::~_Alloc_hider() (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          
        }
      finally
        {
          (void) std::allocator<char32_t>::~allocator ((struct allocator *) this);
        }
    }
  finally
    {
      *(struct _Alloc_hider *) this = {CLOBBER};
    }
}
<D.62660>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<char32_t>::_M_local_data ((struct basic_string *) this), __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_construct<const char32_t*> ((struct basic_string *) this, __s, __s + (sizetype) (__n * 4)) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char32_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.62631>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::~basic_string() [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>] (null)
;; enabled by -tree-original


{
  try
    {
      try
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_dispose ((struct basic_string *) this) >>>>>;
        }
      finally
        {
          (void) std::__cxx11::basic_string<char32_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
        }
    }
  finally
    {
      *(struct basic_string *) this = {CLOBBER};
    }
}
<D.62676>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<char32_t>::_M_local_data ((struct basic_string *) this), (struct allocator &) std::move<std::allocator<char32_t>&> ((struct allocator &) std::__cxx11::basic_string<char32_t>::_M_get_allocator ((struct basic_string *) __str))) >>>>>;
  try
    {
      if (<<cleanup_point std::__cxx11::basic_string<char32_t>::_M_is_local ((struct basic_string *) __str)>>)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  (void) std::char_traits<char32_t>::copy ((char32_t *) &((struct basic_string *) this)->D.27179._M_local_buf, (const char_type *) &__str->D.27179._M_local_buf, 4) >>>>>;
        }
      else
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<char32_t>::_M_data ((struct basic_string *) __str)) >>>>>;
          <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_capacity ((struct basic_string *) this, __str->D.27179._M_allocated_capacity) >>>>>;
        }
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_length ((struct basic_string *) this, std::__cxx11::basic_string<char32_t>::length ((struct basic_string *) __str)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_data ((struct basic_string *) __str, std::__cxx11::basic_string<char32_t>::_M_local_data ((struct basic_string *) __str)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_set_length ((struct basic_string *) __str, 0) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char32_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.62683>:;
return this;


;; Function mbed::NonCopyable<T>::NonCopyable() [with T = PlatformMutex] (null)
;; enabled by -tree-original


{
  
}
<D.62696>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = PlatformMutex] (null)
;; enabled by -tree-original


{
  
}
<D.62703>:;
return this;


;; Function T* SingletonPtr<T>::operator->() const [with T = PlatformMutex] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = SingletonPtr<PlatformMutex>::get ((const struct SingletonPtr *) this)>>;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::FileHandle] (null)
;; enabled by -tree-original


{
  
}
<D.62711>:;
return this;


;; Function mbed::NonCopyable<T>::NonCopyable() [with T = mbed::FileHandle] (null)
;; enabled by -tree-original


{
  
}
<D.62718>:;
return this;


;; Function mbed::NonCopyable<T>::NonCopyable() [with T = mbed::FileLike] (null)
;; enabled by -tree-original


{
  
}
<D.62725>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::FileLike] (null)
;; enabled by -tree-original


{
  
}
<D.62732>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::I2C] (null)
;; enabled by -tree-original


{
  
}
<D.62739>:;
return this;


;; Function mbed::Callback<R(A0)>::~Callback() [with R = void; A0 = int] (null)
;; enabled by -tree-original


{
  try
    {
      if (((struct Callback *) this)->_ops != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  ((struct Callback *) this)->_ops->dtor ((void *) this) >>>>>;
        }
    }
  finally
    {
      *(struct Callback *) this = {CLOBBER};
    }
}
<D.62746>:;
return this;


;; Function CThunk<T>::~CThunk() [with T = mbed::I2C] (null)
;; enabled by -tree-original


{
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  CThunkBase::cthunk_free (((struct CThunk *) this)->_entry) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct CThunk *) this)->_entry = 0B) >>>>>;
    }
  finally
    {
      *(struct CThunk *) this = {CLOBBER};
    }
}
<D.62757>:;
return this;


;; Function mbed::NonCopyable<T>::NonCopyable() [with T = mbed::Ticker] (null)
;; enabled by -tree-original


{
  
}
<D.62764>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::Ticker] (null)
;; enabled by -tree-original


{
  
}
<D.62771>:;
return this;


;; Function mbed::Callback<R()>::Callback(R (*)()) [with R = void] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct Callback *) this = {CLOBBER} >>>>>;
{
  if (func == 0B)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memset ((void *) this, 0, 16) >>>>>;
    }
  else
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Callback<void()>::generate<void (*)()> ((struct Callback *) this, (void (*<T6013>) (void) &) &func) >>>>>;
    }
}
<D.62778>:;
return this;


;; Function mbed::Callback<R()>::~Callback() [with R = void] (null)
;; enabled by -tree-original


{
  try
    {
      if (((struct Callback *) this)->_ops != 0B)
        {
          <<cleanup_point <<< Unknown tree: expr_stmt
  ((struct Callback *) this)->_ops->dtor ((void *) this) >>>>>;
        }
    }
  finally
    {
      *(struct Callback *) this = {CLOBBER};
    }
}
<D.62812>:;
return this;


;; Function mbed::Callback<R()>::Callback(const mbed::Callback<R()>&) [with R = void] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct Callback *) this = {CLOBBER} >>>>>;
{
  if ((const struct ops *) func->_ops != 0B)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  ((const struct ops *) func->_ops)->move ((void *) this, (const void *) func) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Callback *) this)->_ops = (const struct ops *) func->_ops) >>>>>;
}
<D.62823>:;
return this;


;; Function mbed::NonCopyable<T>::NonCopyable() [with T = mbed::LowPowerTicker] (null)
;; enabled by -tree-original


{
  
}
<D.62830>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::LowPowerTicker] (null)
;; enabled by -tree-original


{
  
}
<D.62837>:;
return this;


;; Function R mbed::Callback<R()>::call() const [with R = void] (null)
;; enabled by -tree-original


if ((const struct ops *) ((const struct Callback *) this)->_ops == 0B)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  mbed_assert_internal ((const char *) "_ops", (const char *) "../mbed/platform/Callback.h", 570) >>>>>;
  }
<<cleanup_point <<< Unknown tree: expr_stmt
  ((const struct ops *) ((const struct Callback *) this)->_ops)->call ((const void *) this) >>>>>;
return;


;; Function mbed::NonCopyable<T>::NonCopyable() [with T = mbed::LowPowerTimer] (null)
;; enabled by -tree-original


{
  
}
<D.62847>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::LowPowerTimer] (null)
;; enabled by -tree-original


{
  
}
<D.62854>:;
return this;


;; Function mbed::NonCopyable<T>::NonCopyable() [with T = mbed::ATCmdParser] (null)
;; enabled by -tree-original


{
  
}
<D.62861>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::ATCmdParser] (null)
;; enabled by -tree-original


{
  
}
<D.62868>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::DirHandle] (null)
;; enabled by -tree-original


{
  
}
<D.62875>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::FileSystemHandle] (null)
;; enabled by -tree-original


{
  
}
<D.62882>:;
return this;


;; Function mbed::NonCopyable<T>::NonCopyable() [with T = mbed::ScopedRomWriteLock] (null)
;; enabled by -tree-original


{
  
}
<D.62889>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::ScopedRomWriteLock] (null)
;; enabled by -tree-original


{
  
}
<D.62896>:;
return this;


;; Function mbed::NonCopyable<T>::NonCopyable() [with T = mbed::ScopedRamExecutionLock] (null)
;; enabled by -tree-original


{
  
}
<D.62903>:;
return this;


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::ScopedRamExecutionLock] (null)
;; enabled by -tree-original


{
  
}
<D.62910>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char*] (null)
;; enabled by -tree-original


return <retval> = (char *) ((const struct basic_string *) this)->_M_dataplus._M_p;


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char] (null)
;; enabled by -tree-original


{
  
}
<D.62918>:;
return this;


;; Function __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char] (null)
;; enabled by -tree-original


{
  
}
<D.62925>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char*] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (char *) std::pointer_traits<char*>::pointer_to ((__make_not_void &) &((struct basic_string *) this)->D.22924._M_local_buf)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Alloc_hider *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator<char>::allocator ((struct allocator *) this, __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Alloc_hider *) this)->_M_p = __dat) >>>>>;
    }
  catch
    {
      (void) std::allocator<char>::~allocator ((struct allocator *) this);
    }
}
<D.62957>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


if (<<cleanup_point !std::__cxx11::basic_string<char>::_M_is_local ((struct basic_string *) this)>>)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_destroy ((struct basic_string *) this, ((struct basic_string *) this)->D.22924._M_allocated_capacity) >>>>>;
  }


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::__cxx11::basic_string<char>::allocator_type] (null)
;; enabled by -tree-original


return <retval> = (struct allocator_type &) &((struct basic_string *) this)->_M_dataplus;


;; Function constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char>&; typename std::remove_reference<_Tp>::type = std::allocator<char>] (null)
;; enabled by -tree-original


return <retval> = (struct type &) __t;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Alloc_hider *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator<char>::allocator ((struct allocator *) this, (const struct allocator &) std::move<std::allocator<char>&> ((struct allocator &) __a)) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Alloc_hider *) this)->_M_p = __dat) >>>>>;
    }
  catch
    {
      (void) std::allocator<char>::~allocator ((struct allocator *) this);
    }
}
<D.62969>:;
return this;


;; Function bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char *) std::__cxx11::basic_string<char>::_M_data ((const struct basic_string *) this) == std::__cxx11::basic_string<char>::_M_local_data ((const struct basic_string *) this)>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->_M_dataplus._M_p = __p) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->D.22924._M_allocated_capacity = __capacity) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->_M_string_length = __length) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_length ((struct basic_string *) this, __n) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<char>::assign ((char_type &) (std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) this) + (sizetype) NON_LVALUE_EXPR <__n>), (const char_type &) &TARGET_EXPR <D.62980, 0>) >>>>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = char*; <template-parameter-2-2> = void; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<char>::_M_local_data ((struct basic_string *) this), __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_construct<char*> ((struct basic_string *) this, __beg, __end) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<char>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.62982>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = wchar_t*] (null)
;; enabled by -tree-original


return <retval> = (wchar_t *) ((const struct basic_string *) this)->_M_dataplus._M_p;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&) [with _InputIterator = wchar_t*; <template-parameter-2-2> = void; _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct basic_string *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_Alloc_hider::_Alloc_hider (&((struct basic_string *) this)->_M_dataplus, std::__cxx11::basic_string<wchar_t>::_M_local_data ((struct basic_string *) this), __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_construct<wchar_t*> ((struct basic_string *) this, __beg, __end) >>>>>;
    }
  catch
    {
      (void) std::__cxx11::basic_string<wchar_t>::_Alloc_hider::~_Alloc_hider (&((struct basic_string *) this)->_M_dataplus);
    }
}
<D.62994>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


if (<<cleanup_point !std::__cxx11::basic_string<wchar_t>::_M_is_local ((struct basic_string *) this)>>)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_destroy ((struct basic_string *) this, ((struct basic_string *) this)->D.24361._M_allocated_capacity) >>>>>;
  }


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = wchar_t*] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (wchar_t *) std::pointer_traits<wchar_t*>::pointer_to ((__make_not_void &) &((struct basic_string *) this)->D.24361._M_local_buf)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::__cxx11::basic_string<wchar_t>::allocator_type] (null)
;; enabled by -tree-original


return <retval> = (struct allocator_type &) &((struct basic_string *) this)->_M_dataplus;


;; Function constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<wchar_t>&; typename std::remove_reference<_Tp>::type = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


return <retval> = (struct type &) __t;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = wchar_t*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Alloc_hider *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator<wchar_t>::allocator ((struct allocator *) this, (const struct allocator &) std::move<std::allocator<wchar_t>&> ((struct allocator &) __a)) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Alloc_hider *) this)->_M_p = __dat) >>>>>;
    }
  catch
    {
      (void) std::allocator<wchar_t>::~allocator ((struct allocator *) this);
    }
}
<D.63030>:;
return this;


;; Function bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const wchar_t *) std::__cxx11::basic_string<wchar_t>::_M_data ((const struct basic_string *) this) == std::__cxx11::basic_string<wchar_t>::_M_local_data ((const struct basic_string *) this)>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = wchar_t*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->_M_dataplus._M_p = __p) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->D.24361._M_allocated_capacity = __capacity) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->_M_string_length = __length) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_length ((struct basic_string *) this, __n) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<wchar_t>::assign ((char_type &) (std::__cxx11::basic_string<wchar_t>::_M_data ((struct basic_string *) this) + (sizetype) (__n * 4)), (const char_type &) &TARGET_EXPR <D.63041, 0>) >>>>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char16_t*] (null)
;; enabled by -tree-original


return <retval> = (char16_t *) ((const struct basic_string *) this)->_M_dataplus._M_p;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data() const [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char32_t*] (null)
;; enabled by -tree-original


return <retval> = (char32_t *) ((const struct basic_string *) this)->_M_dataplus._M_p;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


{
  typedef struct _Integral _Integral;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_construct_aux<const char*> ((struct basic_string *) this, __beg, __end, <<< Unknown tree: empty_class_expr >>>) >>>>>;
}


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = wchar_t] (null)
;; enabled by -tree-original


{
  
}
<D.63116>:;
return this;


;; Function __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = wchar_t] (null)
;; enabled by -tree-original


{
  
}
<D.63123>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = wchar_t*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Alloc_hider *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator<wchar_t>::allocator ((struct allocator *) this, __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Alloc_hider *) this)->_M_p = __dat) >>>>>;
    }
  catch
    {
      (void) std::allocator<wchar_t>::~allocator ((struct allocator *) this);
    }
}
<D.63130>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const wchar_t*; _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


{
  typedef struct _Integral _Integral;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_construct_aux<const wchar_t*> ((struct basic_string *) this, __beg, __end, <<< Unknown tree: empty_class_expr >>>) >>>>>;
}


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char16_t] (null)
;; enabled by -tree-original


{
  
}
<D.63151>:;
return this;


;; Function __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char16_t] (null)
;; enabled by -tree-original


{
  
}
<D.63158>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char16_t*] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (char16_t *) std::pointer_traits<char16_t*>::pointer_to ((__make_not_void &) &((struct basic_string *) this)->D.26041._M_local_buf)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char16_t*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Alloc_hider *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator<char16_t>::allocator ((struct allocator *) this, __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Alloc_hider *) this)->_M_p = __dat) >>>>>;
    }
  catch
    {
      (void) std::allocator<char16_t>::~allocator ((struct allocator *) this);
    }
}
<D.63185>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char16_t*; _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>] (null)
;; enabled by -tree-original


{
  typedef struct _Integral _Integral;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_construct_aux<const char16_t*> ((struct basic_string *) this, __beg, __end, <<< Unknown tree: empty_class_expr >>>) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>] (null)
;; enabled by -tree-original


if (<<cleanup_point !std::__cxx11::basic_string<char16_t>::_M_is_local ((struct basic_string *) this)>>)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_destroy ((struct basic_string *) this, ((struct basic_string *) this)->D.26041._M_allocated_capacity) >>>>>;
  }


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::__cxx11::basic_string<char16_t>::allocator_type] (null)
;; enabled by -tree-original


return <retval> = (struct allocator_type &) &((struct basic_string *) this)->_M_dataplus;


;; Function constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char16_t>&; typename std::remove_reference<_Tp>::type = std::allocator<char16_t>] (null)
;; enabled by -tree-original


return <retval> = (struct type &) __t;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char16_t*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Alloc_hider *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator<char16_t>::allocator ((struct allocator *) this, (const struct allocator &) std::move<std::allocator<char16_t>&> ((struct allocator &) __a)) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Alloc_hider *) this)->_M_p = __dat) >>>>>;
    }
  catch
    {
      (void) std::allocator<char16_t>::~allocator ((struct allocator *) this);
    }
}
<D.63211>:;
return this;


;; Function bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char16_t *) std::__cxx11::basic_string<char16_t>::_M_data ((const struct basic_string *) this) == std::__cxx11::basic_string<char16_t>::_M_local_data ((const struct basic_string *) this)>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char16_t*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->_M_dataplus._M_p = __p) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->D.26041._M_allocated_capacity = __capacity) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->_M_string_length = __length) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_length ((struct basic_string *) this, __n) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<char16_t>::assign ((char_type &) (std::__cxx11::basic_string<char16_t>::_M_data ((struct basic_string *) this) + (sizetype) (__n * 2)), (const char_type &) &TARGET_EXPR <D.63222, 0>) >>>>>;


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = char32_t] (null)
;; enabled by -tree-original


{
  
}
<D.63224>:;
return this;


;; Function __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = char32_t] (null)
;; enabled by -tree-original


{
  
}
<D.63231>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char32_t*] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (char32_t *) std::pointer_traits<char32_t*>::pointer_to ((__make_not_void &) &((struct basic_string *) this)->D.27179._M_local_buf)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, const _Alloc&) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char32_t*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Alloc_hider *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator<char32_t>::allocator ((struct allocator *) this, __a) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Alloc_hider *) this)->_M_p = __dat) >>>>>;
    }
  catch
    {
      (void) std::allocator<char32_t>::~allocator ((struct allocator *) this);
    }
}
<D.63258>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = const char32_t*; _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>] (null)
;; enabled by -tree-original


{
  typedef struct _Integral _Integral;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_construct_aux<const char32_t*> ((struct basic_string *) this, __beg, __end, <<< Unknown tree: empty_class_expr >>>) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_dispose() [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>] (null)
;; enabled by -tree-original


if (<<cleanup_point !std::__cxx11::basic_string<char32_t>::_M_is_local ((struct basic_string *) this)>>)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_destroy ((struct basic_string *) this, ((struct basic_string *) this)->D.27179._M_allocated_capacity) >>>>>;
  }


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::__cxx11::basic_string<char32_t>::allocator_type] (null)
;; enabled by -tree-original


return <retval> = (struct allocator_type &) &((struct basic_string *) this)->_M_dataplus;


;; Function constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = std::allocator<char32_t>&; typename std::remove_reference<_Tp>::type = std::allocator<char32_t>] (null)
;; enabled by -tree-original


return <retval> = (struct type &) __t;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_Alloc_hider::_Alloc_hider(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer, _Alloc&&) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char32_t*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  *(struct _Alloc_hider *) this = {CLOBBER} >>>>>;
{
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator<char32_t>::allocator ((struct allocator *) this, (const struct allocator &) std::move<std::allocator<char32_t>&> ((struct allocator &) __a)) >>>>>;
  try
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct _Alloc_hider *) this)->_M_p = __dat) >>>>>;
    }
  catch
    {
      (void) std::allocator<char32_t>::~allocator ((struct allocator *) this);
    }
}
<D.63284>:;
return this;


;; Function bool std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_is_local() const [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char32_t *) std::__cxx11::basic_string<char32_t>::_M_data ((const struct basic_string *) this) == std::__cxx11::basic_string<char32_t>::_M_local_data ((const struct basic_string *) this)>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_data(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char32_t*] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->_M_dataplus._M_p = __p) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_capacity(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->D.27179._M_allocated_capacity = __capacity) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct basic_string *) this)->_M_string_length = __length) >>>>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_set_length(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_length ((struct basic_string *) this, __n) >>>>>;
<<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<char32_t>::assign ((char_type &) (std::__cxx11::basic_string<char32_t>::_M_data ((struct basic_string *) this) + (sizetype) (__n * 4)), (const char_type &) &TARGET_EXPR <D.63295, 0>) >>>>>;


;; Function T* SingletonPtr<T>::get() const [with T = PlatformMutex] (null)
;; enabled by -tree-original


if (((const struct SingletonPtr *) this)->_ptr == 0B)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  singleton_lock () >>>>>;
    if (((const struct SingletonPtr *) this)->_ptr == 0B)
      {
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((const struct SingletonPtr *) this)->_ptr = TARGET_EXPR <D.63315, operator new (1, (void *) &((const struct SingletonPtr *) this)->_data)>;, *(struct PlatformMutex *) D.63315 = <<< Unknown tree: aggr_init_expr
  4
  __ct_comp 
  D.63316
  (struct PlatformMutex *) <<< Unknown tree: void_cst >>> >>>;, (struct PlatformMutex *) D.63315;) >>>>>;
      }
    <<cleanup_point <<< Unknown tree: expr_stmt
  singleton_unlock () >>>>>;
  }
if (((const struct SingletonPtr *) this)->_ptr != (struct PlatformMutex *) &((const struct SingletonPtr *) this)->_data)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  mbed_assert_internal ((const char *) "_ptr == (T *)&_data", (const char *) "../mbed/platform/SingletonPtr.h", 104) >>>>>;
  }
return <retval> = ((const struct SingletonPtr *) this)->_ptr;


;; Function void mbed::Callback<R()>::generate(const F&) [with F = void (*)(); R = void] (null)
;; enabled by -tree-original


{
  static const struct ops ops = {.call=function_call, .move=function_move, .dtor=function_dtor};

  <<cleanup_point   static const struct ops ops = {.call=function_call, .move=function_move, .dtor=function_dtor};>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) memset ((void *) this, 0, 16) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (TARGET_EXPR <D.63363, (void *) TARGET_EXPR <D.63361, (struct Callback *) this>>;, TARGET_EXPR <D.63362, operator new (4, NON_LVALUE_EXPR <D.63363>)>;;, *(void (*<T1c70>) (void) *) D.63362 = (void (*<T1c70>) (void)) *f;, (void (*<T1c70>) (void) *) D.63362;) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Callback *) this)->_ops = &ops) >>>>>;
}


;; Function static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char; std::pointer_traits<_Tp*>::pointer = char*; std::__make_not_void<_Tp> = char] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (char *) std::addressof<char> ((char &) __r)>>;


;; Function std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<char>::new_allocator ((struct new_allocator *) this, (const struct new_allocator &) __a) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) __gnu_cxx::new_allocator<char>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.63370>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator_traits<std::allocator<char> >::deallocate ((struct allocator_type &) std::__cxx11::basic_string<char>::_M_get_allocator ((struct basic_string *) this), std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) this), __size + 1) >>>>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer = const char*] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char *) std::pointer_traits<const char*>::pointer_to ((const __make_not_void &) &((const struct basic_string *) this)->D.22924._M_local_buf)>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


{
  typedef struct _Integral _Integral;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_construct_aux<char*> ((struct basic_string *) this, __beg, __end, <<< Unknown tree: empty_class_expr >>>) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator) [with _InIterator = wchar_t*; _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


{
  typedef struct _Integral _Integral;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_construct_aux<wchar_t*> ((struct basic_string *) this, __beg, __end, <<< Unknown tree: empty_class_expr >>>) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator_traits<std::allocator<wchar_t> >::deallocate ((struct allocator_type &) std::__cxx11::basic_string<wchar_t>::_M_get_allocator ((struct basic_string *) this), std::__cxx11::basic_string<wchar_t>::_M_data ((struct basic_string *) this), __size + 1) >>>>>;


;; Function static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = wchar_t; std::pointer_traits<_Tp*>::pointer = wchar_t*; std::__make_not_void<_Tp> = wchar_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (wchar_t *) std::addressof<wchar_t> ((wchar_t &) __r)>>;


;; Function std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = wchar_t] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<wchar_t>::new_allocator ((struct new_allocator *) this, (const struct new_allocator &) __a) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) __gnu_cxx::new_allocator<wchar_t>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.63443>:;
return this;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer = const wchar_t*] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const wchar_t *) std::pointer_traits<const wchar_t*>::pointer_to ((const __make_not_void &) &((const struct basic_string *) this)->D.24361._M_local_buf)>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


{
  typedef struct _Tag _Tag;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_construct<const char*> ((struct basic_string *) this, __beg, __end, *(struct forward_iterator_tag &) &TARGET_EXPR <D.63580, {}>;, <<< Unknown tree: empty_class_expr >>>;) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const wchar_t*; _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


{
  typedef struct _Tag _Tag;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_construct<const wchar_t*> ((struct basic_string *) this, __beg, __end, *(struct forward_iterator_tag &) &TARGET_EXPR <D.63612, {}>;, <<< Unknown tree: empty_class_expr >>>;) >>>>>;
}


;; Function static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char16_t; std::pointer_traits<_Tp*>::pointer = char16_t*; std::__make_not_void<_Tp> = char16_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (char16_t *) std::addressof<char16_t> ((char16_t &) __r)>>;


;; Function std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char16_t] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<char16_t>::new_allocator ((struct new_allocator *) this, (const struct new_allocator &) __a) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) __gnu_cxx::new_allocator<char16_t>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.63631>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char16_t*; _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>] (null)
;; enabled by -tree-original


{
  typedef struct _Tag _Tag;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_construct<const char16_t*> ((struct basic_string *) this, __beg, __end, *(struct forward_iterator_tag &) &TARGET_EXPR <D.63656, {}>;, <<< Unknown tree: empty_class_expr >>>;) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator_traits<std::allocator<char16_t> >::deallocate ((struct allocator_type &) std::__cxx11::basic_string<char16_t>::_M_get_allocator ((struct basic_string *) this), std::__cxx11::basic_string<char16_t>::_M_data ((struct basic_string *) this), __size + 1) >>>>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer = const char16_t*] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char16_t *) std::pointer_traits<const char16_t*>::pointer_to ((const __make_not_void &) &((const struct basic_string *) this)->D.26041._M_local_buf)>>;


;; Function static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = char32_t; std::pointer_traits<_Tp*>::pointer = char32_t*; std::__make_not_void<_Tp> = char32_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (char32_t *) std::addressof<char32_t> ((char32_t &) __r)>>;


;; Function std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = char32_t] (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<char32_t>::new_allocator ((struct new_allocator *) this, (const struct new_allocator &) __a) >>>>>;
  try
    {
      
    }
  catch
    {
      (void) __gnu_cxx::new_allocator<char32_t>::~new_allocator ((struct new_allocator *) this);
    }
}
<D.63698>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = const char32_t*; _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>] (null)
;; enabled by -tree-original


{
  typedef struct _Tag _Tag;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_construct<const char32_t*> ((struct basic_string *) this, __beg, __end, *(struct forward_iterator_tag &) &TARGET_EXPR <D.63723, {}>;, <<< Unknown tree: empty_class_expr >>>;) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_destroy(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::allocator_traits<std::allocator<char32_t> >::deallocate ((struct allocator_type &) std::__cxx11::basic_string<char32_t>::_M_get_allocator ((struct basic_string *) this), std::__cxx11::basic_string<char32_t>::_M_data ((struct basic_string *) this), __size + 1) >>>>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_local_data() const [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::const_pointer = const char32_t*] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char32_t *) std::pointer_traits<const char32_t*>::pointer_to ((const __make_not_void &) &((const struct basic_string *) this)->D.27179._M_local_buf)>>;


;; Function static R mbed::Callback<R()>::function_call(const void*) [with F = void (*)(); R = void] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  p () >>>>>;
return;


;; Function static void mbed::Callback<R()>::function_move(void*, const void*) [with F = void (*)(); R = void] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) (TARGET_EXPR <D.63761, d>;, TARGET_EXPR <D.63762, operator new (4, NON_LVALUE_EXPR <D.63761>)>;;, *(void (*<T1c70>) (void) *) D.63762 = *(void (*<T1c70>) (void) *) p;, (void (*<T1c70>) (void) *) D.63762;) >>>>>;


;; Function static void mbed::Callback<R()>::function_dtor(void*) [with F = void (*)(); R = void] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  (void) *(void (*<T1c70>) (void) *) p >>>>>;


;; Function constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char] (null)
;; enabled by -tree-original


return <retval> = (char *) __r;


;; Function _Tp* std::addressof(_Tp&) [with _Tp = char] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__addressof<char> (__r)>>;


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char] (null)
;; enabled by -tree-original


{
  
}
<D.63771>:;
return this;


;; Function static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<char>; std::allocator_traits<std::allocator<_CharT> >::pointer = char*; std::allocator_traits<std::allocator<_CharT> >::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<char>::deallocate ((struct new_allocator *) __a, __p, __n) >>>>>;


;; Function static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char; std::pointer_traits<_Tp*>::pointer = const char*; std::__make_not_void<_Tp> = const char] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char *) std::addressof<const char> ((const char &) __r)>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


{
  typedef struct _Tag _Tag;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_construct<char*> ((struct basic_string *) this, __beg, __end, *(struct forward_iterator_tag &) &TARGET_EXPR <D.63783, {}>;, <<< Unknown tree: empty_class_expr >>>;) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct_aux(_InIterator, _InIterator, std::__false_type) [with _InIterator = wchar_t*; _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


{
  typedef struct _Tag _Tag;

  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_construct<wchar_t*> ((struct basic_string *) this, __beg, __end, *(struct forward_iterator_tag &) &TARGET_EXPR <D.63798, {}>;, <<< Unknown tree: empty_class_expr >>>;) >>>>>;
}


;; Function static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = wchar_t; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<wchar_t>; std::allocator_traits<std::allocator<_CharT> >::pointer = wchar_t*; std::allocator_traits<std::allocator<_CharT> >::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<wchar_t>::deallocate ((struct new_allocator *) __a, __p, __n) >>>>>;


;; Function constexpr _Tp* std::__addressof(_Tp&) [with _Tp = wchar_t] (null)
;; enabled by -tree-original


return <retval> = (wchar_t *) __r;


;; Function _Tp* std::addressof(_Tp&) [with _Tp = wchar_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__addressof<wchar_t> (__r)>>;


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = wchar_t] (null)
;; enabled by -tree-original


{
  
}
<D.63819>:;
return this;


;; Function static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const wchar_t; std::pointer_traits<_Tp*>::pointer = const wchar_t*; std::__make_not_void<_Tp> = const wchar_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const wchar_t *) std::addressof<const wchar_t> ((const wchar_t &) __r)>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


{
  size_type __dnew;

  if (<<cleanup_point __gnu_cxx::__is_null_pointer<const char> (__beg) && __beg != __end>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_logic_error ((const char *) "basic_string::_M_construct null not valid") >>>>>;
    }
    size_type __dnew;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__dnew = (size_type) std::distance<const char*> (__beg, __end)) >>>>>;
  if (__dnew > 15)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<char>::_M_create ((struct basic_string *) this, (size_type &) &__dnew, 0)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_capacity ((struct basic_string *) this, __dnew) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_S_copy_chars (std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) this), __beg, __end) >>>>>;
  if (0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_dispose ((struct basic_string *) this) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_set_length ((struct basic_string *) this, __dnew) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const wchar_t*; _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


{
  size_type __dnew;

  if (<<cleanup_point __gnu_cxx::__is_null_pointer<const wchar_t> (__beg) && __beg != __end>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_logic_error ((const char *) "basic_string::_M_construct null not valid") >>>>>;
    }
    size_type __dnew;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__dnew = (size_type) std::distance<const wchar_t*> (__beg, __end)) >>>>>;
  if (__dnew > 3)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<wchar_t>::_M_create ((struct basic_string *) this, (size_type &) &__dnew, 0)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_capacity ((struct basic_string *) this, __dnew) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_S_copy_chars (std::__cxx11::basic_string<wchar_t>::_M_data ((struct basic_string *) this), __beg, __end) >>>>>;
  if (0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_dispose ((struct basic_string *) this) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_set_length ((struct basic_string *) this, __dnew) >>>>>;
}


;; Function constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char16_t] (null)
;; enabled by -tree-original


return <retval> = (char16_t *) __r;


;; Function _Tp* std::addressof(_Tp&) [with _Tp = char16_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__addressof<char16_t> (__r)>>;


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char16_t] (null)
;; enabled by -tree-original


{
  
}
<D.64238>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char16_t*; _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>] (null)
;; enabled by -tree-original


{
  size_type __dnew;

  if (<<cleanup_point __gnu_cxx::__is_null_pointer<const char16_t> (__beg) && __beg != __end>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_logic_error ((const char *) "basic_string::_M_construct null not valid") >>>>>;
    }
    size_type __dnew;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__dnew = (size_type) std::distance<const char16_t*> (__beg, __end)) >>>>>;
  if (__dnew > 7)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<char16_t>::_M_create ((struct basic_string *) this, (size_type &) &__dnew, 0)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_capacity ((struct basic_string *) this, __dnew) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_S_copy_chars (std::__cxx11::basic_string<char16_t>::_M_data ((struct basic_string *) this), __beg, __end) >>>>>;
  if (0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_dispose ((struct basic_string *) this) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_M_set_length ((struct basic_string *) this, __dnew) >>>>>;
}


;; Function static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char16_t; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<char16_t>; std::allocator_traits<std::allocator<_CharT> >::pointer = char16_t*; std::allocator_traits<std::allocator<_CharT> >::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<char16_t>::deallocate ((struct new_allocator *) __a, __p, __n) >>>>>;


;; Function static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char16_t; std::pointer_traits<_Tp*>::pointer = const char16_t*; std::__make_not_void<_Tp> = const char16_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char16_t *) std::addressof<const char16_t> ((const char16_t &) __r)>>;


;; Function constexpr _Tp* std::__addressof(_Tp&) [with _Tp = char32_t] (null)
;; enabled by -tree-original


return <retval> = (char32_t *) __r;


;; Function _Tp* std::addressof(_Tp&) [with _Tp = char32_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__addressof<char32_t> (__r)>>;


;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = char32_t] (null)
;; enabled by -tree-original


{
  
}
<D.64464>:;
return this;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = const char32_t*; _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>] (null)
;; enabled by -tree-original


{
  size_type __dnew;

  if (<<cleanup_point __gnu_cxx::__is_null_pointer<const char32_t> (__beg) && __beg != __end>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_logic_error ((const char *) "basic_string::_M_construct null not valid") >>>>>;
    }
    size_type __dnew;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__dnew = (size_type) std::distance<const char32_t*> (__beg, __end)) >>>>>;
  if (__dnew > 3)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<char32_t>::_M_create ((struct basic_string *) this, (size_type &) &__dnew, 0)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_capacity ((struct basic_string *) this, __dnew) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_S_copy_chars (std::__cxx11::basic_string<char32_t>::_M_data ((struct basic_string *) this), __beg, __end) >>>>>;
  if (0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_dispose ((struct basic_string *) this) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_M_set_length ((struct basic_string *) this, __dnew) >>>>>;
}


;; Function static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char32_t; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<char32_t>; std::allocator_traits<std::allocator<_CharT> >::pointer = char32_t*; std::allocator_traits<std::allocator<_CharT> >::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __gnu_cxx::new_allocator<char32_t>::deallocate ((struct new_allocator *) __a, __p, __n) >>>>>;


;; Function static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = const char32_t; std::pointer_traits<_Tp*>::pointer = const char32_t*; std::__make_not_void<_Tp> = const char32_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (const char32_t *) std::addressof<const char32_t> ((const char32_t &) __r)>>;


;; Function void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  operator delete ((void *) __p, NON_LVALUE_EXPR <__t>) >>>>>;


;; Function constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char] (null)
;; enabled by -tree-original


return <retval> = (const char *) __r;


;; Function _Tp* std::addressof(_Tp&) [with _Tp = const char] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__addressof<const char> (__r)>>;


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = char*; _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


{
  size_type __dnew;

  if (<<cleanup_point __gnu_cxx::__is_null_pointer<char> (__beg) && __beg != __end>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_logic_error ((const char *) "basic_string::_M_construct null not valid") >>>>>;
    }
    size_type __dnew;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__dnew = (size_type) std::distance<char*> (__beg, __end)) >>>>>;
  if (__dnew > 15)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<char>::_M_create ((struct basic_string *) this, (size_type &) &__dnew, 0)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_capacity ((struct basic_string *) this, __dnew) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_S_copy_chars (std::__cxx11::basic_string<char>::_M_data ((struct basic_string *) this), __beg, __end) >>>>>;
  if (0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_dispose ((struct basic_string *) this) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_M_set_length ((struct basic_string *) this, __dnew) >>>>>;
}


;; Function void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_construct(_InIterator, _InIterator, std::forward_iterator_tag) [with _FwdIterator = wchar_t*; _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


{
  size_type __dnew;

  if (<<cleanup_point __gnu_cxx::__is_null_pointer<wchar_t> (__beg) && __beg != __end>>)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_logic_error ((const char *) "basic_string::_M_construct null not valid") >>>>>;
    }
    size_type __dnew;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (__dnew = (size_type) std::distance<wchar_t*> (__beg, __end)) >>>>>;
  if (__dnew > 3)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_data ((struct basic_string *) this, std::__cxx11::basic_string<wchar_t>::_M_create ((struct basic_string *) this, (size_type &) &__dnew, 0)) >>>>>;
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_capacity ((struct basic_string *) this, __dnew) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_S_copy_chars (std::__cxx11::basic_string<wchar_t>::_M_data ((struct basic_string *) this), __beg, __end) >>>>>;
  if (0)
    {
      <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_dispose ((struct basic_string *) this) >>>>>;
    }
  <<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_M_set_length ((struct basic_string *) this, __dnew) >>>>>;
}


;; Function void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = wchar_t; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  operator delete ((void *) __p, __t * 4) >>>>>;


;; Function constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const wchar_t] (null)
;; enabled by -tree-original


return <retval> = (const wchar_t *) __r;


;; Function _Tp* std::addressof(_Tp&) [with _Tp = const wchar_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__addressof<const wchar_t> (__r)>>;


;; Function bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char] (null)
;; enabled by -tree-original


return <retval> = __ptr == 0B;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const char*; typename std::iterator_traits< <template-parameter-1-1> >::iterator_category = std::random_access_iterator_tag] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.64737, {}>>>;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


return <retval> = __last - __first;


;; Function typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__distance<const char*> (__first, __last, TARGET_EXPR <D.64741, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>;


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_S_copy (__p, __k1, (size_type) (__k2 - __k1)) >>>>>;


;; Function bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const wchar_t] (null)
;; enabled by -tree-original


return <retval> = __ptr == 0B;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const wchar_t*; typename std::iterator_traits< <template-parameter-1-1> >::iterator_category = std::random_access_iterator_tag] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.64762, {}>>>;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const wchar_t*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


return <retval> = (__last - __first) /[ex] 4;


;; Function typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const wchar_t*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__distance<const wchar_t*> (__first, __last, TARGET_EXPR <D.64766, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>;


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_S_copy (__p, __k1, (size_type) ((__k2 - __k1) /[ex] 4)) >>>>>;


;; Function bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char16_t] (null)
;; enabled by -tree-original


return <retval> = __ptr == 0B;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const char16_t*; typename std::iterator_traits< <template-parameter-1-1> >::iterator_category = std::random_access_iterator_tag] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.64787, {}>>>;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char16_t*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


return <retval> = (__last - __first) /[ex] 2;


;; Function typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char16_t*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__distance<const char16_t*> (__first, __last, TARGET_EXPR <D.64791, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_create(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char16_t*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


if (<<cleanup_point *__capacity > std::__cxx11::basic_string<char16_t>::max_size ((struct basic_string *) this)>>)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_length_error ((const char *) "basic_string::_M_create") >>>>>;
  }
if (*__capacity > __old_capacity && *__capacity < __old_capacity * 2)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__capacity = __old_capacity * 2) >>>>>;
    if (<<cleanup_point *__capacity > std::__cxx11::basic_string<char16_t>::max_size ((struct basic_string *) this)>>)
      {
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__capacity = std::__cxx11::basic_string<char16_t>::max_size ((struct basic_string *) this)) >>>>>;
      }
  }
<<cleanup_point return <retval> = (char16_t *) std::allocator_traits<std::allocator<char16_t> >::allocate ((struct allocator_type &) std::__cxx11::basic_string<char16_t>::_M_get_allocator ((struct basic_string *) this), *__capacity + 1)>>;


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char16_t>::_S_copy (__p, __k1, (size_type) ((__k2 - __k1) /[ex] 2)) >>>>>;


;; Function void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char16_t; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  operator delete ((void *) __p, __t * 2) >>>>>;


;; Function constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char16_t] (null)
;; enabled by -tree-original


return <retval> = (const char16_t *) __r;


;; Function _Tp* std::addressof(_Tp&) [with _Tp = const char16_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__addressof<const char16_t> (__r)>>;


;; Function bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = const char32_t] (null)
;; enabled by -tree-original


return <retval> = __ptr == 0B;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::iterator_category std::__iterator_category(const _Iter&) [with _Iter = const char32_t*; typename std::iterator_traits< <template-parameter-1-1> >::iterator_category = std::random_access_iterator_tag] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.64820, {}>>>;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const char32_t*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


return <retval> = (__last - __first) /[ex] 4;


;; Function typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const char32_t*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__distance<const char32_t*> (__first, __last, TARGET_EXPR <D.64824, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>;


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_create(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::pointer = char32_t*; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


if (<<cleanup_point *__capacity > std::__cxx11::basic_string<char32_t>::max_size ((struct basic_string *) this)>>)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_length_error ((const char *) "basic_string::_M_create") >>>>>;
  }
if (*__capacity > __old_capacity && *__capacity < __old_capacity * 2)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__capacity = __old_capacity * 2) >>>>>;
    if (<<cleanup_point *__capacity > std::__cxx11::basic_string<char32_t>::max_size ((struct basic_string *) this)>>)
      {
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (*__capacity = std::__cxx11::basic_string<char32_t>::max_size ((struct basic_string *) this)) >>>>>;
      }
  }
<<cleanup_point return <retval> = (char32_t *) std::allocator_traits<std::allocator<char32_t> >::allocate ((struct allocator_type &) std::__cxx11::basic_string<char32_t>::_M_get_allocator ((struct basic_string *) this), *__capacity + 1)>>;


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, const _CharT*, const _CharT*) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char32_t>::_S_copy (__p, __k1, (size_type) ((__k2 - __k1) /[ex] 4)) >>>>>;


;; Function void __gnu_cxx::new_allocator<_Tp>::deallocate(_Tp*, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = char32_t; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  operator delete ((void *) __p, __t * 4) >>>>>;


;; Function constexpr _Tp* std::__addressof(_Tp&) [with _Tp = const char32_t] (null)
;; enabled by -tree-original


return <retval> = (const char32_t *) __r;


;; Function _Tp* std::addressof(_Tp&) [with _Tp = const char32_t] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__addressof<const char32_t> (__r)>>;


;; Function bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = char] (null)
;; enabled by -tree-original


return <retval> = __ptr == 0B;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::iterator_category std::__iterator_category(const _Iter&) [with _Iter = char*; typename std::iterator_traits< <template-parameter-1-1> >::iterator_category = std::random_access_iterator_tag] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.64853, {}>>>;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = char*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


return <retval> = __last - __first;


;; Function typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = char*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__distance<char*> (__first, __last, TARGET_EXPR <D.64857, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>;


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<char>::_S_copy (__p, (const char *) __k1, (size_type) (__k2 - __k1)) >>>>>;


;; Function bool __gnu_cxx::__is_null_pointer(_Type*) [with _Type = wchar_t] (null)
;; enabled by -tree-original


return <retval> = __ptr == 0B;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::iterator_category std::__iterator_category(const _Iter&) [with _Iter = wchar_t*; typename std::iterator_traits< <template-parameter-1-1> >::iterator_category = std::random_access_iterator_tag] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = TARGET_EXPR <D.64878, {}>>>;


;; Function constexpr typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = wchar_t*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


return <retval> = (__last - __first) /[ex] 4;


;; Function typename std::iterator_traits< <template-parameter-1-1> >::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = wchar_t*; typename std::iterator_traits< <template-parameter-1-1> >::difference_type = int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = std::__distance<wchar_t*> (__first, __last, TARGET_EXPR <D.64882, {}>;, <<< Unknown tree: empty_class_expr >>>;)>>;


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy_chars(_CharT*, _CharT*, _CharT*) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>] (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  std::__cxx11::basic_string<wchar_t>::_S_copy (__p, (const wchar_t *) __k1, (size_type) ((__k2 - __k1) /[ex] 4)) >>>>>;


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


if (__n == 1)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<char>::assign ((char_type &) NON_LVALUE_EXPR <__d>, (const char_type &) NON_LVALUE_EXPR <__s>) >>>>>;
  }
else
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) std::char_traits<char>::copy (__d, __s, __n) >>>>>;
  }


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = wchar_t; _Traits = std::char_traits<wchar_t>; _Alloc = std::allocator<wchar_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


if (__n == 1)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<wchar_t>::assign ((char_type &) NON_LVALUE_EXPR <__d>, (const char_type &) NON_LVALUE_EXPR <__s>) >>>>>;
  }
else
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) std::char_traits<wchar_t>::copy (__d, __s, __n) >>>>>;
  }


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::max_size() const [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (std::allocator_traits<std::allocator<char16_t> >::max_size ((const struct allocator_type &) std::__cxx11::basic_string<char16_t>::_M_get_allocator ((const struct basic_string *) this)) + 4294967295) / 2>>;


;; Function static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char16_t; std::allocator_traits<std::allocator<_CharT> >::pointer = char16_t*; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<char16_t>; std::allocator_traits<std::allocator<_CharT> >::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (char16_t *) __gnu_cxx::new_allocator<char16_t>::allocate ((struct new_allocator *) __a, __n, 0B)>>;


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


if (__n == 1)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<char16_t>::assign ((char_type &) NON_LVALUE_EXPR <__d>, (const char_type &) NON_LVALUE_EXPR <__s>) >>>>>;
  }
else
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) std::char_traits<char16_t>::copy (__d, __s, __n) >>>>>;
  }


;; Function std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::max_size() const [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (std::allocator_traits<std::allocator<char32_t> >::max_size ((const struct allocator_type &) std::__cxx11::basic_string<char32_t>::_M_get_allocator ((const struct basic_string *) this)) + 4294967295) / 2>>;


;; Function static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = char32_t; std::allocator_traits<std::allocator<_CharT> >::pointer = char32_t*; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<char32_t>; std::allocator_traits<std::allocator<_CharT> >::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = (char32_t *) __gnu_cxx::new_allocator<char32_t>::allocate ((struct new_allocator *) __a, __n, 0B)>>;


;; Function static void std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_S_copy(_CharT*, const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = unsigned int] (null)
;; enabled by -tree-original


if (__n == 1)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::char_traits<char32_t>::assign ((char_type &) NON_LVALUE_EXPR <__d>, (const char_type &) NON_LVALUE_EXPR <__s>) >>>>>;
  }
else
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  (void) std::char_traits<char32_t>::copy (__d, __s, __n) >>>>>;
  }


;; Function static std::allocator_traits<std::allocator<_CharT> >::size_type std::allocator_traits<std::allocator<_CharT> >::max_size(const allocator_type&) [with _Tp = char16_t; std::allocator_traits<std::allocator<_CharT> >::size_type = unsigned int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<char16_t>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::new_allocator<char16_t>::max_size ((const struct new_allocator *) __a)>>;


;; Function const allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() const [with _CharT = char16_t; _Traits = std::char_traits<char16_t>; _Alloc = std::allocator<char16_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::__cxx11::basic_string<char16_t>::allocator_type] (null)
;; enabled by -tree-original


return <retval> = (const struct allocator_type &) &((const struct basic_string *) this)->_M_dataplus;


;; Function constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = char16_t; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


return <retval> = 1073741823;


;; Function _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = char16_t; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


if (<<cleanup_point __gnu_cxx::new_allocator<char16_t>::_M_max_size ((struct new_allocator *) this) < __n>>)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_bad_alloc () >>>>>;
  }
<<cleanup_point return <retval> = (char16_t *) operator new (__n * 2)>>;


;; Function static std::allocator_traits<std::allocator<_CharT> >::size_type std::allocator_traits<std::allocator<_CharT> >::max_size(const allocator_type&) [with _Tp = char32_t; std::allocator_traits<std::allocator<_CharT> >::size_type = unsigned int; std::allocator_traits<std::allocator<_CharT> >::allocator_type = std::allocator<char32_t>] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::new_allocator<char32_t>::max_size ((const struct new_allocator *) __a)>>;


;; Function const allocator_type& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::_M_get_allocator() const [with _CharT = char32_t; _Traits = std::char_traits<char32_t>; _Alloc = std::allocator<char32_t>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::allocator_type = std::__cxx11::basic_string<char32_t>::allocator_type] (null)
;; enabled by -tree-original


return <retval> = (const struct allocator_type &) &((const struct basic_string *) this)->_M_dataplus;


;; Function constexpr __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::_M_max_size() const [with _Tp = char32_t; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


return <retval> = 536870911;


;; Function _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = char32_t; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


if (<<cleanup_point __gnu_cxx::new_allocator<char32_t>::_M_max_size ((struct new_allocator *) this) < __n>>)
  {
    <<cleanup_point <<< Unknown tree: expr_stmt
  std::__throw_bad_alloc () >>>>>;
  }
<<cleanup_point return <retval> = (char32_t *) operator new (__n * 4)>>;


;; Function __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = char16_t; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::new_allocator<char16_t>::_M_max_size ((const struct new_allocator *) this)>>;


;; Function __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = char32_t; __gnu_cxx::new_allocator<_Tp>::size_type = unsigned int] (null)
;; enabled by -tree-original


<<cleanup_point return <retval> = __gnu_cxx::new_allocator<char32_t>::_M_max_size ((const struct new_allocator *) this)>>;


;; Function virtual mbed::Serial::~Serial() (null)
;; enabled by -tree-original


{
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Serial *) this)->D.51717._vptr.SerialBase = &_ZTVN4mbed6SerialE + 8) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Serial *) this)->D.51718.D.50287.D.50110._vptr.FileHandle = &_ZTVN4mbed6SerialE + 40) >>>>>;
  <<cleanup_point <<< Unknown tree: expr_stmt
  (void) (((struct Serial *) this)->D.51718.D.50287.D.50111._vptr.FileBase = &_ZTVN4mbed6SerialE + 136) >>>>>;
  try
    {
      try
        {
          try
            {
              try
                {
                  try
                    {
                      
                    }
                  finally
                    {
                      (void) PlatformMutex::~PlatformMutex (&((struct Serial *) this)->_mutex);
                    }
                }
              finally
                {
                  (void) mbed::NonCopyable<mbed::Serial>::~NonCopyable ((struct NonCopyable *) this);
                }
            }
          finally
            {
              (void) mbed::Stream::~Stream (&((struct Serial *) this)->D.51718);
            }
        }
      finally
        {
          (void) mbed::SerialBase::~SerialBase (&((struct Serial *) this)->D.51717);
        }
    }
  finally
    {
      *(struct 
      {
        struct SerialBase D.51719;
        struct Stream D.51720;
        struct PlatformMutex _mutex;
      } &) this = {CLOBBER};
    }
}
<D.64916>:;
return this;


;; Function void __static_initialization_and_destruction_0(int, int) (null)
;; enabled by -tree-original


if (__initialize_p == 1)
  {
    if (__priority == 65535)
      {
        <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Serial::Serial (&pc, 56, 57, 115200) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) __aeabi_atexit ((void *) &pc, (void (*<Td7>) (void *)) __dt_comp , (void *) &__dso_handle) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::DigitalOut::DigitalOut (&myled, 16) >>>>>;
        <<< Unknown tree: expr_stmt
  <<< Unknown tree: void_cst >>> >>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  mbed::Timer::Timer (&timer) >>>>>;
        <<cleanup_point <<< Unknown tree: expr_stmt
  (void) __aeabi_atexit ((void *) &timer, (void (*<Td7>) (void *)) __dt_comp , (void *) &__dso_handle) >>>>>;
      }
  }


;; Function mbed::NonCopyable<T>::~NonCopyable() [with T = mbed::Serial] (null)
;; enabled by -tree-original


{
  
}
<D.64939>:;
return this;


;; Function (static initializers for ../main.cpp) (null)
;; enabled by -tree-original


<<cleanup_point <<< Unknown tree: expr_stmt
  __static_initialization_and_destruction_0 (1, 65535) >>>>>;

